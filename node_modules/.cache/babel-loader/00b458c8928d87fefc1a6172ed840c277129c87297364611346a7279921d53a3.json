{"ast":null,"code":"import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = _ref => {\n  let {\n    output,\n    parsedBody,\n    exceptionCtor,\n    errorCode\n  } = _ref;\n  const $metadata = deserializeMetadata(output);\n  const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n  const response = new exceptionCtor({\n    name: (parsedBody === null || parsedBody === void 0 ? void 0 : parsedBody.code) || (parsedBody === null || parsedBody === void 0 ? void 0 : parsedBody.Code) || errorCode || statusCode || \"UnknownError\",\n    $fault: \"client\",\n    $metadata\n  });\n  throw decorateServiceException(response, parsedBody);\n};\nexport const withBaseException = ExceptionCtor => {\n  return _ref2 => {\n    let {\n      output,\n      parsedBody,\n      errorCode\n    } = _ref2;\n    throwDefaultError({\n      output,\n      parsedBody,\n      exceptionCtor: ExceptionCtor,\n      errorCode\n    });\n  };\n};\nconst deserializeMetadata = output => {\n  var _ref3, _output$headers$xAmz;\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_ref3 = (_output$headers$xAmz = output.headers[\"x-amzn-requestid\"]) !== null && _output$headers$xAmz !== void 0 ? _output$headers$xAmz : output.headers[\"x-amzn-request-id\"]) !== null && _ref3 !== void 0 ? _ref3 : output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};","map":{"version":3,"names":["decorateServiceException","throwDefaultError","_ref","output","parsedBody","exceptionCtor","errorCode","$metadata","deserializeMetadata","statusCode","httpStatusCode","undefined","response","name","code","Code","$fault","withBaseException","ExceptionCtor","_ref2","_ref3","_output$headers$xAmz","requestId","headers","extendedRequestId","cfId"],"sources":["/Users/codinggents/Documents/lambdaforge/node_modules/@smithy/smithy-client/dist-es/default-error-handler.js"],"sourcesContent":["import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nexport const withBaseException = (ExceptionCtor) => {\n    return ({ output, parsedBody, errorCode }) => {\n        throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n    };\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,cAAc;AACvD,OAAO,MAAMC,iBAAiB,GAAGC,IAAA,IAAsD;EAAA,IAArD;IAAEC,MAAM;IAAEC,UAAU;IAAEC,aAAa;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EAC9E,MAAMK,SAAS,GAAGC,mBAAmB,CAACL,MAAM,CAAC;EAC7C,MAAMM,UAAU,GAAGF,SAAS,CAACG,cAAc,GAAGH,SAAS,CAACG,cAAc,GAAG,EAAE,GAAGC,SAAS;EACvF,MAAMC,QAAQ,GAAG,IAAIP,aAAa,CAAC;IAC/BQ,IAAI,EAAE,CAAAT,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEU,IAAI,MAAIV,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEW,IAAI,KAAIT,SAAS,IAAIG,UAAU,IAAI,cAAc;IACvFO,MAAM,EAAE,QAAQ;IAChBT;EACJ,CAAC,CAAC;EACF,MAAMP,wBAAwB,CAACY,QAAQ,EAAER,UAAU,CAAC;AACxD,CAAC;AACD,OAAO,MAAMa,iBAAiB,GAAIC,aAAa,IAAK;EAChD,OAAOC,KAAA,IAAuC;IAAA,IAAtC;MAAEhB,MAAM;MAAEC,UAAU;MAAEE;IAAU,CAAC,GAAAa,KAAA;IACrClB,iBAAiB,CAAC;MAAEE,MAAM;MAAEC,UAAU;MAAEC,aAAa,EAAEa,aAAa;MAAEZ;IAAU,CAAC,CAAC;EACtF,CAAC;AACL,CAAC;AACD,MAAME,mBAAmB,GAAIL,MAAM;EAAA,IAAAiB,KAAA,EAAAC,oBAAA;EAAA,OAAM;IACrCX,cAAc,EAAEP,MAAM,CAACM,UAAU;IACjCa,SAAS,GAAAF,KAAA,IAAAC,oBAAA,GAAElB,MAAM,CAACoB,OAAO,CAAC,kBAAkB,CAAC,cAAAF,oBAAA,cAAAA,oBAAA,GAAIlB,MAAM,CAACoB,OAAO,CAAC,mBAAmB,CAAC,cAAAH,KAAA,cAAAA,KAAA,GAAIjB,MAAM,CAACoB,OAAO,CAAC,kBAAkB,CAAC;IAC1HC,iBAAiB,EAAErB,MAAM,CAACoB,OAAO,CAAC,YAAY,CAAC;IAC/CE,IAAI,EAAEtB,MAAM,CAACoB,OAAO,CAAC,aAAa;EACtC,CAAC;AAAA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/codinggents/Documents/lambdaforge/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate, useParams } from 'react-router-dom';\nimport Header from './components/Header';\nimport StepIndicator from './components/StepIndicator';\nimport Marketplace from './components/Marketplace';\nimport AIArchitectureSuggestions from './components/AIArchitectureSuggestions';\nimport AWSRequiredStep from './components/steps/AWSRequiredStep';\nimport InfrastructureStep from './components/steps/InfrastructureStep';\nimport ComputeStep from './components/steps/ComputeStep';\nimport IntegrationStep from './components/steps/IntegrationStep';\nimport SecurityStep from './components/steps/SecurityStep';\nimport MonitoringStep from './components/steps/MonitoringStep';\nimport DeploymentStep from './components/steps/DeploymentStep';\nimport OptimizationStep from './components/steps/OptimizationStep';\nimport GenerateStep from './components/steps/GenerateStep';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [{\n  id: 1,\n  name: 'AWS Required',\n  component: AWSRequiredStep\n}, {\n  id: 2,\n  name: 'Infrastructure',\n  component: InfrastructureStep\n}, {\n  id: 3,\n  name: 'Compute',\n  component: ComputeStep\n}, {\n  id: 4,\n  name: 'Integration',\n  component: IntegrationStep\n}, {\n  id: 5,\n  name: 'Security',\n  component: SecurityStep\n}, {\n  id: 6,\n  name: 'Monitoring',\n  component: MonitoringStep\n}, {\n  id: 7,\n  name: 'Deployment',\n  component: DeploymentStep\n}, {\n  id: 8,\n  name: 'Optimization',\n  component: OptimizationStep\n}, {\n  id: 9,\n  name: 'Generate',\n  component: GenerateStep\n}];\nfunction AppContent() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    stepId\n  } = useParams();\n  const [currentStep, setCurrentStep] = useState(1);\n\n  // Sync URL parameter with current step\n  useEffect(() => {\n    const urlStep = parseInt(stepId);\n    if (urlStep && urlStep >= 1 && urlStep <= steps.length && urlStep !== currentStep) {\n      setCurrentStep(urlStep);\n    }\n  }, [stepId, currentStep]);\n\n  // Sync current step with URL when step changes programmatically\n  useEffect(() => {\n    const urlStep = parseInt(stepId);\n    if (urlStep !== currentStep) {\n      navigate(`/step/${currentStep}`, {\n        replace: true\n      });\n    }\n  }, [currentStep, stepId, navigate]);\n  const [isMarketplaceOpen, setIsMarketplaceOpen] = useState(false);\n  const [environments, setEnvironments] = useState([{\n    id: 'dev',\n    name: 'Development',\n    status: 'active',\n    cost: 45\n  }, {\n    id: 'staging',\n    name: 'Staging',\n    status: 'inactive',\n    cost: 0\n  }, {\n    id: 'prod',\n    name: 'Production',\n    status: 'inactive',\n    cost: 0\n  }]);\n  const [activeEnvironment, setActiveEnvironment] = useState('dev');\n  const [formData, setFormData] = useState({\n    // AWS Configuration\n    projectName: '',\n    awsRegion: 'us-east-1',\n    environment: 'Development',\n    awsAccessKeyId: '',\n    awsSecretAccessKey: '',\n    vpcCidrBlock: '10.0.0.0/16',\n    // Infrastructure\n    selectedInfrastructure: [],\n    // Compute\n    selectedCompute: [],\n    // Integration\n    selectedIntegration: [],\n    // Security\n    selectedSecurity: [],\n    // Monitoring\n    selectedMonitoring: [],\n    // Deployment\n    selectedDeployment: [],\n    // Optimization\n    selectedOptimization: []\n  });\n  const updateFormData = newData => {\n    setFormData(prev => ({\n      ...prev,\n      ...newData\n    }));\n  };\n  const handleMarketplaceSelect = packageData => {\n    setFormData(prev => ({\n      ...prev,\n      ...packageData\n    }));\n    setCurrentStep(9); // Jump to Generate step\n    navigate('/step/9');\n  };\n  const handleAISuggestion = suggestionData => {\n    setFormData(prev => ({\n      ...prev,\n      ...suggestionData\n    }));\n  };\n  const resetAllData = () => {\n    // Reset form data to initial state\n    setFormData({\n      // AWS Configuration\n      projectName: '',\n      awsRegion: 'us-east-1',\n      environment: 'Development',\n      awsAccessKeyId: '',\n      awsSecretAccessKey: '',\n      vpcCidrBlock: '10.0.0.0/16',\n      // Infrastructure\n      selectedInfrastructure: [],\n      // Compute\n      selectedCompute: [],\n      // Integration\n      selectedIntegration: [],\n      // Security\n      selectedSecurity: [],\n      // Monitoring\n      selectedMonitoring: [],\n      // Deployment\n      selectedDeployment: [],\n      // Optimization\n      selectedOptimization: []\n    });\n\n    // Reset environments\n    setEnvironments([{\n      id: 'dev',\n      name: 'Development',\n      status: 'active',\n      cost: 45\n    }, {\n      id: 'staging',\n      name: 'Staging',\n      status: 'inactive',\n      cost: 0\n    }, {\n      id: 'prod',\n      name: 'Production',\n      status: 'inactive',\n      cost: 0\n    }]);\n    setActiveEnvironment('dev');\n\n    // Clear undo history\n    localStorage.removeItem('lambdaforge-applied-suggestions');\n\n    // Go to first step\n    setCurrentStep(1);\n    navigate('/step/1');\n  };\n  const goToHome = () => {\n    setCurrentStep(1);\n    navigate('/step/1');\n  };\n  const createEnvironment = envType => {\n    const newEnv = {\n      id: `${envType}-${Date.now()}`,\n      name: envType.charAt(0).toUpperCase() + envType.slice(1),\n      status: 'deploying',\n      cost: 0\n    };\n    setEnvironments(prev => [...prev, newEnv]);\n\n    // Simulate deployment\n    setTimeout(() => {\n      setEnvironments(prev => prev.map(env => env.id === newEnv.id ? {\n        ...env,\n        status: 'active',\n        cost: Math.floor(Math.random() * 200) + 50\n      } : env));\n    }, 5000);\n  };\n  const nextStep = () => {\n    if (currentStep < steps.length) {\n      const newStep = currentStep + 1;\n      setCurrentStep(newStep);\n      navigate(`/step/${newStep}`);\n    }\n  };\n  const prevStep = () => {\n    if (currentStep > 1) {\n      const newStep = currentStep - 1;\n      setCurrentStep(newStep);\n      navigate(`/step/${newStep}`);\n    }\n  };\n  const CurrentStepComponent = steps[currentStep - 1].component;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-aws-gray-25\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onMarketplaceOpen: () => setIsMarketplaceOpen(true),\n      onReset: resetAllData,\n      onHomeClick: goToHome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marketplace, {\n      isOpen: isMarketplaceOpen,\n      onClose: () => setIsMarketplaceOpen(false),\n      onSelectPackage: handleMarketplaceSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-full mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(StepIndicator, {\n        steps: steps,\n        currentStep: currentStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), currentStep > 2 && /*#__PURE__*/_jsxDEV(AIArchitectureSuggestions, {\n        formData: formData,\n        onApplySuggestion: handleAISuggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this), currentStep === 9 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border border-aws-gray-200 rounded-lg p-6 mb-6 shadow-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold text-aws-gray-800 mb-4 flex items-center\",\n          children: \"\\uD83C\\uDF0D Environment Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: environments.map(env => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `border rounded-lg p-4 cursor-pointer transition-all duration-200 ${activeEnvironment === env.id ? 'border-aws-smile bg-aws-orange-pale shadow-md' : 'border-aws-gray-200 hover:border-aws-gray-300 hover:shadow-sm'}`,\n            onClick: () => setActiveEnvironment(env.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-bold text-aws-gray-800\",\n                children: env.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-2 py-1 text-xs font-medium rounded ${env.status === 'active' ? 'bg-aws-success-50 text-aws-success-700' : env.status === 'deploying' ? 'bg-aws-warning-50 text-aws-warning-700' : 'bg-aws-gray-100 text-aws-gray-600'}`,\n                children: env.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-aws-gray-600 font-medium\",\n              children: [\"Cost: $\", env.cost, \"/month\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this), env.status === 'inactive' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                createEnvironment(env.name.toLowerCase());\n              },\n              className: \"mt-2 w-full px-3 py-1 bg-aws-smile text-white text-xs font-bold rounded hover:bg-aws-orange-dark transition-colors duration-200 shadow-sm\",\n              children: [\"Deploy to \", env.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 23\n            }, this)]\n          }, env.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border border-aws-gray-200 rounded-lg shadow-card p-8\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/step/1\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/step/:stepId\",\n            element: /*#__PURE__*/_jsxDEV(CurrentStepComponent, {\n              formData: formData,\n              updateFormData: updateFormData,\n              nextStep: nextStep,\n              prevStep: prevStep,\n              currentStep: currentStep,\n              totalSteps: steps.length,\n              environments: environments,\n              activeEnvironment: activeEnvironment,\n              onCreateEnvironment: createEnvironment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_s(AppContent, \"YUQaK4q1VA6Cx9qWhpsCsg+e764=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","useParams","Header","StepIndicator","Marketplace","AIArchitectureSuggestions","AWSRequiredStep","InfrastructureStep","ComputeStep","IntegrationStep","SecurityStep","MonitoringStep","DeploymentStep","OptimizationStep","GenerateStep","jsxDEV","_jsxDEV","steps","id","name","component","AppContent","_s","navigate","stepId","currentStep","setCurrentStep","urlStep","parseInt","length","replace","isMarketplaceOpen","setIsMarketplaceOpen","environments","setEnvironments","status","cost","activeEnvironment","setActiveEnvironment","formData","setFormData","projectName","awsRegion","environment","awsAccessKeyId","awsSecretAccessKey","vpcCidrBlock","selectedInfrastructure","selectedCompute","selectedIntegration","selectedSecurity","selectedMonitoring","selectedDeployment","selectedOptimization","updateFormData","newData","prev","handleMarketplaceSelect","packageData","handleAISuggestion","suggestionData","resetAllData","localStorage","removeItem","goToHome","createEnvironment","envType","newEnv","Date","now","charAt","toUpperCase","slice","setTimeout","map","env","Math","floor","random","nextStep","newStep","prevStep","CurrentStepComponent","className","children","onMarketplaceOpen","onReset","onHomeClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","onSelectPackage","onApplySuggestion","onClick","e","stopPropagation","toLowerCase","path","element","to","totalSteps","onCreateEnvironment","_c","App","_c2","$RefreshReg$"],"sources":["/Users/codinggents/Documents/lambdaforge/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate, useParams } from 'react-router-dom';\nimport Header from './components/Header';\nimport StepIndicator from './components/StepIndicator';\nimport Marketplace from './components/Marketplace';\nimport AIArchitectureSuggestions from './components/AIArchitectureSuggestions';\nimport AWSRequiredStep from './components/steps/AWSRequiredStep';\nimport InfrastructureStep from './components/steps/InfrastructureStep';\nimport ComputeStep from './components/steps/ComputeStep';\nimport IntegrationStep from './components/steps/IntegrationStep';\nimport SecurityStep from './components/steps/SecurityStep';\nimport MonitoringStep from './components/steps/MonitoringStep';\nimport DeploymentStep from './components/steps/DeploymentStep';\nimport OptimizationStep from './components/steps/OptimizationStep';\nimport GenerateStep from './components/steps/GenerateStep';\nimport './App.css';\n\nconst steps = [\n  { id: 1, name: 'AWS Required', component: AWSRequiredStep },\n  { id: 2, name: 'Infrastructure', component: InfrastructureStep },\n  { id: 3, name: 'Compute', component: ComputeStep },\n  { id: 4, name: 'Integration', component: IntegrationStep },\n  { id: 5, name: 'Security', component: SecurityStep },\n  { id: 6, name: 'Monitoring', component: MonitoringStep },\n  { id: 7, name: 'Deployment', component: DeploymentStep },\n  { id: 8, name: 'Optimization', component: OptimizationStep },\n  { id: 9, name: 'Generate', component: GenerateStep },\n];\n\nfunction AppContent() {\n  const navigate = useNavigate();\n  const { stepId } = useParams();\n  const [currentStep, setCurrentStep] = useState(1);\n  \n  // Sync URL parameter with current step\n  useEffect(() => {\n    const urlStep = parseInt(stepId);\n    if (urlStep && urlStep >= 1 && urlStep <= steps.length && urlStep !== currentStep) {\n      setCurrentStep(urlStep);\n    }\n  }, [stepId, currentStep]);\n\n  // Sync current step with URL when step changes programmatically\n  useEffect(() => {\n    const urlStep = parseInt(stepId);\n    if (urlStep !== currentStep) {\n      navigate(`/step/${currentStep}`, { replace: true });\n    }\n  }, [currentStep, stepId, navigate]);\n\n  const [isMarketplaceOpen, setIsMarketplaceOpen] = useState(false);\n  const [environments, setEnvironments] = useState([\n    { id: 'dev', name: 'Development', status: 'active', cost: 45 },\n    { id: 'staging', name: 'Staging', status: 'inactive', cost: 0 },\n    { id: 'prod', name: 'Production', status: 'inactive', cost: 0 }\n  ]);\n  const [activeEnvironment, setActiveEnvironment] = useState('dev');\n  \n  const [formData, setFormData] = useState({\n    // AWS Configuration\n    projectName: '',\n    awsRegion: 'us-east-1',\n    environment: 'Development',\n    awsAccessKeyId: '',\n    awsSecretAccessKey: '',\n    vpcCidrBlock: '10.0.0.0/16',\n    \n    // Infrastructure\n    selectedInfrastructure: [],\n    \n    // Compute\n    selectedCompute: [],\n    \n    // Integration\n    selectedIntegration: [],\n    \n    // Security\n    selectedSecurity: [],\n    \n    // Monitoring\n    selectedMonitoring: [],\n    \n    // Deployment\n    selectedDeployment: [],\n    \n    // Optimization\n    selectedOptimization: [],\n  });\n\n  const updateFormData = (newData) => {\n    setFormData(prev => ({ ...prev, ...newData }));\n  };\n\n  const handleMarketplaceSelect = (packageData) => {\n    setFormData(prev => ({ ...prev, ...packageData }));\n    setCurrentStep(9); // Jump to Generate step\n    navigate('/step/9');\n  };\n\n  const handleAISuggestion = (suggestionData) => {\n    setFormData(prev => ({ ...prev, ...suggestionData }));\n  };\n\n  const resetAllData = () => {\n    // Reset form data to initial state\n    setFormData({\n      // AWS Configuration\n      projectName: '',\n      awsRegion: 'us-east-1',\n      environment: 'Development',\n      awsAccessKeyId: '',\n      awsSecretAccessKey: '',\n      vpcCidrBlock: '10.0.0.0/16',\n      \n      // Infrastructure\n      selectedInfrastructure: [],\n      \n      // Compute\n      selectedCompute: [],\n      \n      // Integration\n      selectedIntegration: [],\n      \n      // Security\n      selectedSecurity: [],\n      \n      // Monitoring\n      selectedMonitoring: [],\n      \n      // Deployment\n      selectedDeployment: [],\n      \n      // Optimization\n      selectedOptimization: [],\n    });\n\n    // Reset environments\n    setEnvironments([\n      { id: 'dev', name: 'Development', status: 'active', cost: 45 },\n      { id: 'staging', name: 'Staging', status: 'inactive', cost: 0 },\n      { id: 'prod', name: 'Production', status: 'inactive', cost: 0 }\n    ]);\n    setActiveEnvironment('dev');\n\n    // Clear undo history\n    localStorage.removeItem('lambdaforge-applied-suggestions');\n\n    // Go to first step\n    setCurrentStep(1);\n    navigate('/step/1');\n  };\n\n  const goToHome = () => {\n    setCurrentStep(1);\n    navigate('/step/1');\n  };\n\n  const createEnvironment = (envType) => {\n    const newEnv = {\n      id: `${envType}-${Date.now()}`,\n      name: envType.charAt(0).toUpperCase() + envType.slice(1),\n      status: 'deploying',\n      cost: 0\n    };\n    setEnvironments(prev => [...prev, newEnv]);\n    \n    // Simulate deployment\n    setTimeout(() => {\n      setEnvironments(prev => prev.map(env => \n        env.id === newEnv.id \n          ? { ...env, status: 'active', cost: Math.floor(Math.random() * 200) + 50 }\n          : env\n      ));\n    }, 5000);\n  };\n\n  const nextStep = () => {\n    if (currentStep < steps.length) {\n      const newStep = currentStep + 1;\n      setCurrentStep(newStep);\n      navigate(`/step/${newStep}`);\n    }\n  };\n\n  const prevStep = () => {\n    if (currentStep > 1) {\n      const newStep = currentStep - 1;\n      setCurrentStep(newStep);\n      navigate(`/step/${newStep}`);\n    }\n  };\n\n  const CurrentStepComponent = steps[currentStep - 1].component;\n\n  return (\n    <div className=\"min-h-screen bg-aws-gray-25\">\n      <Header \n        onMarketplaceOpen={() => setIsMarketplaceOpen(true)}\n        onReset={resetAllData}\n        onHomeClick={goToHome}\n      />\n        <Marketplace \n          isOpen={isMarketplaceOpen}\n          onClose={() => setIsMarketplaceOpen(false)}\n          onSelectPackage={handleMarketplaceSelect}\n        />\n        <div className=\"max-w-full mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <StepIndicator steps={steps} currentStep={currentStep} />\n          \n          {/* AI Suggestions - Show after step 2 */}\n          {currentStep > 2 && (\n            <AIArchitectureSuggestions \n              formData={formData}\n              onApplySuggestion={handleAISuggestion}\n            />\n          )}\n          \n          {/* Environment Management Panel - Show on Generate step */}\n          {currentStep === 9 && (\n            <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6 mb-6 shadow-card\">\n              <h3 className=\"text-lg font-bold text-aws-gray-800 mb-4 flex items-center\">\n                🌍 Environment Management\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {environments.map((env) => (\n                  <div \n                    key={env.id}\n                    className={`border rounded-lg p-4 cursor-pointer transition-all duration-200 ${\n                      activeEnvironment === env.id \n                        ? 'border-aws-smile bg-aws-orange-pale shadow-md' \n                        : 'border-aws-gray-200 hover:border-aws-gray-300 hover:shadow-sm'\n                    }`}\n                    onClick={() => setActiveEnvironment(env.id)}\n                  >\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h4 className=\"font-bold text-aws-gray-800\">{env.name}</h4>\n                      <span className={`px-2 py-1 text-xs font-medium rounded ${\n                        env.status === 'active' ? 'bg-aws-success-50 text-aws-success-700' :\n                        env.status === 'deploying' ? 'bg-aws-warning-50 text-aws-warning-700' :\n                        'bg-aws-gray-100 text-aws-gray-600'\n                      }`}>\n                        {env.status}\n                      </span>\n                    </div>\n                    <div className=\"text-sm text-aws-gray-600 font-medium\">\n                      Cost: ${env.cost}/month\n                    </div>\n                    {env.status === 'inactive' && (\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          createEnvironment(env.name.toLowerCase());\n                        }}\n                        className=\"mt-2 w-full px-3 py-1 bg-aws-smile text-white text-xs font-bold rounded hover:bg-aws-orange-dark transition-colors duration-200 shadow-sm\"\n                      >\n                        Deploy to {env.name}\n                      </button>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          <div className=\"bg-white border border-aws-gray-200 rounded-lg shadow-card p-8\">\n            <Routes>\n              <Route path=\"/\" element={<Navigate to=\"/step/1\" replace />} />\n              <Route \n                path=\"/step/:stepId\" \n                element={\n                  <CurrentStepComponent\n                    formData={formData}\n                    updateFormData={updateFormData}\n                    nextStep={nextStep}\n                    prevStep={prevStep}\n                    currentStep={currentStep}\n                    totalSteps={steps.length}\n                    environments={environments}\n                    activeEnvironment={activeEnvironment}\n                    onCreateEnvironment={createEnvironment}\n                  />\n                } \n              />\n            </Routes>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <AppContent />\n    </Router>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAC3G,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,yBAAyB,MAAM,wCAAwC;AAC9E,OAAOC,eAAe,MAAM,oCAAoC;AAChE,OAAOC,kBAAkB,MAAM,uCAAuC;AACtE,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAOC,eAAe,MAAM,oCAAoC;AAChE,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,OAAOC,cAAc,MAAM,mCAAmC;AAC9D,OAAOC,cAAc,MAAM,mCAAmC;AAC9D,OAAOC,gBAAgB,MAAM,qCAAqC;AAClE,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,KAAK,GAAG,CACZ;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,cAAc;EAAEC,SAAS,EAAEd;AAAgB,CAAC,EAC3D;EAAEY,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAEb;AAAmB,CAAC,EAChE;EAAEW,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEZ;AAAY,CAAC,EAClD;EAAEU,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAEX;AAAgB,CAAC,EAC1D;EAAES,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEV;AAAa,CAAC,EACpD;EAAEQ,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAET;AAAe,CAAC,EACxD;EAAEO,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAER;AAAe,CAAC,EACxD;EAAEM,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,cAAc;EAAEC,SAAS,EAAEP;AAAiB,CAAC,EAC5D;EAAEK,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEN;AAAa,CAAC,CACrD;AAED,SAASO,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEwB;EAAO,CAAC,GAAGvB,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;;EAEjD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMiC,OAAO,GAAGC,QAAQ,CAACJ,MAAM,CAAC;IAChC,IAAIG,OAAO,IAAIA,OAAO,IAAI,CAAC,IAAIA,OAAO,IAAIV,KAAK,CAACY,MAAM,IAAIF,OAAO,KAAKF,WAAW,EAAE;MACjFC,cAAc,CAACC,OAAO,CAAC;IACzB;EACF,CAAC,EAAE,CAACH,MAAM,EAAEC,WAAW,CAAC,CAAC;;EAEzB;EACA/B,SAAS,CAAC,MAAM;IACd,MAAMiC,OAAO,GAAGC,QAAQ,CAACJ,MAAM,CAAC;IAChC,IAAIG,OAAO,KAAKF,WAAW,EAAE;MAC3BF,QAAQ,CAAC,SAASE,WAAW,EAAE,EAAE;QAAEK,OAAO,EAAE;MAAK,CAAC,CAAC;IACrD;EACF,CAAC,EAAE,CAACL,WAAW,EAAED,MAAM,EAAED,QAAQ,CAAC,CAAC;EAEnC,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACwC,YAAY,EAAEC,eAAe,CAAC,GAAGzC,QAAQ,CAAC,CAC/C;IAAEyB,EAAE,EAAE,KAAK;IAAEC,IAAI,EAAE,aAAa;IAAEgB,MAAM,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAG,CAAC,EAC9D;IAAElB,EAAE,EAAE,SAAS;IAAEC,IAAI,EAAE,SAAS;IAAEgB,MAAM,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAE,CAAC,EAC/D;IAAElB,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE,YAAY;IAAEgB,MAAM,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAE,CAAC,CAChE,CAAC;EACF,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAM,CAAC8C,QAAQ,EAAEC,WAAW,CAAC,GAAG/C,QAAQ,CAAC;IACvC;IACAgD,WAAW,EAAE,EAAE;IACfC,SAAS,EAAE,WAAW;IACtBC,WAAW,EAAE,aAAa;IAC1BC,cAAc,EAAE,EAAE;IAClBC,kBAAkB,EAAE,EAAE;IACtBC,YAAY,EAAE,aAAa;IAE3B;IACAC,sBAAsB,EAAE,EAAE;IAE1B;IACAC,eAAe,EAAE,EAAE;IAEnB;IACAC,mBAAmB,EAAE,EAAE;IAEvB;IACAC,gBAAgB,EAAE,EAAE;IAEpB;IACAC,kBAAkB,EAAE,EAAE;IAEtB;IACAC,kBAAkB,EAAE,EAAE;IAEtB;IACAC,oBAAoB,EAAE;EACxB,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAIC,OAAO,IAAK;IAClCf,WAAW,CAACgB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,GAAGD;IAAQ,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,MAAME,uBAAuB,GAAIC,WAAW,IAAK;IAC/ClB,WAAW,CAACgB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,GAAGE;IAAY,CAAC,CAAC,CAAC;IAClDhC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACnBH,QAAQ,CAAC,SAAS,CAAC;EACrB,CAAC;EAED,MAAMoC,kBAAkB,GAAIC,cAAc,IAAK;IAC7CpB,WAAW,CAACgB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,GAAGI;IAAe,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACArB,WAAW,CAAC;MACV;MACAC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,WAAW;MACtBC,WAAW,EAAE,aAAa;MAC1BC,cAAc,EAAE,EAAE;MAClBC,kBAAkB,EAAE,EAAE;MACtBC,YAAY,EAAE,aAAa;MAE3B;MACAC,sBAAsB,EAAE,EAAE;MAE1B;MACAC,eAAe,EAAE,EAAE;MAEnB;MACAC,mBAAmB,EAAE,EAAE;MAEvB;MACAC,gBAAgB,EAAE,EAAE;MAEpB;MACAC,kBAAkB,EAAE,EAAE;MAEtB;MACAC,kBAAkB,EAAE,EAAE;MAEtB;MACAC,oBAAoB,EAAE;IACxB,CAAC,CAAC;;IAEF;IACAnB,eAAe,CAAC,CACd;MAAEhB,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,aAAa;MAAEgB,MAAM,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAG,CAAC,EAC9D;MAAElB,EAAE,EAAE,SAAS;MAAEC,IAAI,EAAE,SAAS;MAAEgB,MAAM,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAE,CAAC,EAC/D;MAAElB,EAAE,EAAE,MAAM;MAAEC,IAAI,EAAE,YAAY;MAAEgB,MAAM,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAE,CAAC,CAChE,CAAC;IACFE,oBAAoB,CAAC,KAAK,CAAC;;IAE3B;IACAwB,YAAY,CAACC,UAAU,CAAC,iCAAiC,CAAC;;IAE1D;IACArC,cAAc,CAAC,CAAC,CAAC;IACjBH,QAAQ,CAAC,SAAS,CAAC;EACrB,CAAC;EAED,MAAMyC,QAAQ,GAAGA,CAAA,KAAM;IACrBtC,cAAc,CAAC,CAAC,CAAC;IACjBH,QAAQ,CAAC,SAAS,CAAC;EACrB,CAAC;EAED,MAAM0C,iBAAiB,GAAIC,OAAO,IAAK;IACrC,MAAMC,MAAM,GAAG;MACbjD,EAAE,EAAE,GAAGgD,OAAO,IAAIE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;MAC9BlD,IAAI,EAAE+C,OAAO,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGL,OAAO,CAACM,KAAK,CAAC,CAAC,CAAC;MACxDrC,MAAM,EAAE,WAAW;MACnBC,IAAI,EAAE;IACR,CAAC;IACDF,eAAe,CAACsB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEW,MAAM,CAAC,CAAC;;IAE1C;IACAM,UAAU,CAAC,MAAM;MACfvC,eAAe,CAACsB,IAAI,IAAIA,IAAI,CAACkB,GAAG,CAACC,GAAG,IAClCA,GAAG,CAACzD,EAAE,KAAKiD,MAAM,CAACjD,EAAE,GAChB;QAAE,GAAGyD,GAAG;QAAExC,MAAM,EAAE,QAAQ;QAAEC,IAAI,EAAEwC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG;MAAG,CAAC,GACxEH,GACN,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMI,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAItD,WAAW,GAAGR,KAAK,CAACY,MAAM,EAAE;MAC9B,MAAMmD,OAAO,GAAGvD,WAAW,GAAG,CAAC;MAC/BC,cAAc,CAACsD,OAAO,CAAC;MACvBzD,QAAQ,CAAC,SAASyD,OAAO,EAAE,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIxD,WAAW,GAAG,CAAC,EAAE;MACnB,MAAMuD,OAAO,GAAGvD,WAAW,GAAG,CAAC;MAC/BC,cAAc,CAACsD,OAAO,CAAC;MACvBzD,QAAQ,CAAC,SAASyD,OAAO,EAAE,CAAC;IAC9B;EACF,CAAC;EAED,MAAME,oBAAoB,GAAGjE,KAAK,CAACQ,WAAW,GAAG,CAAC,CAAC,CAACL,SAAS;EAE7D,oBACEJ,OAAA;IAAKmE,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1CpE,OAAA,CAACd,MAAM;MACLmF,iBAAiB,EAAEA,CAAA,KAAMrD,oBAAoB,CAAC,IAAI,CAAE;MACpDsD,OAAO,EAAEzB,YAAa;MACtB0B,WAAW,EAAEvB;IAAS;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACA3E,OAAA,CAACZ,WAAW;MACVwF,MAAM,EAAE7D,iBAAkB;MAC1B8D,OAAO,EAAEA,CAAA,KAAM7D,oBAAoB,CAAC,KAAK,CAAE;MAC3C8D,eAAe,EAAErC;IAAwB;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACF3E,OAAA;MAAKmE,SAAS,EAAC,8CAA8C;MAAAC,QAAA,gBAC3DpE,OAAA,CAACb,aAAa;QAACc,KAAK,EAAEA,KAAM;QAACQ,WAAW,EAAEA;MAAY;QAAA+D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGxDlE,WAAW,GAAG,CAAC,iBACdT,OAAA,CAACX,yBAAyB;QACxBkC,QAAQ,EAAEA,QAAS;QACnBwD,iBAAiB,EAAEpC;MAAmB;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CACF,EAGAlE,WAAW,KAAK,CAAC,iBAChBT,OAAA;QAAKmE,SAAS,EAAC,qEAAqE;QAAAC,QAAA,gBAClFpE,OAAA;UAAImE,SAAS,EAAC,4DAA4D;UAAAC,QAAA,EAAC;QAE3E;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL3E,OAAA;UAAKmE,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EACnDnD,YAAY,CAACyC,GAAG,CAAEC,GAAG,iBACpB3D,OAAA;YAEEmE,SAAS,EAAE,oEACT9C,iBAAiB,KAAKsC,GAAG,CAACzD,EAAE,GACxB,+CAA+C,GAC/C,+DAA+D,EAClE;YACH8E,OAAO,EAAEA,CAAA,KAAM1D,oBAAoB,CAACqC,GAAG,CAACzD,EAAE,CAAE;YAAAkE,QAAA,gBAE5CpE,OAAA;cAAKmE,SAAS,EAAC,wCAAwC;cAAAC,QAAA,gBACrDpE,OAAA;gBAAImE,SAAS,EAAC,6BAA6B;gBAAAC,QAAA,EAAET,GAAG,CAACxD;cAAI;gBAAAqE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3D3E,OAAA;gBAAMmE,SAAS,EAAE,yCACfR,GAAG,CAACxC,MAAM,KAAK,QAAQ,GAAG,wCAAwC,GAClEwC,GAAG,CAACxC,MAAM,KAAK,WAAW,GAAG,wCAAwC,GACrE,mCAAmC,EAClC;gBAAAiD,QAAA,EACAT,GAAG,CAACxC;cAAM;gBAAAqD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACN3E,OAAA;cAAKmE,SAAS,EAAC,uCAAuC;cAAAC,QAAA,GAAC,SAC9C,EAACT,GAAG,CAACvC,IAAI,EAAC,QACnB;YAAA;cAAAoD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACLhB,GAAG,CAACxC,MAAM,KAAK,UAAU,iBACxBnB,OAAA;cACEgF,OAAO,EAAGC,CAAC,IAAK;gBACdA,CAAC,CAACC,eAAe,CAAC,CAAC;gBACnBjC,iBAAiB,CAACU,GAAG,CAACxD,IAAI,CAACgF,WAAW,CAAC,CAAC,CAAC;cAC3C,CAAE;cACFhB,SAAS,EAAC,2IAA2I;cAAAC,QAAA,GACtJ,YACW,EAACT,GAAG,CAACxD,IAAI;YAAA;cAAAqE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CACT;UAAA,GA/BIhB,GAAG,CAACzD,EAAE;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAgCR,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAED3E,OAAA;QAAKmE,SAAS,EAAC,gEAAgE;QAAAC,QAAA,eAC7EpE,OAAA,CAACnB,MAAM;UAAAuF,QAAA,gBACLpE,OAAA,CAAClB,KAAK;YAACsG,IAAI,EAAC,GAAG;YAACC,OAAO,eAAErF,OAAA,CAACjB,QAAQ;cAACuG,EAAE,EAAC,SAAS;cAACxE,OAAO;YAAA;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9D3E,OAAA,CAAClB,KAAK;YACJsG,IAAI,EAAC,eAAe;YACpBC,OAAO,eACLrF,OAAA,CAACkE,oBAAoB;cACnB3C,QAAQ,EAAEA,QAAS;cACnBe,cAAc,EAAEA,cAAe;cAC/ByB,QAAQ,EAAEA,QAAS;cACnBE,QAAQ,EAAEA,QAAS;cACnBxD,WAAW,EAAEA,WAAY;cACzB8E,UAAU,EAAEtF,KAAK,CAACY,MAAO;cACzBI,YAAY,EAAEA,YAAa;cAC3BI,iBAAiB,EAAEA,iBAAkB;cACrCmE,mBAAmB,EAAEvC;YAAkB;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACrE,EAAA,CAnQQD,UAAU;EAAA,QACArB,WAAW,EACTC,SAAS;AAAA;AAAAwG,EAAA,GAFrBpF,UAAU;AAqQnB,SAASqF,GAAGA,CAAA,EAAG;EACb,oBACE1F,OAAA,CAACpB,MAAM;IAAAwF,QAAA,eACLpE,OAAA,CAACK,UAAU;MAAAmE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEb;AAACgB,GAAA,GANQD,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
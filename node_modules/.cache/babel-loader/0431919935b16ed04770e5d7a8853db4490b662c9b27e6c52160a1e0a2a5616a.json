{"ast":null,"code":"// AWS Configuration for LambdaForge\nexport const awsConfig = {\n  // AWS Bedrock settings\n  bedrock: {\n    region: process.env.REACT_APP_AWS_REGION || 'us-east-1',\n    modelId: 'anthropic.claude-3-sonnet-20240229-v1:0',\n    maxTokens: 4000,\n    temperature: 0.1,\n    topP: 0.9\n  },\n  // AWS Credentials (for demo purposes - in production use IAM roles)\n  credentials: {\n    accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID || '',\n    secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY || ''\n  },\n  // Feature flags\n  features: {\n    enableAISuggestions: process.env.REACT_APP_ENABLE_AI_SUGGESTIONS !== 'false',\n    enableFallbackMode: true,\n    debugMode: process.env.REACT_APP_DEBUG_MODE === 'true'\n  },\n  // Available Bedrock regions\n  availableRegions: ['us-east-1', 'us-west-2', 'eu-west-1', 'ap-southeast-1', 'ap-northeast-1'],\n  // Supported models\n  supportedModels: [{\n    id: 'anthropic.claude-3-sonnet-20240229-v1:0',\n    name: 'Claude 3 Sonnet',\n    provider: 'Anthropic',\n    description: 'Balanced performance and speed for architecture analysis'\n  }, {\n    id: 'anthropic.claude-3-haiku-20240307-v1:0',\n    name: 'Claude 3 Haiku',\n    provider: 'Anthropic',\n    description: 'Fast and efficient for quick suggestions'\n  }]\n};\n\n// Validation function\nexport const validateAWSConfig = () => {\n  const errors = [];\n  if (!awsConfig.credentials.accessKeyId) {\n    errors.push('AWS Access Key ID is required for AI suggestions');\n  }\n  if (!awsConfig.credentials.secretAccessKey) {\n    errors.push('AWS Secret Access Key is required for AI suggestions');\n  }\n  if (!awsConfig.availableRegions.includes(awsConfig.bedrock.region)) {\n    errors.push(`Region ${awsConfig.bedrock.region} is not supported for Bedrock`);\n  }\n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n};\nexport default awsConfig;","map":{"version":3,"names":["awsConfig","bedrock","region","process","env","REACT_APP_AWS_REGION","modelId","maxTokens","temperature","topP","credentials","accessKeyId","REACT_APP_AWS_ACCESS_KEY_ID","secretAccessKey","REACT_APP_AWS_SECRET_ACCESS_KEY","features","enableAISuggestions","REACT_APP_ENABLE_AI_SUGGESTIONS","enableFallbackMode","debugMode","REACT_APP_DEBUG_MODE","availableRegions","supportedModels","id","name","provider","description","validateAWSConfig","errors","push","includes","isValid","length"],"sources":["/Users/codinggents/Documents/lambdaforge/src/config/aws-config.js"],"sourcesContent":["// AWS Configuration for LambdaForge\nexport const awsConfig = {\n  // AWS Bedrock settings\n  bedrock: {\n    region: process.env.REACT_APP_AWS_REGION || 'us-east-1',\n    modelId: 'anthropic.claude-3-sonnet-20240229-v1:0',\n    maxTokens: 4000,\n    temperature: 0.1,\n    topP: 0.9\n  },\n\n  // AWS Credentials (for demo purposes - in production use IAM roles)\n  credentials: {\n    accessKeyId: process.env.REACT_APP_AWS_ACCESS_KEY_ID || '',\n    secretAccessKey: process.env.REACT_APP_AWS_SECRET_ACCESS_KEY || ''\n  },\n\n  // Feature flags\n  features: {\n    enableAISuggestions: process.env.REACT_APP_ENABLE_AI_SUGGESTIONS !== 'false',\n    enableFallbackMode: true,\n    debugMode: process.env.REACT_APP_DEBUG_MODE === 'true'\n  },\n\n  // Available Bedrock regions\n  availableRegions: [\n    'us-east-1',\n    'us-west-2',\n    'eu-west-1',\n    'ap-southeast-1',\n    'ap-northeast-1'\n  ],\n\n  // Supported models\n  supportedModels: [\n    {\n      id: 'anthropic.claude-3-sonnet-20240229-v1:0',\n      name: 'Claude 3 Sonnet',\n      provider: 'Anthropic',\n      description: 'Balanced performance and speed for architecture analysis'\n    },\n    {\n      id: 'anthropic.claude-3-haiku-20240307-v1:0',\n      name: 'Claude 3 Haiku',\n      provider: 'Anthropic',\n      description: 'Fast and efficient for quick suggestions'\n    }\n  ]\n};\n\n// Validation function\nexport const validateAWSConfig = () => {\n  const errors = [];\n  \n  if (!awsConfig.credentials.accessKeyId) {\n    errors.push('AWS Access Key ID is required for AI suggestions');\n  }\n  \n  if (!awsConfig.credentials.secretAccessKey) {\n    errors.push('AWS Secret Access Key is required for AI suggestions');\n  }\n  \n  if (!awsConfig.availableRegions.includes(awsConfig.bedrock.region)) {\n    errors.push(`Region ${awsConfig.bedrock.region} is not supported for Bedrock`);\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n};\n\nexport default awsConfig; "],"mappings":"AAAA;AACA,OAAO,MAAMA,SAAS,GAAG;EACvB;EACAC,OAAO,EAAE;IACPC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,WAAW;IACvDC,OAAO,EAAE,yCAAyC;IAClDC,SAAS,EAAE,IAAI;IACfC,WAAW,EAAE,GAAG;IAChBC,IAAI,EAAE;EACR,CAAC;EAED;EACAC,WAAW,EAAE;IACXC,WAAW,EAAER,OAAO,CAACC,GAAG,CAACQ,2BAA2B,IAAI,EAAE;IAC1DC,eAAe,EAAEV,OAAO,CAACC,GAAG,CAACU,+BAA+B,IAAI;EAClE,CAAC;EAED;EACAC,QAAQ,EAAE;IACRC,mBAAmB,EAAEb,OAAO,CAACC,GAAG,CAACa,+BAA+B,KAAK,OAAO;IAC5EC,kBAAkB,EAAE,IAAI;IACxBC,SAAS,EAAEhB,OAAO,CAACC,GAAG,CAACgB,oBAAoB,KAAK;EAClD,CAAC;EAED;EACAC,gBAAgB,EAAE,CAChB,WAAW,EACX,WAAW,EACX,WAAW,EACX,gBAAgB,EAChB,gBAAgB,CACjB;EAED;EACAC,eAAe,EAAE,CACf;IACEC,EAAE,EAAE,yCAAyC;IAC7CC,IAAI,EAAE,iBAAiB;IACvBC,QAAQ,EAAE,WAAW;IACrBC,WAAW,EAAE;EACf,CAAC,EACD;IACEH,EAAE,EAAE,wCAAwC;IAC5CC,IAAI,EAAE,gBAAgB;IACtBC,QAAQ,EAAE,WAAW;IACrBC,WAAW,EAAE;EACf,CAAC;AAEL,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACrC,MAAMC,MAAM,GAAG,EAAE;EAEjB,IAAI,CAAC5B,SAAS,CAACU,WAAW,CAACC,WAAW,EAAE;IACtCiB,MAAM,CAACC,IAAI,CAAC,kDAAkD,CAAC;EACjE;EAEA,IAAI,CAAC7B,SAAS,CAACU,WAAW,CAACG,eAAe,EAAE;IAC1Ce,MAAM,CAACC,IAAI,CAAC,sDAAsD,CAAC;EACrE;EAEA,IAAI,CAAC7B,SAAS,CAACqB,gBAAgB,CAACS,QAAQ,CAAC9B,SAAS,CAACC,OAAO,CAACC,MAAM,CAAC,EAAE;IAClE0B,MAAM,CAACC,IAAI,CAAC,UAAU7B,SAAS,CAACC,OAAO,CAACC,MAAM,+BAA+B,CAAC;EAChF;EAEA,OAAO;IACL6B,OAAO,EAAEH,MAAM,CAACI,MAAM,KAAK,CAAC;IAC5BJ;EACF,CAAC;AACH,CAAC;AAED,eAAe5B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
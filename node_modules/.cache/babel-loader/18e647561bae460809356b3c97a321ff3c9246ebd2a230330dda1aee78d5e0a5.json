{"ast":null,"code":"import _objectSpread from \"/Users/codinggents/Documents/lambdaforge/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { eventStreamSerdeProvider } from \"@smithy/eventstream-serde-browser\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { invalidFunction, invalidProvider } from \"@smithy/invalid-dependency\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = config => {\n  var _config$bodyLengthChe, _config$credentialDef, _config$defaultUserAg, _config$eventStreamPa, _config$eventStreamSe, _config$maxAttempts, _config$region, _config$requestHandle, _config$retryMode, _config$sha, _config$streamCollect, _config$useDualstackE, _config$useFipsEndpoi;\n  const defaultsMode = resolveDefaultsModeConfig(config);\n  const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n  const clientSharedValues = getSharedRuntimeConfig(config);\n  return _objectSpread(_objectSpread(_objectSpread({}, clientSharedValues), config), {}, {\n    runtime: \"browser\",\n    defaultsMode,\n    bodyLengthChecker: (_config$bodyLengthChe = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _config$bodyLengthChe !== void 0 ? _config$bodyLengthChe : calculateBodyLength,\n    credentialDefaultProvider: (_config$credentialDef = config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) !== null && _config$credentialDef !== void 0 ? _config$credentialDef : _ => () => Promise.reject(new Error(\"Credential is missing\")),\n    defaultUserAgentProvider: (_config$defaultUserAg = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _config$defaultUserAg !== void 0 ? _config$defaultUserAg : createDefaultUserAgentProvider({\n      serviceId: clientSharedValues.serviceId,\n      clientVersion: packageInfo.version\n    }),\n    eventStreamPayloadHandlerProvider: (_config$eventStreamPa = config === null || config === void 0 ? void 0 : config.eventStreamPayloadHandlerProvider) !== null && _config$eventStreamPa !== void 0 ? _config$eventStreamPa : () => ({\n      handle: invalidFunction(\"event stream request is not supported in browser.\")\n    }),\n    eventStreamSerdeProvider: (_config$eventStreamSe = config === null || config === void 0 ? void 0 : config.eventStreamSerdeProvider) !== null && _config$eventStreamSe !== void 0 ? _config$eventStreamSe : eventStreamSerdeProvider,\n    maxAttempts: (_config$maxAttempts = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _config$maxAttempts !== void 0 ? _config$maxAttempts : DEFAULT_MAX_ATTEMPTS,\n    region: (_config$region = config === null || config === void 0 ? void 0 : config.region) !== null && _config$region !== void 0 ? _config$region : invalidProvider(\"Region is missing\"),\n    requestHandler: RequestHandler.create((_config$requestHandle = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _config$requestHandle !== void 0 ? _config$requestHandle : defaultConfigProvider),\n    retryMode: (_config$retryMode = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _config$retryMode !== void 0 ? _config$retryMode : async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n    sha256: (_config$sha = config === null || config === void 0 ? void 0 : config.sha256) !== null && _config$sha !== void 0 ? _config$sha : Sha256,\n    streamCollector: (_config$streamCollect = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _config$streamCollect !== void 0 ? _config$streamCollect : streamCollector,\n    useDualstackEndpoint: (_config$useDualstackE = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _config$useDualstackE !== void 0 ? _config$useDualstackE : () => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT),\n    useFipsEndpoint: (_config$useFipsEndpoi = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _config$useFipsEndpoi !== void 0 ? _config$useFipsEndpoi : () => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)\n  });\n};","map":{"version":3,"names":["packageInfo","Sha256","createDefaultUserAgentProvider","DEFAULT_USE_DUALSTACK_ENDPOINT","DEFAULT_USE_FIPS_ENDPOINT","eventStreamSerdeProvider","FetchHttpHandler","RequestHandler","streamCollector","invalidFunction","invalidProvider","calculateBodyLength","DEFAULT_MAX_ATTEMPTS","DEFAULT_RETRY_MODE","getRuntimeConfig","getSharedRuntimeConfig","loadConfigsForDefaultMode","resolveDefaultsModeConfig","config","_config$bodyLengthChe","_config$credentialDef","_config$defaultUserAg","_config$eventStreamPa","_config$eventStreamSe","_config$maxAttempts","_config$region","_config$requestHandle","_config$retryMode","_config$sha","_config$streamCollect","_config$useDualstackE","_config$useFipsEndpoi","defaultsMode","defaultConfigProvider","then","clientSharedValues","_objectSpread","runtime","bodyLengthChecker","credentialDefaultProvider","_","Promise","reject","Error","defaultUserAgentProvider","serviceId","clientVersion","version","eventStreamPayloadHandlerProvider","handle","maxAttempts","region","requestHandler","create","retryMode","sha256","useDualstackEndpoint","resolve","useFipsEndpoint"],"sources":["/Users/codinggents/Documents/lambdaforge/node_modules/@aws-sdk/client-bedrock-runtime/dist-es/runtimeConfig.browser.js"],"sourcesContent":["import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { eventStreamSerdeProvider } from \"@smithy/eventstream-serde-browser\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { invalidFunction, invalidProvider } from \"@smithy/invalid-dependency\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        eventStreamPayloadHandlerProvider: config?.eventStreamPayloadHandlerProvider ??\n            (() => ({ handle: invalidFunction(\"event stream request is not supported in browser.\") })),\n        eventStreamSerdeProvider: config?.eventStreamSerdeProvider ?? eventStreamSerdeProvider,\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export const booleanSelector = (obj, key, type) => {\n  if (!(key in obj)) return undefined;\n  if (obj[key] === \"true\") return true;\n  if (obj[key] === \"false\") return false;\n  throw new Error(\"Cannot load \".concat(type, \" \\\"\").concat(key, \"\\\". Expected \\\"true\\\" or \\\"false\\\", got \").concat(obj[key], \".\"));\n};","map":{"version":3,"names":["booleanSelector","obj","key","type","undefined","Error","concat"],"sources":["/Users/codinggents/Documents/lambdaforge/node_modules/@smithy/util-config-provider/dist-es/booleanSelector.js"],"sourcesContent":["export const booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\n"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC/C,IAAI,EAAED,GAAG,IAAID,GAAG,CAAC,EACb,OAAOG,SAAS;EACpB,IAAIH,GAAG,CAACC,GAAG,CAAC,KAAK,MAAM,EACnB,OAAO,IAAI;EACf,IAAID,GAAG,CAACC,GAAG,CAAC,KAAK,OAAO,EACpB,OAAO,KAAK;EAChB,MAAM,IAAIG,KAAK,gBAAAC,MAAA,CAAgBH,IAAI,SAAAG,MAAA,CAAKJ,GAAG,8CAAAI,MAAA,CAAsCL,GAAG,CAACC,GAAG,CAAC,MAAG,CAAC;AACjG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
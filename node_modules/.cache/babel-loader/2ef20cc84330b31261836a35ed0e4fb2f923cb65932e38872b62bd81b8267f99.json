{"ast":null,"code":"import { TypeRegistry } from \"../TypeRegistry\";\nimport { Schema } from \"./Schema\";\nexport class ListSchema extends Schema {\n  constructor(name, traits, valueSchema) {\n    super(name, traits);\n    this.name = name;\n    this.traits = traits;\n    this.valueSchema = valueSchema;\n  }\n}\nexport function list(namespace, name, traits = {}, valueSchema) {\n  const schema = new ListSchema(namespace + \"#\" + name, traits, typeof valueSchema === \"function\" ? valueSchema() : valueSchema);\n  TypeRegistry.for(namespace).register(name, schema);\n  return schema;\n}","map":{"version":3,"names":["TypeRegistry","Schema","ListSchema","constructor","name","traits","valueSchema","list","namespace","schema","for","register"],"sources":["/Users/codinggents/Documents/lambdaforge/node_modules/@smithy/core/dist-es/submodules/schema/schemas/ListSchema.js"],"sourcesContent":["import { TypeRegistry } from \"../TypeRegistry\";\nimport { Schema } from \"./Schema\";\nexport class ListSchema extends Schema {\n    constructor(name, traits, valueSchema) {\n        super(name, traits);\n        this.name = name;\n        this.traits = traits;\n        this.valueSchema = valueSchema;\n    }\n}\nexport function list(namespace, name, traits = {}, valueSchema) {\n    const schema = new ListSchema(namespace + \"#\" + name, traits, typeof valueSchema === \"function\" ? valueSchema() : valueSchema);\n    TypeRegistry.for(namespace).register(name, schema);\n    return schema;\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAO,MAAMC,UAAU,SAASD,MAAM,CAAC;EACnCE,WAAWA,CAACC,IAAI,EAAEC,MAAM,EAAEC,WAAW,EAAE;IACnC,KAAK,CAACF,IAAI,EAAEC,MAAM,CAAC;IACnB,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,WAAW,GAAGA,WAAW;EAClC;AACJ;AACA,OAAO,SAASC,IAAIA,CAACC,SAAS,EAAEJ,IAAI,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAEC,WAAW,EAAE;EAC5D,MAAMG,MAAM,GAAG,IAAIP,UAAU,CAACM,SAAS,GAAG,GAAG,GAAGJ,IAAI,EAAEC,MAAM,EAAE,OAAOC,WAAW,KAAK,UAAU,GAAGA,WAAW,CAAC,CAAC,GAAGA,WAAW,CAAC;EAC9HN,YAAY,CAACU,GAAG,CAACF,SAAS,CAAC,CAACG,QAAQ,CAACP,IAAI,EAAEK,MAAM,CAAC;EAClD,OAAOA,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
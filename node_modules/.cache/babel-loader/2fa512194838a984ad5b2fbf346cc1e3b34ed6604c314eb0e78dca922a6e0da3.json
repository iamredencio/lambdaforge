{"ast":null,"code":"import { TypeRegistry } from \"../TypeRegistry\";\nimport { Schema } from \"./Schema\";\nexport class SimpleSchema extends Schema {\n  constructor(name, schemaRef, traits) {\n    super(name, traits);\n    this.name = name;\n    this.schemaRef = schemaRef;\n    this.traits = traits;\n  }\n}\nexport function sim(namespace, name, schemaRef, traits) {\n  const schema = new SimpleSchema(namespace + \"#\" + name, schemaRef, traits);\n  TypeRegistry.for(namespace).register(name, schema);\n  return schema;\n}","map":{"version":3,"names":["TypeRegistry","Schema","SimpleSchema","constructor","name","schemaRef","traits","sim","namespace","schema","for","register"],"sources":["/Users/codinggents/Documents/lambdaforge/node_modules/@smithy/core/dist-es/submodules/schema/schemas/SimpleSchema.js"],"sourcesContent":["import { TypeRegistry } from \"../TypeRegistry\";\nimport { Schema } from \"./Schema\";\nexport class SimpleSchema extends Schema {\n    constructor(name, schemaRef, traits) {\n        super(name, traits);\n        this.name = name;\n        this.schemaRef = schemaRef;\n        this.traits = traits;\n    }\n}\nexport function sim(namespace, name, schemaRef, traits) {\n    const schema = new SimpleSchema(namespace + \"#\" + name, schemaRef, traits);\n    TypeRegistry.for(namespace).register(name, schema);\n    return schema;\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAO,MAAMC,YAAY,SAASD,MAAM,CAAC;EACrCE,WAAWA,CAACC,IAAI,EAAEC,SAAS,EAAEC,MAAM,EAAE;IACjC,KAAK,CAACF,IAAI,EAAEE,MAAM,CAAC;IACnB,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;AACJ;AACA,OAAO,SAASC,GAAGA,CAACC,SAAS,EAAEJ,IAAI,EAAEC,SAAS,EAAEC,MAAM,EAAE;EACpD,MAAMG,MAAM,GAAG,IAAIP,YAAY,CAACM,SAAS,GAAG,GAAG,GAAGJ,IAAI,EAAEC,SAAS,EAAEC,MAAM,CAAC;EAC1EN,YAAY,CAACU,GAAG,CAACF,SAAS,CAAC,CAACG,QAAQ,CAACP,IAAI,EAAEK,MAAM,CAAC;EAClD,OAAOA,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
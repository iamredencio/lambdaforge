{"ast":null,"code":"var _jsxFileName = \"/Users/codinggents/Documents/lambdaforge/src/components/StepIndicator.js\";\nimport React from 'react';\nimport { Check } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StepIndicator = ({\n  steps,\n  currentStep\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white border border-aws-gray-200 rounded-lg shadow-sm p-4 sm:p-6 mb-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center min-w-max px-4\",\n        children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center flex-shrink-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `step-indicator ${step.id < currentStep ? 'completed' : step.id === currentStep ? 'active' : 'inactive'}`,\n              children: step.id < currentStep ? /*#__PURE__*/_jsxDEV(Check, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-bold\",\n                children: step.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `mt-3 text-sm font-bold text-center whitespace-nowrap ${step.id === currentStep ? 'text-aws-orange' : step.id < currentStep ? 'text-green-600' : 'text-aws-gray-700'}`,\n              children: step.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, this), index < steps.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mx-6 flex-shrink-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `h-1 ${step.id < currentStep ? 'bg-green-500' : 'bg-aws-gray-300'}`,\n              style: {\n                width: '80px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, step.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = StepIndicator;\nexport default StepIndicator;\nvar _c;\n$RefreshReg$(_c, \"StepIndicator\");","map":{"version":3,"names":["React","Check","jsxDEV","_jsxDEV","StepIndicator","steps","currentStep","className","children","map","step","index","Fragment","id","fileName","_jsxFileName","lineNumber","columnNumber","name","length","style","width","_c","$RefreshReg$"],"sources":["/Users/codinggents/Documents/lambdaforge/src/components/StepIndicator.js"],"sourcesContent":["import React from 'react';\nimport { Check } from 'lucide-react';\n\nconst StepIndicator = ({ steps, currentStep }) => {\n  return (\n    <div className=\"bg-white border border-aws-gray-200 rounded-lg shadow-sm p-4 sm:p-6 mb-6\">\n      <div className=\"overflow-x-auto\">\n        <div className=\"flex items-center justify-center min-w-max px-4\">\n          {steps.map((step, index) => (\n            <React.Fragment key={step.id}>\n              {/* Step Circle and Label */}\n              <div className=\"flex flex-col items-center flex-shrink-0\">\n                <div\n                  className={`step-indicator ${\n                    step.id < currentStep\n                      ? 'completed'\n                      : step.id === currentStep\n                      ? 'active'\n                      : 'inactive'\n                  }`}\n                >\n                  {step.id < currentStep ? (\n                    <Check className=\"w-5 h-5\" />\n                  ) : (\n                    <span className=\"text-sm font-bold\">{step.id}</span>\n                  )}\n                </div>\n                <span\n                  className={`mt-3 text-sm font-bold text-center whitespace-nowrap ${\n                    step.id === currentStep\n                      ? 'text-aws-orange'\n                      : step.id < currentStep\n                      ? 'text-green-600'\n                      : 'text-aws-gray-700'\n                  }`}\n                >\n                  {step.name}\n                </span>\n              </div>\n\n              {/* Connection Line */}\n              {index < steps.length - 1 && (\n                <div className=\"flex items-center mx-6 flex-shrink-0\">\n                  <div\n                    className={`h-1 ${\n                      step.id < currentStep ? 'bg-green-500' : 'bg-aws-gray-300'\n                    }`}\n                    style={{ width: '80px' }}\n                  />\n                </div>\n              )}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StepIndicator; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAY,CAAC,KAAK;EAChD,oBACEH,OAAA;IAAKI,SAAS,EAAC,0EAA0E;IAAAC,QAAA,eACvFL,OAAA;MAAKI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BL,OAAA;QAAKI,SAAS,EAAC,iDAAiD;QAAAC,QAAA,EAC7DH,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBR,OAAA,CAACH,KAAK,CAACY,QAAQ;UAAAJ,QAAA,gBAEbL,OAAA;YAAKI,SAAS,EAAC,0CAA0C;YAAAC,QAAA,gBACvDL,OAAA;cACEI,SAAS,EAAE,kBACTG,IAAI,CAACG,EAAE,GAAGP,WAAW,GACjB,WAAW,GACXI,IAAI,CAACG,EAAE,KAAKP,WAAW,GACvB,QAAQ,GACR,UAAU,EACb;cAAAE,QAAA,EAEFE,IAAI,CAACG,EAAE,GAAGP,WAAW,gBACpBH,OAAA,CAACF,KAAK;gBAACM,SAAS,EAAC;cAAS;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAE7Bd,OAAA;gBAAMI,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,EAAEE,IAAI,CAACG;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YACpD;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACNd,OAAA;cACEI,SAAS,EAAE,wDACTG,IAAI,CAACG,EAAE,KAAKP,WAAW,GACnB,iBAAiB,GACjBI,IAAI,CAACG,EAAE,GAAGP,WAAW,GACrB,gBAAgB,GAChB,mBAAmB,EACtB;cAAAE,QAAA,EAEFE,IAAI,CAACQ;YAAI;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,EAGLN,KAAK,GAAGN,KAAK,CAACc,MAAM,GAAG,CAAC,iBACvBhB,OAAA;YAAKI,SAAS,EAAC,sCAAsC;YAAAC,QAAA,eACnDL,OAAA;cACEI,SAAS,EAAE,OACTG,IAAI,CAACG,EAAE,GAAGP,WAAW,GAAG,cAAc,GAAG,iBAAiB,EACzD;cACHc,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAO;YAAE;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA,GAzCkBP,IAAI,CAACG,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA0CZ,CACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GAtDIlB,aAAa;AAwDnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _awaitAsyncGenerator from \"/Users/codinggents/Documents/lambdaforge/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/codinggents/Documents/lambdaforge/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nconst makePagedClientRequest = async function (CommandCtor, client, input) {\n  var _withCommand;\n  let withCommand = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _ => _;\n  let command = new CommandCtor(input);\n  command = (_withCommand = withCommand(command)) !== null && _withCommand !== void 0 ? _withCommand : command;\n  for (var _len = arguments.length, args = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {\n    args[_key - 4] = arguments[_key];\n  }\n  return await client.send(command, ...args);\n};\nexport function createPaginator(ClientCtor, CommandCtor, inputTokenName, outputTokenName, pageSizeTokenName) {\n  return /*#__PURE__*/function () {\n    var _paginateOperation = _wrapAsyncGenerator(function* (config, input) {\n      var _config$startingToken;\n      const _input = input;\n      let token = (_config$startingToken = config.startingToken) !== null && _config$startingToken !== void 0 ? _config$startingToken : _input[inputTokenName];\n      let hasNext = true;\n      let page;\n      for (var _len2 = arguments.length, additionalArguments = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        additionalArguments[_key2 - 2] = arguments[_key2];\n      }\n      while (hasNext) {\n        _input[inputTokenName] = token;\n        if (pageSizeTokenName) {\n          var _input$pageSizeTokenN;\n          _input[pageSizeTokenName] = (_input$pageSizeTokenN = _input[pageSizeTokenName]) !== null && _input$pageSizeTokenN !== void 0 ? _input$pageSizeTokenN : config.pageSize;\n        }\n        if (config.client instanceof ClientCtor) {\n          page = yield _awaitAsyncGenerator(makePagedClientRequest(CommandCtor, config.client, input, config.withCommand, ...additionalArguments));\n        } else {\n          throw new Error(\"Invalid client, expected instance of \".concat(ClientCtor.name));\n        }\n        yield page;\n        const prevToken = token;\n        token = get(page, outputTokenName);\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n      }\n      return undefined;\n    });\n    function paginateOperation(_x, _x2) {\n      return _paginateOperation.apply(this, arguments);\n    }\n    return paginateOperation;\n  }();\n}\nconst get = (fromObject, path) => {\n  let cursor = fromObject;\n  const pathComponents = path.split(\".\");\n  for (const step of pathComponents) {\n    if (!cursor || typeof cursor !== \"object\") {\n      return undefined;\n    }\n    cursor = cursor[step];\n  }\n  return cursor;\n};","map":{"version":3,"names":["makePagedClientRequest","CommandCtor","client","input","_withCommand","withCommand","arguments","length","undefined","_","command","_len","args","Array","_key","send","createPaginator","ClientCtor","inputTokenName","outputTokenName","pageSizeTokenName","_paginateOperation","_wrapAsyncGenerator","config","_config$startingToken","_input","token","startingToken","hasNext","page","_len2","additionalArguments","_key2","_input$pageSizeTokenN","pageSize","_awaitAsyncGenerator","Error","concat","name","prevToken","get","stopOnSameToken","paginateOperation","_x","_x2","apply","fromObject","path","cursor","pathComponents","split","step"],"sources":["/Users/codinggents/Documents/lambdaforge/node_modules/@smithy/core/dist-es/pagination/createPaginator.js"],"sourcesContent":["const makePagedClientRequest = async (CommandCtor, client, input, withCommand = (_) => _, ...args) => {\n    let command = new CommandCtor(input);\n    command = withCommand(command) ?? command;\n    return await client.send(command, ...args);\n};\nexport function createPaginator(ClientCtor, CommandCtor, inputTokenName, outputTokenName, pageSizeTokenName) {\n    return async function* paginateOperation(config, input, ...additionalArguments) {\n        const _input = input;\n        let token = config.startingToken ?? _input[inputTokenName];\n        let hasNext = true;\n        let page;\n        while (hasNext) {\n            _input[inputTokenName] = token;\n            if (pageSizeTokenName) {\n                _input[pageSizeTokenName] = _input[pageSizeTokenName] ?? config.pageSize;\n            }\n            if (config.client instanceof ClientCtor) {\n                page = await makePagedClientRequest(CommandCtor, config.client, input, config.withCommand, ...additionalArguments);\n            }\n            else {\n                throw new Error(`Invalid client, expected instance of ${ClientCtor.name}`);\n            }\n            yield page;\n            const prevToken = token;\n            token = get(page, outputTokenName);\n            hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n        }\n        return undefined;\n    };\n}\nconst get = (fromObject, path) => {\n    let cursor = fromObject;\n    const pathComponents = path.split(\".\");\n    for (const step of pathComponents) {\n        if (!cursor || typeof cursor !== \"object\") {\n            return undefined;\n        }\n        cursor = cursor[step];\n    }\n    return cursor;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
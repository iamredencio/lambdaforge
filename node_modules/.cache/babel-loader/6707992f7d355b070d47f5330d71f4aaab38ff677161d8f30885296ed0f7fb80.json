{"ast":null,"code":"import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { eventStreamSerdeProvider } from \"@smithy/eventstream-serde-browser\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { invalidFunction, invalidProvider } from \"@smithy/invalid-dependency\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = config => {\n  const defaultsMode = resolveDefaultsModeConfig(config);\n  const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n  const clientSharedValues = getSharedRuntimeConfig(config);\n  return {\n    ...clientSharedValues,\n    ...config,\n    runtime: \"browser\",\n    defaultsMode,\n    bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n    credentialDefaultProvider: config?.credentialDefaultProvider ?? (_ => () => Promise.reject(new Error(\"Credential is missing\"))),\n    defaultUserAgentProvider: config?.defaultUserAgentProvider ?? createDefaultUserAgentProvider({\n      serviceId: clientSharedValues.serviceId,\n      clientVersion: packageInfo.version\n    }),\n    eventStreamPayloadHandlerProvider: config?.eventStreamPayloadHandlerProvider ?? (() => ({\n      handle: invalidFunction(\"event stream request is not supported in browser.\")\n    })),\n    eventStreamSerdeProvider: config?.eventStreamSerdeProvider ?? eventStreamSerdeProvider,\n    maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n    region: config?.region ?? invalidProvider(\"Region is missing\"),\n    requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n    retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n    sha256: config?.sha256 ?? Sha256,\n    streamCollector: config?.streamCollector ?? streamCollector,\n    useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n    useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT))\n  };\n};","map":{"version":3,"names":["packageInfo","Sha256","createDefaultUserAgentProvider","DEFAULT_USE_DUALSTACK_ENDPOINT","DEFAULT_USE_FIPS_ENDPOINT","eventStreamSerdeProvider","FetchHttpHandler","RequestHandler","streamCollector","invalidFunction","invalidProvider","calculateBodyLength","DEFAULT_MAX_ATTEMPTS","DEFAULT_RETRY_MODE","getRuntimeConfig","getSharedRuntimeConfig","loadConfigsForDefaultMode","resolveDefaultsModeConfig","config","defaultsMode","defaultConfigProvider","then","clientSharedValues","runtime","bodyLengthChecker","credentialDefaultProvider","_","Promise","reject","Error","defaultUserAgentProvider","serviceId","clientVersion","version","eventStreamPayloadHandlerProvider","handle","maxAttempts","region","requestHandler","create","retryMode","sha256","useDualstackEndpoint","resolve","useFipsEndpoint"],"sources":["/Users/codinggents/Documents/lambdaforge/node_modules/@aws-sdk/client-bedrock-runtime/dist-es/runtimeConfig.browser.js"],"sourcesContent":["import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { eventStreamSerdeProvider } from \"@smithy/eventstream-serde-browser\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { invalidFunction, invalidProvider } from \"@smithy/invalid-dependency\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        eventStreamPayloadHandlerProvider: config?.eventStreamPayloadHandlerProvider ??\n            (() => ({ handle: invalidFunction(\"event stream request is not supported in browser.\") })),\n        eventStreamSerdeProvider: config?.eventStreamSerdeProvider ?? eventStreamSerdeProvider,\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,iBAAiB;AACzC,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,8BAA8B,QAAQ,kCAAkC;AACjF,SAASC,8BAA8B,EAAEC,yBAAyB,QAAQ,yBAAyB;AACnG,SAASC,wBAAwB,QAAQ,mCAAmC;AAC5E,SAASC,gBAAgB,IAAIC,cAAc,EAAEC,eAAe,QAAQ,4BAA4B;AAChG,SAASC,eAAe,EAAEC,eAAe,QAAQ,4BAA4B;AAC7E,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,SAASC,oBAAoB,EAAEC,kBAAkB,QAAQ,oBAAoB;AAC7E,SAASC,gBAAgB,IAAIC,sBAAsB,QAAQ,wBAAwB;AACnF,SAASC,yBAAyB,QAAQ,uBAAuB;AACjE,SAASC,yBAAyB,QAAQ,oCAAoC;AAC9E,OAAO,MAAMH,gBAAgB,GAAII,MAAM,IAAK;EACxC,MAAMC,YAAY,GAAGF,yBAAyB,CAACC,MAAM,CAAC;EACtD,MAAME,qBAAqB,GAAGA,CAAA,KAAMD,YAAY,CAAC,CAAC,CAACE,IAAI,CAACL,yBAAyB,CAAC;EAClF,MAAMM,kBAAkB,GAAGP,sBAAsB,CAACG,MAAM,CAAC;EACzD,OAAO;IACH,GAAGI,kBAAkB;IACrB,GAAGJ,MAAM;IACTK,OAAO,EAAE,SAAS;IAClBJ,YAAY;IACZK,iBAAiB,EAAEN,MAAM,EAAEM,iBAAiB,IAAIb,mBAAmB;IACnEc,yBAAyB,EAAEP,MAAM,EAAEO,yBAAyB,KAAMC,CAAC,IAAK,MAAMC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;IACjIC,wBAAwB,EAAEZ,MAAM,EAAEY,wBAAwB,IACtD5B,8BAA8B,CAAC;MAAE6B,SAAS,EAAET,kBAAkB,CAACS,SAAS;MAAEC,aAAa,EAAEhC,WAAW,CAACiC;IAAQ,CAAC,CAAC;IACnHC,iCAAiC,EAAEhB,MAAM,EAAEgB,iCAAiC,KACvE,OAAO;MAAEC,MAAM,EAAE1B,eAAe,CAAC,mDAAmD;IAAE,CAAC,CAAC,CAAC;IAC9FJ,wBAAwB,EAAEa,MAAM,EAAEb,wBAAwB,IAAIA,wBAAwB;IACtF+B,WAAW,EAAElB,MAAM,EAAEkB,WAAW,IAAIxB,oBAAoB;IACxDyB,MAAM,EAAEnB,MAAM,EAAEmB,MAAM,IAAI3B,eAAe,CAAC,mBAAmB,CAAC;IAC9D4B,cAAc,EAAE/B,cAAc,CAACgC,MAAM,CAACrB,MAAM,EAAEoB,cAAc,IAAIlB,qBAAqB,CAAC;IACtFoB,SAAS,EAAEtB,MAAM,EAAEsB,SAAS,KAAK,YAAY,CAAC,MAAMpB,qBAAqB,CAAC,CAAC,EAAEoB,SAAS,IAAI3B,kBAAkB,CAAC;IAC7G4B,MAAM,EAAEvB,MAAM,EAAEuB,MAAM,IAAIxC,MAAM;IAChCO,eAAe,EAAEU,MAAM,EAAEV,eAAe,IAAIA,eAAe;IAC3DkC,oBAAoB,EAAExB,MAAM,EAAEwB,oBAAoB,KAAK,MAAMf,OAAO,CAACgB,OAAO,CAACxC,8BAA8B,CAAC,CAAC;IAC7GyC,eAAe,EAAE1B,MAAM,EAAE0B,eAAe,KAAK,MAAMjB,OAAO,CAACgB,OAAO,CAACvC,yBAAyB,CAAC;EACjG,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export class ProviderError extends Error {\n  constructor(message) {\n    var _logger, _logger$debug;\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let logger;\n    let tryNextLink = true;\n    if (typeof options === \"boolean\") {\n      logger = undefined;\n      tryNextLink = options;\n    } else if (options != null && typeof options === \"object\") {\n      var _options$tryNextLink;\n      logger = options.logger;\n      tryNextLink = (_options$tryNextLink = options.tryNextLink) !== null && _options$tryNextLink !== void 0 ? _options$tryNextLink : true;\n    }\n    super(message);\n    this.name = \"ProviderError\";\n    this.tryNextLink = tryNextLink;\n    Object.setPrototypeOf(this, ProviderError.prototype);\n    (_logger = logger) === null || _logger === void 0 || (_logger$debug = _logger.debug) === null || _logger$debug === void 0 || _logger$debug.call(_logger, \"@smithy/property-provider \".concat(tryNextLink ? \"->\" : \"(!)\", \" \").concat(message));\n  }\n  static from(error) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return Object.assign(new this(error.message, options), error);\n  }\n}","map":{"version":3,"names":["ProviderError","Error","constructor","message","_logger","_logger$debug","options","arguments","length","undefined","logger","tryNextLink","_options$tryNextLink","name","Object","setPrototypeOf","prototype","debug","call","concat","from","error","assign"],"sources":["/Users/codinggents/Documents/lambdaforge/node_modules/@smithy/property-provider/dist-es/ProviderError.js"],"sourcesContent":["export class ProviderError extends Error {\n    constructor(message, options = true) {\n        let logger;\n        let tryNextLink = true;\n        if (typeof options === \"boolean\") {\n            logger = undefined;\n            tryNextLink = options;\n        }\n        else if (options != null && typeof options === \"object\") {\n            logger = options.logger;\n            tryNextLink = options.tryNextLink ?? true;\n        }\n        super(message);\n        this.name = \"ProviderError\";\n        this.tryNextLink = tryNextLink;\n        Object.setPrototypeOf(this, ProviderError.prototype);\n        logger?.debug?.(`@smithy/property-provider ${tryNextLink ? \"->\" : \"(!)\"} ${message}`);\n    }\n    static from(error, options = true) {\n        return Object.assign(new this(error.message, options), error);\n    }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,SAASC,KAAK,CAAC;EACrCC,WAAWA,CAACC,OAAO,EAAkB;IAAA,IAAAC,OAAA,EAAAC,aAAA;IAAA,IAAhBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAC/B,IAAIG,MAAM;IACV,IAAIC,WAAW,GAAG,IAAI;IACtB,IAAI,OAAOL,OAAO,KAAK,SAAS,EAAE;MAC9BI,MAAM,GAAGD,SAAS;MAClBE,WAAW,GAAGL,OAAO;IACzB,CAAC,MACI,IAAIA,OAAO,IAAI,IAAI,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAAA,IAAAM,oBAAA;MACrDF,MAAM,GAAGJ,OAAO,CAACI,MAAM;MACvBC,WAAW,IAAAC,oBAAA,GAAGN,OAAO,CAACK,WAAW,cAAAC,oBAAA,cAAAA,oBAAA,GAAI,IAAI;IAC7C;IACA,KAAK,CAACT,OAAO,CAAC;IACd,IAAI,CAACU,IAAI,GAAG,eAAe;IAC3B,IAAI,CAACF,WAAW,GAAGA,WAAW;IAC9BG,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEf,aAAa,CAACgB,SAAS,CAAC;IACpD,CAAAZ,OAAA,GAAAM,MAAM,cAAAN,OAAA,gBAAAC,aAAA,GAAND,OAAA,CAAQa,KAAK,cAAAZ,aAAA,eAAbA,aAAA,CAAAa,IAAA,CAAAd,OAAA,+BAAAe,MAAA,CAA6CR,WAAW,GAAG,IAAI,GAAG,KAAK,OAAAQ,MAAA,CAAIhB,OAAO,CAAE,CAAC;EACzF;EACA,OAAOiB,IAAIA,CAACC,KAAK,EAAkB;IAAA,IAAhBf,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAC7B,OAAOO,MAAM,CAACQ,MAAM,CAAC,IAAI,IAAI,CAACD,KAAK,CAAClB,OAAO,EAAEG,OAAO,CAAC,EAAEe,KAAK,CAAC;EACjE;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/codinggents/Documents/lambdaforge/src/components/steps/GenerateStep.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Play, Download, Clock, DollarSign, CheckCircle, Zap, TrendingUp, Shield, Monitor, FileText, Package } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GenerateStep = ({\n  formData,\n  prevStep,\n  currentStep,\n  totalSteps\n}) => {\n  _s();\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [currentTask, setCurrentTask] = useState('');\n  const [estimatedCost, setEstimatedCost] = useState(0);\n  const [generatedResources, setGeneratedResources] = useState([]);\n  const [deploymentStatus, setDeploymentStatus] = useState('ready'); // ready, generating, completed, error\n  const [generatedFiles, setGeneratedFiles] = useState(null);\n  const [isExporting, setIsExporting] = useState(false);\n\n  // Calculate estimated monthly cost based on selections\n  useEffect(() => {\n    var _formData$selectedInf, _formData$selectedInf2, _formData$selectedInf3, _formData$selectedInf4, _formData$selectedInf5, _formData$selectedCom, _formData$selectedCom2, _formData$selectedCom3, _formData$selectedCom4, _formData$selectedInt, _formData$selectedInt2, _formData$selectedInt3, _formData$selectedInt4, _formData$selectedSec, _formData$selectedSec2, _formData$selectedSec3, _formData$selectedMon, _formData$selectedMon2, _formData$selectedMon3;\n    let cost = 0;\n\n    // Infrastructure costs\n    if ((_formData$selectedInf = formData.selectedInfrastructure) !== null && _formData$selectedInf !== void 0 && _formData$selectedInf.includes('s3-bucket')) cost += 23;\n    if ((_formData$selectedInf2 = formData.selectedInfrastructure) !== null && _formData$selectedInf2 !== void 0 && _formData$selectedInf2.includes('dynamodb')) cost += 45;\n    if ((_formData$selectedInf3 = formData.selectedInfrastructure) !== null && _formData$selectedInf3 !== void 0 && _formData$selectedInf3.includes('rds-database')) cost += 85;\n    if ((_formData$selectedInf4 = formData.selectedInfrastructure) !== null && _formData$selectedInf4 !== void 0 && _formData$selectedInf4.includes('vpc-networking')) cost += 15;\n    if ((_formData$selectedInf5 = formData.selectedInfrastructure) !== null && _formData$selectedInf5 !== void 0 && _formData$selectedInf5.includes('ebs-volumes')) cost += 30;\n\n    // Compute costs\n    if ((_formData$selectedCom = formData.selectedCompute) !== null && _formData$selectedCom !== void 0 && _formData$selectedCom.includes('lambda-functions')) cost += 12;\n    if ((_formData$selectedCom2 = formData.selectedCompute) !== null && _formData$selectedCom2 !== void 0 && _formData$selectedCom2.includes('ec2-instances')) cost += 120;\n    if ((_formData$selectedCom3 = formData.selectedCompute) !== null && _formData$selectedCom3 !== void 0 && _formData$selectedCom3.includes('ecs-containers')) cost += 95;\n    if ((_formData$selectedCom4 = formData.selectedCompute) !== null && _formData$selectedCom4 !== void 0 && _formData$selectedCom4.includes('fargate-serverless')) cost += 75;\n\n    // Integration costs\n    if ((_formData$selectedInt = formData.selectedIntegration) !== null && _formData$selectedInt !== void 0 && _formData$selectedInt.includes('api-gateway')) cost += 25;\n    if ((_formData$selectedInt2 = formData.selectedIntegration) !== null && _formData$selectedInt2 !== void 0 && _formData$selectedInt2.includes('eventbridge')) cost += 8;\n    if ((_formData$selectedInt3 = formData.selectedIntegration) !== null && _formData$selectedInt3 !== void 0 && _formData$selectedInt3.includes('step-functions')) cost += 15;\n    if ((_formData$selectedInt4 = formData.selectedIntegration) !== null && _formData$selectedInt4 !== void 0 && _formData$selectedInt4.includes('sns-notifications')) cost += 5;\n\n    // Security costs\n    if ((_formData$selectedSec = formData.selectedSecurity) !== null && _formData$selectedSec !== void 0 && _formData$selectedSec.includes('kms-encryption')) cost += 12;\n    if ((_formData$selectedSec2 = formData.selectedSecurity) !== null && _formData$selectedSec2 !== void 0 && _formData$selectedSec2.includes('secrets-manager')) cost += 8;\n    if ((_formData$selectedSec3 = formData.selectedSecurity) !== null && _formData$selectedSec3 !== void 0 && _formData$selectedSec3.includes('waf-protection')) cost += 35;\n\n    // Monitoring costs\n    if ((_formData$selectedMon = formData.selectedMonitoring) !== null && _formData$selectedMon !== void 0 && _formData$selectedMon.includes('cloudwatch')) cost += 18;\n    if ((_formData$selectedMon2 = formData.selectedMonitoring) !== null && _formData$selectedMon2 !== void 0 && _formData$selectedMon2.includes('x-ray-tracing')) cost += 22;\n    if ((_formData$selectedMon3 = formData.selectedMonitoring) !== null && _formData$selectedMon3 !== void 0 && _formData$selectedMon3.includes('cloudtrail')) cost += 10;\n    setEstimatedCost(cost);\n  }, [formData]);\n\n  // File generation functions\n  const generateCloudFormationTemplate = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    const environment = formData.environment || 'Development';\n\n    // Generate YAML format instead of JSON\n    const yamlTemplate = `AWSTemplateFormatVersion: '2010-09-09'\nDescription: '${projectName} - Generated by LambdaForge'\n\nParameters:\n  ProjectName:\n    Type: String\n    Default: ${projectName}\n    Description: Name of the project\n  Environment:\n    Type: String\n    Default: ${environment}\n    AllowedValues:\n      - Development\n      - Staging\n      - Production\n    Description: Environment type\n\nResources:\n${generateResourcesYAML()}\n\nOutputs:\n${generateOutputsYAML()}`;\n    return yamlTemplate;\n  };\n  const generateResources = () => {\n    var _formData$selectedInf6, _formData$selectedInf7, _formData$selectedCom5, _formData$selectedInt5, _formData$selectedMon4;\n    const resources = {};\n\n    // Infrastructure Resources\n    if ((_formData$selectedInf6 = formData.selectedInfrastructure) !== null && _formData$selectedInf6 !== void 0 && _formData$selectedInf6.includes('s3-bucket')) {\n      resources.S3Bucket = {\n        Type: 'AWS::S3::Bucket',\n        Properties: {\n          BucketName: {\n            'Fn::Sub': '${ProjectName}-storage-${AWS::AccountId}'\n          },\n          VersioningConfiguration: {\n            Status: 'Enabled'\n          },\n          PublicAccessBlockConfiguration: {\n            BlockPublicAcls: true,\n            BlockPublicPolicy: true,\n            IgnorePublicAcls: true,\n            RestrictPublicBuckets: true\n          },\n          Tags: [{\n            Key: 'Project',\n            Value: {\n              Ref: 'ProjectName'\n            }\n          }, {\n            Key: 'Environment',\n            Value: {\n              Ref: 'Environment'\n            }\n          }]\n        }\n      };\n    }\n    if ((_formData$selectedInf7 = formData.selectedInfrastructure) !== null && _formData$selectedInf7 !== void 0 && _formData$selectedInf7.includes('dynamodb')) {\n      resources.DynamoDBTable = {\n        Type: 'AWS::DynamoDB::Table',\n        Properties: {\n          TableName: {\n            'Fn::Sub': '${ProjectName}-data'\n          },\n          AttributeDefinitions: [{\n            AttributeName: 'id',\n            AttributeType: 'S'\n          }],\n          KeySchema: [{\n            AttributeName: 'id',\n            KeyType: 'HASH'\n          }],\n          BillingMode: 'PAY_PER_REQUEST',\n          PointInTimeRecoverySpecification: {\n            PointInTimeRecoveryEnabled: true\n          },\n          Tags: [{\n            Key: 'Project',\n            Value: {\n              Ref: 'ProjectName'\n            }\n          }, {\n            Key: 'Environment',\n            Value: {\n              Ref: 'Environment'\n            }\n          }]\n        }\n      };\n    }\n\n    // Compute Resources\n    if ((_formData$selectedCom5 = formData.selectedCompute) !== null && _formData$selectedCom5 !== void 0 && _formData$selectedCom5.includes('lambda-functions')) {\n      resources.LambdaExecutionRole = {\n        Type: 'AWS::IAM::Role',\n        Properties: {\n          RoleName: {\n            'Fn::Sub': '${ProjectName}-lambda-role'\n          },\n          AssumeRolePolicyDocument: {\n            Version: '2012-10-17',\n            Statement: [{\n              Effect: 'Allow',\n              Principal: {\n                Service: 'lambda.amazonaws.com'\n              },\n              Action: 'sts:AssumeRole'\n            }]\n          },\n          ManagedPolicyArns: ['arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'],\n          Tags: [{\n            Key: 'Project',\n            Value: {\n              Ref: 'ProjectName'\n            }\n          }, {\n            Key: 'Environment',\n            Value: {\n              Ref: 'Environment'\n            }\n          }]\n        }\n      };\n      resources.LambdaFunction = {\n        Type: 'AWS::Lambda::Function',\n        Properties: {\n          FunctionName: {\n            'Fn::Sub': '${ProjectName}-function'\n          },\n          Runtime: 'nodejs18.x',\n          Handler: 'index.handler',\n          Role: {\n            'Fn::GetAtt': ['LambdaExecutionRole', 'Arn']\n          },\n          Code: {\n            ZipFile: `exports.handler = async (event) => {\n    console.log('Event:', JSON.stringify(event, null, 2));\n    \n    const response = {\n        statusCode: 200,\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify({\n            message: 'Hello from ${formData.projectName || 'LambdaForge'}!',\n            timestamp: new Date().toISOString(),\n            environment: '${formData.environment || 'Development'}'\n        })\n    };\n    \n    return response;\n};`\n          },\n          Environment: {\n            Variables: {\n              PROJECT_NAME: {\n                Ref: 'ProjectName'\n              },\n              ENVIRONMENT: {\n                Ref: 'Environment'\n              }\n            }\n          },\n          Tags: [{\n            Key: 'Project',\n            Value: {\n              Ref: 'ProjectName'\n            }\n          }, {\n            Key: 'Environment',\n            Value: {\n              Ref: 'Environment'\n            }\n          }]\n        }\n      };\n    }\n\n    // Integration Resources\n    if ((_formData$selectedInt5 = formData.selectedIntegration) !== null && _formData$selectedInt5 !== void 0 && _formData$selectedInt5.includes('api-gateway')) {\n      var _formData$selectedCom6;\n      resources.ApiGateway = {\n        Type: 'AWS::ApiGateway::RestApi',\n        Properties: {\n          Name: {\n            'Fn::Sub': '${ProjectName}-api'\n          },\n          Description: `API for ${formData.projectName || 'LambdaForge Project'}`,\n          EndpointConfiguration: {\n            Types: ['REGIONAL']\n          },\n          Tags: [{\n            Key: 'Project',\n            Value: {\n              Ref: 'ProjectName'\n            }\n          }, {\n            Key: 'Environment',\n            Value: {\n              Ref: 'Environment'\n            }\n          }]\n        }\n      };\n      if ((_formData$selectedCom6 = formData.selectedCompute) !== null && _formData$selectedCom6 !== void 0 && _formData$selectedCom6.includes('lambda-functions')) {\n        resources.ApiGatewayResource = {\n          Type: 'AWS::ApiGateway::Resource',\n          Properties: {\n            RestApiId: {\n              Ref: 'ApiGateway'\n            },\n            ParentId: {\n              'Fn::GetAtt': ['ApiGateway', 'RootResourceId']\n            },\n            PathPart: 'api'\n          }\n        };\n        resources.ApiGatewayMethod = {\n          Type: 'AWS::ApiGateway::Method',\n          Properties: {\n            RestApiId: {\n              Ref: 'ApiGateway'\n            },\n            ResourceId: {\n              Ref: 'ApiGatewayResource'\n            },\n            HttpMethod: 'ANY',\n            AuthorizationType: 'NONE',\n            Integration: {\n              Type: 'AWS_PROXY',\n              IntegrationHttpMethod: 'POST',\n              Uri: {\n                'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations'\n              }\n            }\n          }\n        };\n        resources.ApiGatewayDeployment = {\n          Type: 'AWS::ApiGateway::Deployment',\n          DependsOn: ['ApiGatewayMethod'],\n          Properties: {\n            RestApiId: {\n              Ref: 'ApiGateway'\n            },\n            StageName: {\n              Ref: 'Environment'\n            }\n          }\n        };\n        resources.LambdaApiGatewayPermission = {\n          Type: 'AWS::Lambda::Permission',\n          Properties: {\n            FunctionName: {\n              Ref: 'LambdaFunction'\n            },\n            Action: 'lambda:InvokeFunction',\n            Principal: 'apigateway.amazonaws.com',\n            SourceArn: {\n              'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}::/restapis/${ApiGateway}/stages/${Environment}/*/*'\n            }\n          }\n        };\n      }\n    }\n\n    // Monitoring Resources\n    if ((_formData$selectedMon4 = formData.selectedMonitoring) !== null && _formData$selectedMon4 !== void 0 && _formData$selectedMon4.includes('cloudwatch')) {\n      resources.LogGroup = {\n        Type: 'AWS::Logs::LogGroup',\n        Properties: {\n          LogGroupName: {\n            'Fn::Sub': '/aws/lambda/${ProjectName}-logs'\n          },\n          RetentionInDays: 14,\n          Tags: [{\n            Key: 'Project',\n            Value: {\n              Ref: 'ProjectName'\n            }\n          }, {\n            Key: 'Environment',\n            Value: {\n              Ref: 'Environment'\n            }\n          }]\n        }\n      };\n    }\n    return resources;\n  };\n  const generateOutputs = () => {\n    var _formData$selectedInf8, _formData$selectedCom7, _formData$selectedInt6;\n    const outputs = {};\n    if ((_formData$selectedInf8 = formData.selectedInfrastructure) !== null && _formData$selectedInf8 !== void 0 && _formData$selectedInf8.includes('s3-bucket')) {\n      outputs.S3BucketName = {\n        Description: 'S3 Bucket Name',\n        Value: {\n          Ref: 'S3Bucket'\n        },\n        Export: {\n          Name: {\n            'Fn::Sub': '${ProjectName}-s3-bucket'\n          }\n        }\n      };\n    }\n    if ((_formData$selectedCom7 = formData.selectedCompute) !== null && _formData$selectedCom7 !== void 0 && _formData$selectedCom7.includes('lambda-functions')) {\n      outputs.LambdaFunctionArn = {\n        Description: 'Lambda Function ARN',\n        Value: {\n          'Fn::GetAtt': ['LambdaFunction', 'Arn']\n        },\n        Export: {\n          Name: {\n            'Fn::Sub': '${ProjectName}-lambda-arn'\n          }\n        }\n      };\n    }\n    if ((_formData$selectedInt6 = formData.selectedIntegration) !== null && _formData$selectedInt6 !== void 0 && _formData$selectedInt6.includes('api-gateway')) {\n      outputs.ApiEndpoint = {\n        Description: 'API Gateway endpoint URL',\n        Value: {\n          'Fn::Sub': 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}'\n        },\n        Export: {\n          Name: {\n            'Fn::Sub': '${ProjectName}-api-endpoint'\n          }\n        }\n      };\n    }\n    return outputs;\n  };\n\n  // YAML generation functions for proper CloudFormation format\n  const generateResourcesYAML = () => {\n    var _formData$selectedInf9, _formData$selectedInf0, _formData$selectedCom8, _formData$selectedInt7, _formData$selectedMon5;\n    let yamlResources = '';\n\n    // Infrastructure Resources\n    if ((_formData$selectedInf9 = formData.selectedInfrastructure) !== null && _formData$selectedInf9 !== void 0 && _formData$selectedInf9.includes('s3-bucket')) {\n      yamlResources += `  # S3 Bucket with versioning and security\n  S3Bucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: !Sub '\\${ProjectName}-storage-\\${AWS::AccountId}-\\${AWS::Region}'\n      VersioningConfiguration:\n        Status: Enabled\n      PublicAccessBlockConfiguration:\n        BlockPublicAcls: true\n        BlockPublicPolicy: true\n        IgnorePublicAcls: true\n        RestrictPublicBuckets: true\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n    if ((_formData$selectedInf0 = formData.selectedInfrastructure) !== null && _formData$selectedInf0 !== void 0 && _formData$selectedInf0.includes('dynamodb')) {\n      yamlResources += `  # DynamoDB Table\n  DynamoDBTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      TableName: !Sub '\\${ProjectName}-data'\n      AttributeDefinitions:\n        - AttributeName: id\n          AttributeType: S\n      KeySchema:\n        - AttributeName: id\n          KeyType: HASH\n      BillingMode: PAY_PER_REQUEST\n      PointInTimeRecoverySpecification:\n        PointInTimeRecoveryEnabled: true\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    // Compute Resources - Fixed IAM role without custom naming\n    if ((_formData$selectedCom8 = formData.selectedCompute) !== null && _formData$selectedCom8 !== void 0 && _formData$selectedCom8.includes('lambda-functions')) {\n      yamlResources += `  # Lambda Execution Role (no custom name to avoid conflicts)\n  LambdaExecutionRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service: lambda.amazonaws.com\n            Action: sts:AssumeRole\n      ManagedPolicyArns:\n        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n  # Lambda Function\n  LambdaFunction:\n    Type: AWS::Lambda::Function\n    Properties:\n      FunctionName: !Sub '\\${ProjectName}-function'\n      Runtime: nodejs18.x\n      Handler: index.handler\n      Role: !GetAtt LambdaExecutionRole.Arn\n      Code:\n        ZipFile: |\n          exports.handler = async (event) => {\n              console.log('Event:', JSON.stringify(event, null, 2));\n              \n              const response = {\n                  statusCode: 200,\n                  headers: {\n                      'Content-Type': 'application/json',\n                      'Access-Control-Allow-Origin': '*'\n                  },\n                  body: JSON.stringify({\n                      message: 'Hello from ${formData.projectName || 'LambdaForge'}!',\n                      timestamp: new Date().toISOString(),\n                      environment: process.env.ENVIRONMENT || 'Development'\n                  })\n              };\n              \n              return response;\n          };\n      Environment:\n        Variables:\n          PROJECT_NAME: !Ref ProjectName\n          ENVIRONMENT: !Ref Environment\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    // Integration Resources\n    if ((_formData$selectedInt7 = formData.selectedIntegration) !== null && _formData$selectedInt7 !== void 0 && _formData$selectedInt7.includes('api-gateway')) {\n      var _formData$selectedCom9;\n      yamlResources += `  # API Gateway\n  ApiGateway:\n    Type: AWS::ApiGateway::RestApi\n    Properties:\n      Name: !Sub '\\${ProjectName}-api'\n      Description: !Sub 'API for \\${ProjectName}'\n      EndpointConfiguration:\n        Types:\n          - REGIONAL\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n      if ((_formData$selectedCom9 = formData.selectedCompute) !== null && _formData$selectedCom9 !== void 0 && _formData$selectedCom9.includes('lambda-functions')) {\n        yamlResources += `  # API Gateway Resource\n  ApiGatewayResource:\n    Type: AWS::ApiGateway::Resource\n    Properties:\n      RestApiId: !Ref ApiGateway\n      ParentId: !GetAtt ApiGateway.RootResourceId\n      PathPart: api\n\n  # API Gateway Method\n  ApiGatewayMethod:\n    Type: AWS::ApiGateway::Method\n    Properties:\n      RestApiId: !Ref ApiGateway\n      ResourceId: !Ref ApiGatewayResource\n      HttpMethod: ANY\n      AuthorizationType: NONE\n      Integration:\n        Type: AWS_PROXY\n        IntegrationHttpMethod: POST\n        Uri: !Sub 'arn:aws:apigateway:\\${AWS::Region}:lambda:path/2015-03-31/functions/\\${LambdaFunction.Arn}/invocations'\n\n  # API Gateway Deployment\n  ApiGatewayDeployment:\n    Type: AWS::ApiGateway::Deployment\n    DependsOn:\n      - ApiGatewayMethod\n    Properties:\n      RestApiId: !Ref ApiGateway\n      StageName: !Ref Environment\n\n  # Lambda Permission for API Gateway\n  LambdaApiGatewayPermission:\n    Type: AWS::Lambda::Permission\n    Properties:\n      FunctionName: !Ref LambdaFunction\n      Action: lambda:InvokeFunction\n      Principal: apigateway.amazonaws.com\n      SourceArn: !Sub 'arn:aws:apigateway:\\${AWS::Region}::/restapis/\\${ApiGateway}/stages/\\${Environment}/*/*'\n\n`;\n      }\n    }\n\n    // Monitoring Resources\n    if ((_formData$selectedMon5 = formData.selectedMonitoring) !== null && _formData$selectedMon5 !== void 0 && _formData$selectedMon5.includes('cloudwatch')) {\n      yamlResources += `  # CloudWatch Log Group\n  LogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      LogGroupName: !Sub '/aws/lambda/\\${ProjectName}-logs'\n      RetentionInDays: 14\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n    return yamlResources || '  # No resources selected';\n  };\n  const generateOutputsYAML = () => {\n    var _formData$selectedInf1, _formData$selectedInf10, _formData$selectedCom0, _formData$selectedInt8, _formData$selectedMon6;\n    let yamlOutputs = '';\n    if ((_formData$selectedInf1 = formData.selectedInfrastructure) !== null && _formData$selectedInf1 !== void 0 && _formData$selectedInf1.includes('s3-bucket')) {\n      yamlOutputs += `  S3BucketName:\n    Description: S3 Bucket Name\n    Value: !Ref S3Bucket\n    Export:\n      Name: !Sub '\\${ProjectName}-s3-bucket'\n  S3BucketConsoleLink:\n    Description: S3 Bucket Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/s3/buckets/\\${S3Bucket}'\n\n`;\n    }\n    if ((_formData$selectedInf10 = formData.selectedInfrastructure) !== null && _formData$selectedInf10 !== void 0 && _formData$selectedInf10.includes('dynamodb')) {\n      yamlOutputs += `  DynamoDBTableName:\n    Description: DynamoDB Table Name\n    Value: !Ref DynamoDBTable\n    Export:\n      Name: !Sub '\\${ProjectName}-dynamodb-table'\n  DynamoDBConsoleLink:\n    Description: DynamoDB Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/dynamodbv2/home?region=\\${AWS::Region}#table?name=\\${DynamoDBTable}'\n\n`;\n    }\n    if ((_formData$selectedCom0 = formData.selectedCompute) !== null && _formData$selectedCom0 !== void 0 && _formData$selectedCom0.includes('lambda-functions')) {\n      yamlOutputs += `  LambdaFunctionArn:\n    Description: Lambda Function ARN\n    Value: !GetAtt LambdaFunction.Arn\n    Export:\n      Name: !Sub '\\${ProjectName}-lambda-arn'\n  LambdaConsoleLink:\n    Description: Lambda Function Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/lambda/home?region=\\${AWS::Region}#/functions/\\${LambdaFunction}'\n\n`;\n    }\n    if ((_formData$selectedInt8 = formData.selectedIntegration) !== null && _formData$selectedInt8 !== void 0 && _formData$selectedInt8.includes('api-gateway')) {\n      yamlOutputs += `  ApiEndpoint:\n    Description: API Gateway endpoint URL\n    Value: !Sub 'https://\\${ApiGateway}.execute-api.\\${AWS::Region}.amazonaws.com/\\${Environment}'\n    Export:\n      Name: !Sub '\\${ProjectName}-api-endpoint'\n  ApiGatewayConsoleLink:\n    Description: API Gateway Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/apigateway/home?region=\\${AWS::Region}#/apis/\\${ApiGateway}'\n\n`;\n    }\n    if ((_formData$selectedMon6 = formData.selectedMonitoring) !== null && _formData$selectedMon6 !== void 0 && _formData$selectedMon6.includes('cloudwatch')) {\n      yamlOutputs += `  LogGroupName:\n    Description: CloudWatch Log Group Name\n    Value: !Ref LogGroup\n    Export:\n      Name: !Sub '\\${ProjectName}-log-group'\n  CloudWatchConsoleLink:\n    Description: CloudWatch Logs Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=\\${AWS::Region}#logsV2:log-groups/log-group/\\${LogGroup}'\n\n`;\n    }\n    yamlOutputs += `  CloudFormationConsoleLink:\n    Description: CloudFormation Stack Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/cloudformation/home?region=\\${AWS::Region}#/stacks/stackinfo?stackId=\\${AWS::StackName}'\n\n  DeploymentRegion:\n    Description: AWS Region where resources are deployed\n    Value: !Ref AWS::Region\n\n`;\n    return yamlOutputs;\n  };\n  const generateDeploymentScript = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    const environment = formData.environment || 'Development';\n    const region = formData.awsRegion || 'us-east-1';\n    return `#!/bin/bash\n\n# ${projectName} Deployment Script\n# Generated by LambdaForge on ${new Date().toISOString()}\n\nset -e\n\n# Configuration\nPROJECT_NAME=\"${projectName}\"\nENVIRONMENT=\"${environment}\"\nAWS_REGION=\"${region}\"\nSTACK_NAME=\"\\${PROJECT_NAME}-stack\"\n\n# Colors for output\nRED='\\\\033[0;31m'\nGREEN='\\\\033[0;32m'\nYELLOW='\\\\033[1;33m'\nBLUE='\\\\033[0;34m'\nNC='\\\\033[0m'\n\nprint_status() {\n    echo -e \"\\${BLUE}[INFO]\\${NC} $1\"\n}\n\nprint_success() {\n    echo -e \"\\${GREEN}[SUCCESS]\\${NC} $1\"\n}\n\nprint_error() {\n    echo -e \"\\${RED}[ERROR]\\${NC} $1\"\n}\n\n# Check prerequisites\ncheck_prerequisites() {\n    print_status \"Checking prerequisites...\"\n    \n    if ! command -v aws &> /dev/null; then\n        print_error \"AWS CLI is not installed. Please install it first.\"\n        exit 1\n    fi\n    \n    if ! aws sts get-caller-identity &> /dev/null; then\n        print_error \"AWS credentials are not configured. Please run 'aws configure' first.\"\n        exit 1\n    fi\n    \n    print_success \"Prerequisites check passed.\"\n}\n\n# Deploy CloudFormation stack\ndeploy_stack() {\n    print_status \"Deploying CloudFormation stack...\"\n    \n    aws cloudformation deploy \\\\\n        --template-file template.yaml \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --parameter-overrides \\\\\n            ProjectName=\"\\$PROJECT_NAME\" \\\\\n            Environment=\"\\$ENVIRONMENT\" \\\\\n        --capabilities CAPABILITY_NAMED_IAM \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --no-fail-on-empty-changeset\n    \n    if [ $? -eq 0 ]; then\n        print_success \"Stack deployment completed successfully!\"\n    else\n        print_error \"Stack deployment failed!\"\n        exit 1\n    fi\n}\n\n# Get stack outputs\nget_outputs() {\n    print_status \"Retrieving stack outputs...\"\n    \n    aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs' \\\\\n        --output table\n}\n\n# Main deployment function\nmain() {\n    echo \"\"\n    echo \"======================================\"\n    echo \"🚀 ${projectName} Deployment\"\n    echo \"======================================\"\n    echo \"Project: \\$PROJECT_NAME\"\n    echo \"Environment: \\$ENVIRONMENT\"\n    echo \"Region: \\$AWS_REGION\"\n    echo \"\"\n    \n    check_prerequisites\n    deploy_stack\n    get_outputs\n    \n    print_success \"Deployment completed successfully! 🎉\"\n}\n\nmain \"$@\"\n`;\n  };\n  const generateReadme = () => {\n    var _formData$selectedInf11, _formData$selectedCom1, _formData$selectedInt9, _formData$selectedSec4, _formData$selectedMon7;\n    const projectName = formData.projectName || 'LambdaForge Project';\n    const environment = formData.environment || 'Development';\n    const region = formData.awsRegion || 'us-east-1';\n    return `# ${projectName}\n\nGenerated by **LambdaForge** - AWS Infrastructure Automation Platform\n\n## Overview\n\nThis project contains the infrastructure and deployment configuration for **${projectName}**.\n\n- **Environment:** ${environment}\n- **AWS Region:** ${region}\n- **Generated:** ${new Date().toISOString()}\n\n## Architecture\n\n### Selected AWS Services\n\n#### Infrastructure Services\n${((_formData$selectedInf11 = formData.selectedInfrastructure) === null || _formData$selectedInf11 === void 0 ? void 0 : _formData$selectedInf11.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n')) || '- None selected'}\n\n#### Compute Services\n${((_formData$selectedCom1 = formData.selectedCompute) === null || _formData$selectedCom1 === void 0 ? void 0 : _formData$selectedCom1.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n')) || '- None selected'}\n\n#### Integration Services\n${((_formData$selectedInt9 = formData.selectedIntegration) === null || _formData$selectedInt9 === void 0 ? void 0 : _formData$selectedInt9.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n')) || '- None selected'}\n\n#### Security Services\n${((_formData$selectedSec4 = formData.selectedSecurity) === null || _formData$selectedSec4 === void 0 ? void 0 : _formData$selectedSec4.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n')) || '- None selected'}\n\n#### Monitoring Services\n${((_formData$selectedMon7 = formData.selectedMonitoring) === null || _formData$selectedMon7 === void 0 ? void 0 : _formData$selectedMon7.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n')) || '- None selected'}\n\n## Quick Start\n\n### Prerequisites\n\n- AWS CLI installed and configured\n- Appropriate IAM permissions for the selected services\n- Bash shell (for deployment script)\n\n### Deployment\n\n\\`\\`\\`bash\n# Make the script executable\nchmod +x deploy.sh\n\n# Run deployment\n./deploy.sh\n\\`\\`\\`\n\n## Cost Estimation\n\nBased on your selected services, the estimated monthly cost is **$${estimatedCost}**.\n\n## AWS Console Links\n\n- [CloudFormation Stack](https://${region}.console.aws.amazon.com/cloudformation/home?region=${region}#/stacks)\n- [Lambda Functions](https://${region}.console.aws.amazon.com/lambda/home?region=${region}#/functions)\n- [Cost Explorer](https://console.aws.amazon.com/cost-management/home#/cost-explorer)\n\n## Files Included\n\n- \\`template.yaml\\` - CloudFormation template with all resources\n- \\`deploy.sh\\` - Automated deployment script\n- \\`README.md\\` - This documentation file\n\n---\n\n**Generated by LambdaForge** - Making AWS deployment simple and automated.\n`;\n  };\n\n  // Download single file\n  const downloadFile = (filename, content) => {\n    const element = document.createElement('a');\n    const file = new Blob([content], {\n      type: 'text/plain'\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = filename;\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n    URL.revokeObjectURL(element.href);\n  };\n\n  // Export Configuration function - makes the button functional!\n  const exportConfiguration = async () => {\n    setIsExporting(true);\n    try {\n      // Generate all files\n      const files = {\n        'template.yaml': generateCloudFormationTemplate(),\n        'deploy.sh': generateDeploymentScript(),\n        'README.md': generateReadme()\n      };\n      setGeneratedFiles(files);\n\n      // Download all files with a small delay between each\n      const fileEntries = Object.entries(files);\n      for (let i = 0; i < fileEntries.length; i++) {\n        const [filename, content] = fileEntries[i];\n        setTimeout(() => {\n          downloadFile(filename, content);\n        }, i * 500); // 500ms delay between downloads\n      }\n\n      // Show success message\n      setTimeout(() => {\n        alert(`✅ Successfully exported ${fileEntries.length} files!\\n\\nFiles downloaded:\\n${fileEntries.map(([filename]) => `• ${filename}`).join('\\n')}\\n\\nNext steps:\\n1. Extract files to a directory\\n2. Run: chmod +x deploy.sh\\n3. Run: ./deploy.sh`);\n      }, fileEntries.length * 500 + 500);\n    } catch (error) {\n      console.error('Export failed:', error);\n      alert('❌ Export failed. Please try again.');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n  const simulateDeployment = async () => {\n    setIsGenerating(true);\n    setDeploymentStatus('generating');\n    setProgress(0);\n    setGeneratedResources([]);\n    const tasks = [{\n      name: 'Validating AWS credentials',\n      duration: 800\n    }, {\n      name: 'Analyzing infrastructure requirements',\n      duration: 1200\n    }, {\n      name: 'Generating CloudFormation templates',\n      duration: 1500\n    }, {\n      name: 'Creating deployment scripts',\n      duration: 1000\n    }, {\n      name: 'Generating documentation',\n      duration: 800\n    }, {\n      name: 'Validating template syntax',\n      duration: 1000\n    }, {\n      name: 'Preparing deployment package',\n      duration: 700\n    }];\n    let totalProgress = 0;\n    const progressStep = 100 / tasks.length;\n    for (let i = 0; i < tasks.length; i++) {\n      setCurrentTask(tasks[i].name);\n      await new Promise(resolve => setTimeout(resolve, tasks[i].duration));\n      totalProgress += progressStep;\n      setProgress(Math.round(totalProgress));\n\n      // Add generated resources as we progress\n      if (i === 2) {\n        // After CloudFormation generation\n        setGeneratedResources(prev => [...prev, {\n          name: 'CloudFormation Template',\n          id: 'template.yaml',\n          status: 'generated',\n          type: 'infrastructure'\n        }]);\n      }\n      if (i === 3) {\n        // After deployment script\n        setGeneratedResources(prev => [...prev, {\n          name: 'Deployment Script',\n          id: 'deploy.sh',\n          status: 'generated',\n          type: 'automation'\n        }]);\n      }\n      if (i === 4) {\n        // After documentation\n        setGeneratedResources(prev => [...prev, {\n          name: 'README Documentation',\n          id: 'README.md',\n          status: 'generated',\n          type: 'documentation'\n        }]);\n      }\n    }\n\n    // Generate all files automatically\n    const files = {\n      'template.yaml': generateCloudFormationTemplate(),\n      'deploy.sh': generateDeploymentScript(),\n      'README.md': generateReadme()\n    };\n    setGeneratedFiles(files);\n    setCurrentTask('All deployment files generated successfully!');\n    setDeploymentStatus('completed');\n    setIsGenerating(false);\n  };\n  const getServiceCounts = () => {\n    var _formData$selectedInf12, _formData$selectedCom10, _formData$selectedInt0, _formData$selectedSec5, _formData$selectedMon8, _formData$selectedDep, _formData$selectedOpt;\n    return {\n      infrastructure: ((_formData$selectedInf12 = formData.selectedInfrastructure) === null || _formData$selectedInf12 === void 0 ? void 0 : _formData$selectedInf12.length) || 0,\n      compute: ((_formData$selectedCom10 = formData.selectedCompute) === null || _formData$selectedCom10 === void 0 ? void 0 : _formData$selectedCom10.length) || 0,\n      integration: ((_formData$selectedInt0 = formData.selectedIntegration) === null || _formData$selectedInt0 === void 0 ? void 0 : _formData$selectedInt0.length) || 0,\n      security: ((_formData$selectedSec5 = formData.selectedSecurity) === null || _formData$selectedSec5 === void 0 ? void 0 : _formData$selectedSec5.length) || 0,\n      monitoring: ((_formData$selectedMon8 = formData.selectedMonitoring) === null || _formData$selectedMon8 === void 0 ? void 0 : _formData$selectedMon8.length) || 0,\n      deployment: ((_formData$selectedDep = formData.selectedDeployment) === null || _formData$selectedDep === void 0 ? void 0 : _formData$selectedDep.length) || 0,\n      optimization: ((_formData$selectedOpt = formData.selectedOptimization) === null || _formData$selectedOpt === void 0 ? void 0 : _formData$selectedOpt.length) || 0\n    };\n  };\n  const serviceCounts = getServiceCounts();\n  const totalServices = Object.values(serviceCounts).reduce((a, b) => a + b, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-aws-blue mb-2\",\n        children: \"Generate Infrastructure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-aws-gray-600\",\n        children: \"Review your configuration and deploy your Lambda-powered infrastructure automation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2 space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-aws-gray-50 border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Zap, {\n              className: \"w-5 h-5 mr-2 text-aws-orange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 15\n            }, this), \"Configuration Summary\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 md:grid-cols-4 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-aws-blue\",\n                children: serviceCounts.infrastructure\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 916,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Infrastructure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 917,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-green-600\",\n                children: serviceCounts.compute\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Compute\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 919,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-purple-600\",\n                children: serviceCounts.security\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Security\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 923,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-aws-orange\",\n                children: totalServices\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Total Services\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 11\n        }, this), isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Clock, {\n              className: \"w-5 h-5 mr-2 text-aws-orange animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 938,\n              columnNumber: 17\n            }, this), \"Deployment Progress\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium text-aws-gray-700\",\n                children: currentTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-bold text-aws-blue\",\n                children: [progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full bg-aws-gray-200 rounded-full h-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gradient-to-r from-aws-orange to-green-500 h-3 rounded-full transition-all duration-500\",\n                style: {\n                  width: `${progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 947,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 946,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 13\n        }, this), generatedResources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"w-5 h-5 mr-2 text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 17\n            }, this), \"Generated Resources\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: generatedResources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-green-500 rounded-full\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 967,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-medium text-aws-blue\",\n                    children: resource.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 969,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-aws-gray-600\",\n                    children: resource.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 970,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 968,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"px-2 py-1 bg-green-100 text-green-800 text-xs font-medium rounded\",\n                children: resource.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 965,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n              className: \"w-5 h-5 mr-2 text-green-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 15\n            }, this), \"Cost Estimate\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-3xl font-bold text-green-600\",\n              children: [\"$\", estimatedCost]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 992,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-aws-gray-600\",\n              children: \"per month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-sm text-blue-800\",\n              children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n                className: \"w-4 h-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 17\n              }, this), \"Auto-scaling enabled for cost optimization\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 995,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4\",\n            children: \"Project Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-aws-blue\",\n                children: formData.projectName || 'Unnamed Project'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1009,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Environment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-aws-blue\",\n                children: formData.environment || 'Development'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"AWS Region\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-aws-blue\",\n                children: formData.awsRegion || 'us-east-1'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1017,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1006,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 11\n        }, this), deploymentStatus === 'completed' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Monitor, {\n              className: \"w-5 h-5 mr-2 text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 17\n            }, this), \"Health Status\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Infrastructure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flex items-center text-green-600\",\n                children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                  className: \"w-4 h-4 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1033,\n                  columnNumber: 21\n                }, this), \"Healthy\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1032,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Security\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1038,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flex items-center text-green-600\",\n                children: [/*#__PURE__*/_jsxDEV(Shield, {\n                  className: \"w-4 h-4 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1040,\n                  columnNumber: 21\n                }, this), \"Secure\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Performance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1045,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flex items-center text-green-600\",\n                children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n                  className: \"w-4 h-4 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1047,\n                  columnNumber: 21\n                }, this), \"Optimal\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1046,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1044,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 7\n    }, this), generatedFiles && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-50 border border-blue-200 rounded-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-blue-800 mb-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Package, {\n          className: \"w-5 h-5 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 13\n        }, this), \"Generated Deployment Package\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1060,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\",\n        children: Object.entries(generatedFiles).map(([filename, content]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-blue-200 rounded-lg p-3 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"w-8 h-8 text-blue-600 mx-auto mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1067,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-blue-800 text-sm\",\n            children: filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-blue-600\",\n            children: [Math.round(content.length / 1024), \"KB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1069,\n            columnNumber: 17\n          }, this)]\n        }, filename, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-blue-700\",\n        children: \"All files have been generated and downloaded. Extract them to a directory and run the deployment script.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1059,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col sm:flex-row gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: simulateDeployment,\n        disabled: isGenerating || deploymentStatus === 'completed',\n        className: `flex-1 flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all duration-200 ${isGenerating || deploymentStatus === 'completed' ? 'bg-aws-gray-300 text-aws-gray-500 cursor-not-allowed' : 'bg-aws-orange text-white hover:bg-aws-orange-dark shadow-lg hover:shadow-xl'}`,\n        children: isGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"w-5 h-5 animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Deploying Infrastructure...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : deploymentStatus === 'completed' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Deployment Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Play, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Deploy Infrastructure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportConfiguration,\n        disabled: isExporting,\n        className: `flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all duration-200 ${isExporting ? 'bg-aws-gray-300 text-aws-gray-500 cursor-not-allowed' : 'bg-green-600 text-white hover:bg-green-700 shadow-lg hover:shadow-xl'}`,\n        children: isExporting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"w-5 h-5 animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Exporting...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Download, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Export Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between pt-6 border-t border-aws-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevStep,\n        className: \"flex items-center space-x-2 text-aws-gray-600 hover:text-aws-blue transition-colors duration-200\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2190 BACK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-aws-gray-500\",\n        children: [\"Step \", currentStep, \" of \", totalSteps, \" - Ready to deploy! \\uD83D\\uDE80\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 895,\n    columnNumber: 5\n  }, this);\n};\n_s(GenerateStep, \"5IJlK43MXUcwYWB6RmWVXOIkvFo=\");\n_c = GenerateStep;\nexport default GenerateStep;\nvar _c;\n$RefreshReg$(_c, \"GenerateStep\");","map":{"version":3,"names":["React","useState","useEffect","Play","Download","Clock","DollarSign","CheckCircle","Zap","TrendingUp","Shield","Monitor","FileText","Package","jsxDEV","_jsxDEV","Fragment","_Fragment","GenerateStep","formData","prevStep","currentStep","totalSteps","_s","isGenerating","setIsGenerating","progress","setProgress","currentTask","setCurrentTask","estimatedCost","setEstimatedCost","generatedResources","setGeneratedResources","deploymentStatus","setDeploymentStatus","generatedFiles","setGeneratedFiles","isExporting","setIsExporting","_formData$selectedInf","_formData$selectedInf2","_formData$selectedInf3","_formData$selectedInf4","_formData$selectedInf5","_formData$selectedCom","_formData$selectedCom2","_formData$selectedCom3","_formData$selectedCom4","_formData$selectedInt","_formData$selectedInt2","_formData$selectedInt3","_formData$selectedInt4","_formData$selectedSec","_formData$selectedSec2","_formData$selectedSec3","_formData$selectedMon","_formData$selectedMon2","_formData$selectedMon3","cost","selectedInfrastructure","includes","selectedCompute","selectedIntegration","selectedSecurity","selectedMonitoring","generateCloudFormationTemplate","projectName","environment","yamlTemplate","generateResourcesYAML","generateOutputsYAML","generateResources","_formData$selectedInf6","_formData$selectedInf7","_formData$selectedCom5","_formData$selectedInt5","_formData$selectedMon4","resources","S3Bucket","Type","Properties","BucketName","VersioningConfiguration","Status","PublicAccessBlockConfiguration","BlockPublicAcls","BlockPublicPolicy","IgnorePublicAcls","RestrictPublicBuckets","Tags","Key","Value","Ref","DynamoDBTable","TableName","AttributeDefinitions","AttributeName","AttributeType","KeySchema","KeyType","BillingMode","PointInTimeRecoverySpecification","PointInTimeRecoveryEnabled","LambdaExecutionRole","RoleName","AssumeRolePolicyDocument","Version","Statement","Effect","Principal","Service","Action","ManagedPolicyArns","LambdaFunction","FunctionName","Runtime","Handler","Role","Code","ZipFile","Environment","Variables","PROJECT_NAME","ENVIRONMENT","_formData$selectedCom6","ApiGateway","Name","Description","EndpointConfiguration","Types","ApiGatewayResource","RestApiId","ParentId","PathPart","ApiGatewayMethod","ResourceId","HttpMethod","AuthorizationType","Integration","IntegrationHttpMethod","Uri","ApiGatewayDeployment","DependsOn","StageName","LambdaApiGatewayPermission","SourceArn","LogGroup","LogGroupName","RetentionInDays","generateOutputs","_formData$selectedInf8","_formData$selectedCom7","_formData$selectedInt6","outputs","S3BucketName","Export","LambdaFunctionArn","ApiEndpoint","_formData$selectedInf9","_formData$selectedInf0","_formData$selectedCom8","_formData$selectedInt7","_formData$selectedMon5","yamlResources","_formData$selectedCom9","_formData$selectedInf1","_formData$selectedInf10","_formData$selectedCom0","_formData$selectedInt8","_formData$selectedMon6","yamlOutputs","generateDeploymentScript","region","awsRegion","Date","toISOString","generateReadme","_formData$selectedInf11","_formData$selectedCom1","_formData$selectedInt9","_formData$selectedSec4","_formData$selectedMon7","map","service","replace","l","toUpperCase","join","downloadFile","filename","content","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","exportConfiguration","files","fileEntries","Object","entries","i","length","setTimeout","alert","error","console","simulateDeployment","tasks","name","duration","totalProgress","progressStep","Promise","resolve","Math","round","prev","id","status","getServiceCounts","_formData$selectedInf12","_formData$selectedCom10","_formData$selectedInt0","_formData$selectedSec5","_formData$selectedMon8","_formData$selectedDep","_formData$selectedOpt","infrastructure","compute","integration","security","monitoring","deployment","selectedDeployment","optimization","selectedOptimization","serviceCounts","totalServices","values","reduce","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","resource","index","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/codinggents/Documents/lambdaforge/src/components/steps/GenerateStep.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Play, Download, Clock, DollarSign, CheckCircle, Zap, TrendingUp, Shield, Monitor, FileText, Package } from 'lucide-react';\n\nconst GenerateStep = ({ formData, prevStep, currentStep, totalSteps }) => {\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [currentTask, setCurrentTask] = useState('');\n  const [estimatedCost, setEstimatedCost] = useState(0);\n  const [generatedResources, setGeneratedResources] = useState([]);\n  const [deploymentStatus, setDeploymentStatus] = useState('ready'); // ready, generating, completed, error\n  const [generatedFiles, setGeneratedFiles] = useState(null);\n  const [isExporting, setIsExporting] = useState(false);\n\n  // Calculate estimated monthly cost based on selections\n  useEffect(() => {\n    let cost = 0;\n    \n    // Infrastructure costs\n    if (formData.selectedInfrastructure?.includes('s3-bucket')) cost += 23;\n    if (formData.selectedInfrastructure?.includes('dynamodb')) cost += 45;\n    if (formData.selectedInfrastructure?.includes('rds-database')) cost += 85;\n    if (formData.selectedInfrastructure?.includes('vpc-networking')) cost += 15;\n    if (formData.selectedInfrastructure?.includes('ebs-volumes')) cost += 30;\n\n    // Compute costs\n    if (formData.selectedCompute?.includes('lambda-functions')) cost += 12;\n    if (formData.selectedCompute?.includes('ec2-instances')) cost += 120;\n    if (formData.selectedCompute?.includes('ecs-containers')) cost += 95;\n    if (formData.selectedCompute?.includes('fargate-serverless')) cost += 75;\n\n    // Integration costs\n    if (formData.selectedIntegration?.includes('api-gateway')) cost += 25;\n    if (formData.selectedIntegration?.includes('eventbridge')) cost += 8;\n    if (formData.selectedIntegration?.includes('step-functions')) cost += 15;\n    if (formData.selectedIntegration?.includes('sns-notifications')) cost += 5;\n\n    // Security costs\n    if (formData.selectedSecurity?.includes('kms-encryption')) cost += 12;\n    if (formData.selectedSecurity?.includes('secrets-manager')) cost += 8;\n    if (formData.selectedSecurity?.includes('waf-protection')) cost += 35;\n\n    // Monitoring costs\n    if (formData.selectedMonitoring?.includes('cloudwatch')) cost += 18;\n    if (formData.selectedMonitoring?.includes('x-ray-tracing')) cost += 22;\n    if (formData.selectedMonitoring?.includes('cloudtrail')) cost += 10;\n\n    setEstimatedCost(cost);\n  }, [formData]);\n\n  // File generation functions\n  const generateCloudFormationTemplate = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    const environment = formData.environment || 'Development';\n    \n    // Generate YAML format instead of JSON\n    const yamlTemplate = `AWSTemplateFormatVersion: '2010-09-09'\nDescription: '${projectName} - Generated by LambdaForge'\n\nParameters:\n  ProjectName:\n    Type: String\n    Default: ${projectName}\n    Description: Name of the project\n  Environment:\n    Type: String\n    Default: ${environment}\n    AllowedValues:\n      - Development\n      - Staging\n      - Production\n    Description: Environment type\n\nResources:\n${generateResourcesYAML()}\n\nOutputs:\n${generateOutputsYAML()}`;\n\n    return yamlTemplate;\n  };\n\n  const generateResources = () => {\n    const resources = {};\n\n    // Infrastructure Resources\n    if (formData.selectedInfrastructure?.includes('s3-bucket')) {\n      resources.S3Bucket = {\n        Type: 'AWS::S3::Bucket',\n        Properties: {\n          BucketName: { 'Fn::Sub': '${ProjectName}-storage-${AWS::AccountId}' },\n          VersioningConfiguration: { Status: 'Enabled' },\n          PublicAccessBlockConfiguration: {\n            BlockPublicAcls: true,\n            BlockPublicPolicy: true,\n            IgnorePublicAcls: true,\n            RestrictPublicBuckets: true\n          },\n          Tags: [\n            { Key: 'Project', Value: { Ref: 'ProjectName' } },\n            { Key: 'Environment', Value: { Ref: 'Environment' } }\n          ]\n        }\n      };\n    }\n\n    if (formData.selectedInfrastructure?.includes('dynamodb')) {\n      resources.DynamoDBTable = {\n        Type: 'AWS::DynamoDB::Table',\n        Properties: {\n          TableName: { 'Fn::Sub': '${ProjectName}-data' },\n          AttributeDefinitions: [\n            { AttributeName: 'id', AttributeType: 'S' }\n          ],\n          KeySchema: [\n            { AttributeName: 'id', KeyType: 'HASH' }\n          ],\n          BillingMode: 'PAY_PER_REQUEST',\n          PointInTimeRecoverySpecification: {\n            PointInTimeRecoveryEnabled: true\n          },\n          Tags: [\n            { Key: 'Project', Value: { Ref: 'ProjectName' } },\n            { Key: 'Environment', Value: { Ref: 'Environment' } }\n          ]\n        }\n      };\n    }\n\n    // Compute Resources\n    if (formData.selectedCompute?.includes('lambda-functions')) {\n      resources.LambdaExecutionRole = {\n        Type: 'AWS::IAM::Role',\n        Properties: {\n          RoleName: { 'Fn::Sub': '${ProjectName}-lambda-role' },\n          AssumeRolePolicyDocument: {\n            Version: '2012-10-17',\n            Statement: [{\n              Effect: 'Allow',\n              Principal: { Service: 'lambda.amazonaws.com' },\n              Action: 'sts:AssumeRole'\n            }]\n          },\n          ManagedPolicyArns: [\n            'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'\n          ],\n          Tags: [\n            { Key: 'Project', Value: { Ref: 'ProjectName' } },\n            { Key: 'Environment', Value: { Ref: 'Environment' } }\n          ]\n        }\n      };\n\n      resources.LambdaFunction = {\n        Type: 'AWS::Lambda::Function',\n        Properties: {\n          FunctionName: { 'Fn::Sub': '${ProjectName}-function' },\n          Runtime: 'nodejs18.x',\n          Handler: 'index.handler',\n          Role: { 'Fn::GetAtt': ['LambdaExecutionRole', 'Arn'] },\n          Code: {\n            ZipFile: `exports.handler = async (event) => {\n    console.log('Event:', JSON.stringify(event, null, 2));\n    \n    const response = {\n        statusCode: 200,\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify({\n            message: 'Hello from ${formData.projectName || 'LambdaForge'}!',\n            timestamp: new Date().toISOString(),\n            environment: '${formData.environment || 'Development'}'\n        })\n    };\n    \n    return response;\n};`\n          },\n          Environment: {\n            Variables: {\n              PROJECT_NAME: { Ref: 'ProjectName' },\n              ENVIRONMENT: { Ref: 'Environment' }\n            }\n          },\n          Tags: [\n            { Key: 'Project', Value: { Ref: 'ProjectName' } },\n            { Key: 'Environment', Value: { Ref: 'Environment' } }\n          ]\n        }\n      };\n    }\n\n    // Integration Resources\n    if (formData.selectedIntegration?.includes('api-gateway')) {\n      resources.ApiGateway = {\n        Type: 'AWS::ApiGateway::RestApi',\n        Properties: {\n          Name: { 'Fn::Sub': '${ProjectName}-api' },\n          Description: `API for ${formData.projectName || 'LambdaForge Project'}`,\n          EndpointConfiguration: {\n            Types: ['REGIONAL']\n          },\n          Tags: [\n            { Key: 'Project', Value: { Ref: 'ProjectName' } },\n            { Key: 'Environment', Value: { Ref: 'Environment' } }\n          ]\n        }\n      };\n\n      if (formData.selectedCompute?.includes('lambda-functions')) {\n        resources.ApiGatewayResource = {\n          Type: 'AWS::ApiGateway::Resource',\n          Properties: {\n            RestApiId: { Ref: 'ApiGateway' },\n            ParentId: { 'Fn::GetAtt': ['ApiGateway', 'RootResourceId'] },\n            PathPart: 'api'\n          }\n        };\n\n        resources.ApiGatewayMethod = {\n          Type: 'AWS::ApiGateway::Method',\n          Properties: {\n            RestApiId: { Ref: 'ApiGateway' },\n            ResourceId: { Ref: 'ApiGatewayResource' },\n            HttpMethod: 'ANY',\n            AuthorizationType: 'NONE',\n            Integration: {\n              Type: 'AWS_PROXY',\n              IntegrationHttpMethod: 'POST',\n              Uri: {\n                'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations'\n              }\n            }\n          }\n        };\n\n        resources.ApiGatewayDeployment = {\n          Type: 'AWS::ApiGateway::Deployment',\n          DependsOn: ['ApiGatewayMethod'],\n          Properties: {\n            RestApiId: { Ref: 'ApiGateway' },\n            StageName: { Ref: 'Environment' }\n          }\n        };\n\n        resources.LambdaApiGatewayPermission = {\n          Type: 'AWS::Lambda::Permission',\n          Properties: {\n            FunctionName: { Ref: 'LambdaFunction' },\n            Action: 'lambda:InvokeFunction',\n            Principal: 'apigateway.amazonaws.com',\n            SourceArn: {\n              'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}::/restapis/${ApiGateway}/stages/${Environment}/*/*'\n            }\n          }\n        };\n      }\n    }\n\n    // Monitoring Resources\n    if (formData.selectedMonitoring?.includes('cloudwatch')) {\n      resources.LogGroup = {\n        Type: 'AWS::Logs::LogGroup',\n        Properties: {\n          LogGroupName: { 'Fn::Sub': '/aws/lambda/${ProjectName}-logs' },\n          RetentionInDays: 14,\n          Tags: [\n            { Key: 'Project', Value: { Ref: 'ProjectName' } },\n            { Key: 'Environment', Value: { Ref: 'Environment' } }\n          ]\n        }\n      };\n    }\n\n    return resources;\n  };\n\n  const generateOutputs = () => {\n    const outputs = {};\n\n    if (formData.selectedInfrastructure?.includes('s3-bucket')) {\n      outputs.S3BucketName = {\n        Description: 'S3 Bucket Name',\n        Value: { Ref: 'S3Bucket' },\n        Export: { Name: { 'Fn::Sub': '${ProjectName}-s3-bucket' } }\n      };\n    }\n\n    if (formData.selectedCompute?.includes('lambda-functions')) {\n      outputs.LambdaFunctionArn = {\n        Description: 'Lambda Function ARN',\n        Value: { 'Fn::GetAtt': ['LambdaFunction', 'Arn'] },\n        Export: { Name: { 'Fn::Sub': '${ProjectName}-lambda-arn' } }\n      };\n    }\n\n    if (formData.selectedIntegration?.includes('api-gateway')) {\n      outputs.ApiEndpoint = {\n        Description: 'API Gateway endpoint URL',\n        Value: {\n          'Fn::Sub': 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}'\n        },\n        Export: { Name: { 'Fn::Sub': '${ProjectName}-api-endpoint' } }\n      };\n    }\n\n    return outputs;\n  };\n\n  // YAML generation functions for proper CloudFormation format\n  const generateResourcesYAML = () => {\n    let yamlResources = '';\n\n    // Infrastructure Resources\n    if (formData.selectedInfrastructure?.includes('s3-bucket')) {\n      yamlResources += `  # S3 Bucket with versioning and security\n  S3Bucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: !Sub '\\${ProjectName}-storage-\\${AWS::AccountId}-\\${AWS::Region}'\n      VersioningConfiguration:\n        Status: Enabled\n      PublicAccessBlockConfiguration:\n        BlockPublicAcls: true\n        BlockPublicPolicy: true\n        IgnorePublicAcls: true\n        RestrictPublicBuckets: true\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    if (formData.selectedInfrastructure?.includes('dynamodb')) {\n      yamlResources += `  # DynamoDB Table\n  DynamoDBTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      TableName: !Sub '\\${ProjectName}-data'\n      AttributeDefinitions:\n        - AttributeName: id\n          AttributeType: S\n      KeySchema:\n        - AttributeName: id\n          KeyType: HASH\n      BillingMode: PAY_PER_REQUEST\n      PointInTimeRecoverySpecification:\n        PointInTimeRecoveryEnabled: true\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    // Compute Resources - Fixed IAM role without custom naming\n    if (formData.selectedCompute?.includes('lambda-functions')) {\n      yamlResources += `  # Lambda Execution Role (no custom name to avoid conflicts)\n  LambdaExecutionRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service: lambda.amazonaws.com\n            Action: sts:AssumeRole\n      ManagedPolicyArns:\n        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n  # Lambda Function\n  LambdaFunction:\n    Type: AWS::Lambda::Function\n    Properties:\n      FunctionName: !Sub '\\${ProjectName}-function'\n      Runtime: nodejs18.x\n      Handler: index.handler\n      Role: !GetAtt LambdaExecutionRole.Arn\n      Code:\n        ZipFile: |\n          exports.handler = async (event) => {\n              console.log('Event:', JSON.stringify(event, null, 2));\n              \n              const response = {\n                  statusCode: 200,\n                  headers: {\n                      'Content-Type': 'application/json',\n                      'Access-Control-Allow-Origin': '*'\n                  },\n                  body: JSON.stringify({\n                      message: 'Hello from ${formData.projectName || 'LambdaForge'}!',\n                      timestamp: new Date().toISOString(),\n                      environment: process.env.ENVIRONMENT || 'Development'\n                  })\n              };\n              \n              return response;\n          };\n      Environment:\n        Variables:\n          PROJECT_NAME: !Ref ProjectName\n          ENVIRONMENT: !Ref Environment\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    // Integration Resources\n    if (formData.selectedIntegration?.includes('api-gateway')) {\n      yamlResources += `  # API Gateway\n  ApiGateway:\n    Type: AWS::ApiGateway::RestApi\n    Properties:\n      Name: !Sub '\\${ProjectName}-api'\n      Description: !Sub 'API for \\${ProjectName}'\n      EndpointConfiguration:\n        Types:\n          - REGIONAL\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n\n      if (formData.selectedCompute?.includes('lambda-functions')) {\n        yamlResources += `  # API Gateway Resource\n  ApiGatewayResource:\n    Type: AWS::ApiGateway::Resource\n    Properties:\n      RestApiId: !Ref ApiGateway\n      ParentId: !GetAtt ApiGateway.RootResourceId\n      PathPart: api\n\n  # API Gateway Method\n  ApiGatewayMethod:\n    Type: AWS::ApiGateway::Method\n    Properties:\n      RestApiId: !Ref ApiGateway\n      ResourceId: !Ref ApiGatewayResource\n      HttpMethod: ANY\n      AuthorizationType: NONE\n      Integration:\n        Type: AWS_PROXY\n        IntegrationHttpMethod: POST\n        Uri: !Sub 'arn:aws:apigateway:\\${AWS::Region}:lambda:path/2015-03-31/functions/\\${LambdaFunction.Arn}/invocations'\n\n  # API Gateway Deployment\n  ApiGatewayDeployment:\n    Type: AWS::ApiGateway::Deployment\n    DependsOn:\n      - ApiGatewayMethod\n    Properties:\n      RestApiId: !Ref ApiGateway\n      StageName: !Ref Environment\n\n  # Lambda Permission for API Gateway\n  LambdaApiGatewayPermission:\n    Type: AWS::Lambda::Permission\n    Properties:\n      FunctionName: !Ref LambdaFunction\n      Action: lambda:InvokeFunction\n      Principal: apigateway.amazonaws.com\n      SourceArn: !Sub 'arn:aws:apigateway:\\${AWS::Region}::/restapis/\\${ApiGateway}/stages/\\${Environment}/*/*'\n\n`;\n      }\n    }\n\n    // Monitoring Resources\n    if (formData.selectedMonitoring?.includes('cloudwatch')) {\n      yamlResources += `  # CloudWatch Log Group\n  LogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      LogGroupName: !Sub '/aws/lambda/\\${ProjectName}-logs'\n      RetentionInDays: 14\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    return yamlResources || '  # No resources selected';\n  };\n\n  const generateOutputsYAML = () => {\n    let yamlOutputs = '';\n\n    if (formData.selectedInfrastructure?.includes('s3-bucket')) {\n      yamlOutputs += `  S3BucketName:\n    Description: S3 Bucket Name\n    Value: !Ref S3Bucket\n    Export:\n      Name: !Sub '\\${ProjectName}-s3-bucket'\n  S3BucketConsoleLink:\n    Description: S3 Bucket Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/s3/buckets/\\${S3Bucket}'\n\n`;\n    }\n\n    if (formData.selectedInfrastructure?.includes('dynamodb')) {\n      yamlOutputs += `  DynamoDBTableName:\n    Description: DynamoDB Table Name\n    Value: !Ref DynamoDBTable\n    Export:\n      Name: !Sub '\\${ProjectName}-dynamodb-table'\n  DynamoDBConsoleLink:\n    Description: DynamoDB Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/dynamodbv2/home?region=\\${AWS::Region}#table?name=\\${DynamoDBTable}'\n\n`;\n    }\n\n    if (formData.selectedCompute?.includes('lambda-functions')) {\n      yamlOutputs += `  LambdaFunctionArn:\n    Description: Lambda Function ARN\n    Value: !GetAtt LambdaFunction.Arn\n    Export:\n      Name: !Sub '\\${ProjectName}-lambda-arn'\n  LambdaConsoleLink:\n    Description: Lambda Function Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/lambda/home?region=\\${AWS::Region}#/functions/\\${LambdaFunction}'\n\n`;\n    }\n\n    if (formData.selectedIntegration?.includes('api-gateway')) {\n      yamlOutputs += `  ApiEndpoint:\n    Description: API Gateway endpoint URL\n    Value: !Sub 'https://\\${ApiGateway}.execute-api.\\${AWS::Region}.amazonaws.com/\\${Environment}'\n    Export:\n      Name: !Sub '\\${ProjectName}-api-endpoint'\n  ApiGatewayConsoleLink:\n    Description: API Gateway Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/apigateway/home?region=\\${AWS::Region}#/apis/\\${ApiGateway}'\n\n`;\n    }\n\n    if (formData.selectedMonitoring?.includes('cloudwatch')) {\n      yamlOutputs += `  LogGroupName:\n    Description: CloudWatch Log Group Name\n    Value: !Ref LogGroup\n    Export:\n      Name: !Sub '\\${ProjectName}-log-group'\n  CloudWatchConsoleLink:\n    Description: CloudWatch Logs Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=\\${AWS::Region}#logsV2:log-groups/log-group/\\${LogGroup}'\n\n`;\n    }\n\n    yamlOutputs += `  CloudFormationConsoleLink:\n    Description: CloudFormation Stack Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/cloudformation/home?region=\\${AWS::Region}#/stacks/stackinfo?stackId=\\${AWS::StackName}'\n\n  DeploymentRegion:\n    Description: AWS Region where resources are deployed\n    Value: !Ref AWS::Region\n\n`;\n\n    return yamlOutputs;\n  };\n\n  const generateDeploymentScript = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    const environment = formData.environment || 'Development';\n    const region = formData.awsRegion || 'us-east-1';\n\n    return `#!/bin/bash\n\n# ${projectName} Deployment Script\n# Generated by LambdaForge on ${new Date().toISOString()}\n\nset -e\n\n# Configuration\nPROJECT_NAME=\"${projectName}\"\nENVIRONMENT=\"${environment}\"\nAWS_REGION=\"${region}\"\nSTACK_NAME=\"\\${PROJECT_NAME}-stack\"\n\n# Colors for output\nRED='\\\\033[0;31m'\nGREEN='\\\\033[0;32m'\nYELLOW='\\\\033[1;33m'\nBLUE='\\\\033[0;34m'\nNC='\\\\033[0m'\n\nprint_status() {\n    echo -e \"\\${BLUE}[INFO]\\${NC} $1\"\n}\n\nprint_success() {\n    echo -e \"\\${GREEN}[SUCCESS]\\${NC} $1\"\n}\n\nprint_error() {\n    echo -e \"\\${RED}[ERROR]\\${NC} $1\"\n}\n\n# Check prerequisites\ncheck_prerequisites() {\n    print_status \"Checking prerequisites...\"\n    \n    if ! command -v aws &> /dev/null; then\n        print_error \"AWS CLI is not installed. Please install it first.\"\n        exit 1\n    fi\n    \n    if ! aws sts get-caller-identity &> /dev/null; then\n        print_error \"AWS credentials are not configured. Please run 'aws configure' first.\"\n        exit 1\n    fi\n    \n    print_success \"Prerequisites check passed.\"\n}\n\n# Deploy CloudFormation stack\ndeploy_stack() {\n    print_status \"Deploying CloudFormation stack...\"\n    \n    aws cloudformation deploy \\\\\n        --template-file template.yaml \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --parameter-overrides \\\\\n            ProjectName=\"\\$PROJECT_NAME\" \\\\\n            Environment=\"\\$ENVIRONMENT\" \\\\\n        --capabilities CAPABILITY_NAMED_IAM \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --no-fail-on-empty-changeset\n    \n    if [ $? -eq 0 ]; then\n        print_success \"Stack deployment completed successfully!\"\n    else\n        print_error \"Stack deployment failed!\"\n        exit 1\n    fi\n}\n\n# Get stack outputs\nget_outputs() {\n    print_status \"Retrieving stack outputs...\"\n    \n    aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs' \\\\\n        --output table\n}\n\n# Main deployment function\nmain() {\n    echo \"\"\n    echo \"======================================\"\n    echo \"🚀 ${projectName} Deployment\"\n    echo \"======================================\"\n    echo \"Project: \\$PROJECT_NAME\"\n    echo \"Environment: \\$ENVIRONMENT\"\n    echo \"Region: \\$AWS_REGION\"\n    echo \"\"\n    \n    check_prerequisites\n    deploy_stack\n    get_outputs\n    \n    print_success \"Deployment completed successfully! 🎉\"\n}\n\nmain \"$@\"\n`;\n  };\n\n  const generateReadme = () => {\n    const projectName = formData.projectName || 'LambdaForge Project';\n    const environment = formData.environment || 'Development';\n    const region = formData.awsRegion || 'us-east-1';\n\n    return `# ${projectName}\n\nGenerated by **LambdaForge** - AWS Infrastructure Automation Platform\n\n## Overview\n\nThis project contains the infrastructure and deployment configuration for **${projectName}**.\n\n- **Environment:** ${environment}\n- **AWS Region:** ${region}\n- **Generated:** ${new Date().toISOString()}\n\n## Architecture\n\n### Selected AWS Services\n\n#### Infrastructure Services\n${formData.selectedInfrastructure?.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n') || '- None selected'}\n\n#### Compute Services\n${formData.selectedCompute?.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n') || '- None selected'}\n\n#### Integration Services\n${formData.selectedIntegration?.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n') || '- None selected'}\n\n#### Security Services\n${formData.selectedSecurity?.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n') || '- None selected'}\n\n#### Monitoring Services\n${formData.selectedMonitoring?.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n') || '- None selected'}\n\n## Quick Start\n\n### Prerequisites\n\n- AWS CLI installed and configured\n- Appropriate IAM permissions for the selected services\n- Bash shell (for deployment script)\n\n### Deployment\n\n\\`\\`\\`bash\n# Make the script executable\nchmod +x deploy.sh\n\n# Run deployment\n./deploy.sh\n\\`\\`\\`\n\n## Cost Estimation\n\nBased on your selected services, the estimated monthly cost is **$${estimatedCost}**.\n\n## AWS Console Links\n\n- [CloudFormation Stack](https://${region}.console.aws.amazon.com/cloudformation/home?region=${region}#/stacks)\n- [Lambda Functions](https://${region}.console.aws.amazon.com/lambda/home?region=${region}#/functions)\n- [Cost Explorer](https://console.aws.amazon.com/cost-management/home#/cost-explorer)\n\n## Files Included\n\n- \\`template.yaml\\` - CloudFormation template with all resources\n- \\`deploy.sh\\` - Automated deployment script\n- \\`README.md\\` - This documentation file\n\n---\n\n**Generated by LambdaForge** - Making AWS deployment simple and automated.\n`;\n  };\n\n  // Download single file\n  const downloadFile = (filename, content) => {\n    const element = document.createElement('a');\n    const file = new Blob([content], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = filename;\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n    URL.revokeObjectURL(element.href);\n  };\n\n  // Export Configuration function - makes the button functional!\n  const exportConfiguration = async () => {\n    setIsExporting(true);\n    \n    try {\n      // Generate all files\n      const files = {\n        'template.yaml': generateCloudFormationTemplate(),\n        'deploy.sh': generateDeploymentScript(),\n        'README.md': generateReadme()\n      };\n\n      setGeneratedFiles(files);\n\n      // Download all files with a small delay between each\n      const fileEntries = Object.entries(files);\n      for (let i = 0; i < fileEntries.length; i++) {\n        const [filename, content] = fileEntries[i];\n        setTimeout(() => {\n          downloadFile(filename, content);\n        }, i * 500); // 500ms delay between downloads\n      }\n\n      // Show success message\n      setTimeout(() => {\n        alert(`✅ Successfully exported ${fileEntries.length} files!\\n\\nFiles downloaded:\\n${fileEntries.map(([filename]) => `• ${filename}`).join('\\n')}\\n\\nNext steps:\\n1. Extract files to a directory\\n2. Run: chmod +x deploy.sh\\n3. Run: ./deploy.sh`);\n      }, fileEntries.length * 500 + 500);\n\n    } catch (error) {\n      console.error('Export failed:', error);\n      alert('❌ Export failed. Please try again.');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const simulateDeployment = async () => {\n    setIsGenerating(true);\n    setDeploymentStatus('generating');\n    setProgress(0);\n    setGeneratedResources([]);\n\n    const tasks = [\n      { name: 'Validating AWS credentials', duration: 800 },\n      { name: 'Analyzing infrastructure requirements', duration: 1200 },\n      { name: 'Generating CloudFormation templates', duration: 1500 },\n      { name: 'Creating deployment scripts', duration: 1000 },\n      { name: 'Generating documentation', duration: 800 },\n      { name: 'Validating template syntax', duration: 1000 },\n      { name: 'Preparing deployment package', duration: 700 }\n    ];\n\n    let totalProgress = 0;\n    const progressStep = 100 / tasks.length;\n\n    for (let i = 0; i < tasks.length; i++) {\n      setCurrentTask(tasks[i].name);\n      \n      await new Promise(resolve => setTimeout(resolve, tasks[i].duration));\n      \n      totalProgress += progressStep;\n      setProgress(Math.round(totalProgress));\n\n      // Add generated resources as we progress\n      if (i === 2) { // After CloudFormation generation\n        setGeneratedResources(prev => [...prev, \n          { name: 'CloudFormation Template', id: 'template.yaml', status: 'generated', type: 'infrastructure' }\n        ]);\n      }\n      if (i === 3) { // After deployment script\n        setGeneratedResources(prev => [...prev, \n          { name: 'Deployment Script', id: 'deploy.sh', status: 'generated', type: 'automation' }\n        ]);\n      }\n      if (i === 4) { // After documentation\n        setGeneratedResources(prev => [...prev, \n          { name: 'README Documentation', id: 'README.md', status: 'generated', type: 'documentation' }\n        ]);\n      }\n    }\n\n    // Generate all files automatically\n    const files = {\n      'template.yaml': generateCloudFormationTemplate(),\n      'deploy.sh': generateDeploymentScript(),\n      'README.md': generateReadme()\n    };\n    \n    setGeneratedFiles(files);\n    setCurrentTask('All deployment files generated successfully!');\n    setDeploymentStatus('completed');\n    setIsGenerating(false);\n  };\n\n  const getServiceCounts = () => {\n    return {\n      infrastructure: formData.selectedInfrastructure?.length || 0,\n      compute: formData.selectedCompute?.length || 0,\n      integration: formData.selectedIntegration?.length || 0,\n      security: formData.selectedSecurity?.length || 0,\n      monitoring: formData.selectedMonitoring?.length || 0,\n      deployment: formData.selectedDeployment?.length || 0,\n      optimization: formData.selectedOptimization?.length || 0\n    };\n  };\n\n  const serviceCounts = getServiceCounts();\n  const totalServices = Object.values(serviceCounts).reduce((a, b) => a + b, 0);\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Header */}\n      <div>\n        <h2 className=\"text-2xl font-bold text-aws-blue mb-2\">Generate Infrastructure</h2>\n        <p className=\"text-aws-gray-600\">\n          Review your configuration and deploy your Lambda-powered infrastructure automation.\n        </p>\n      </div>\n\n      {/* Project Overview */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Project Info */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          {/* Configuration Summary */}\n          <div className=\"bg-aws-gray-50 border border-aws-gray-200 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n              <Zap className=\"w-5 h-5 mr-2 text-aws-orange\" />\n              Configuration Summary\n            </h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-aws-blue\">{serviceCounts.infrastructure}</div>\n                <div className=\"text-sm text-aws-gray-600\">Infrastructure</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">{serviceCounts.compute}</div>\n                <div className=\"text-sm text-aws-gray-600\">Compute</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-purple-600\">{serviceCounts.security}</div>\n                <div className=\"text-sm text-aws-gray-600\">Security</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-aws-orange\">{totalServices}</div>\n                <div className=\"text-sm text-aws-gray-600\">Total Services</div>\n              </div>\n            </div>\n          </div>\n\n          {/* Live Progress */}\n          {isGenerating && (\n            <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n                <Clock className=\"w-5 h-5 mr-2 text-aws-orange animate-spin\" />\n                Deployment Progress\n              </h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm font-medium text-aws-gray-700\">{currentTask}</span>\n                  <span className=\"text-sm font-bold text-aws-blue\">{progress}%</span>\n                </div>\n                <div className=\"w-full bg-aws-gray-200 rounded-full h-3\">\n                  <div \n                    className=\"bg-gradient-to-r from-aws-orange to-green-500 h-3 rounded-full transition-all duration-500\"\n                    style={{ width: `${progress}%` }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Generated Resources */}\n          {generatedResources.length > 0 && (\n            <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n                <CheckCircle className=\"w-5 h-5 mr-2 text-green-500\" />\n                Generated Resources\n              </h3>\n              <div className=\"space-y-3\">\n                {generatedResources.map((resource, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                      <div>\n                        <div className=\"font-medium text-aws-blue\">{resource.name}</div>\n                        <div className=\"text-sm text-aws-gray-600\">{resource.id}</div>\n                      </div>\n                    </div>\n                    <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs font-medium rounded\">\n                      {resource.status}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Cost Estimate & Actions */}\n        <div className=\"space-y-6\">\n          {/* Cost Estimate */}\n          <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n              <DollarSign className=\"w-5 h-5 mr-2 text-green-600\" />\n              Cost Estimate\n            </h3>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-green-600\">${estimatedCost}</div>\n              <div className=\"text-sm text-aws-gray-600\">per month</div>\n            </div>\n            <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n              <div className=\"flex items-center text-sm text-blue-800\">\n                <TrendingUp className=\"w-4 h-4 mr-2\" />\n                Auto-scaling enabled for cost optimization\n              </div>\n            </div>\n          </div>\n\n          {/* Project Details */}\n          <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-aws-blue mb-4\">Project Details</h3>\n            <div className=\"space-y-3\">\n              <div>\n                <div className=\"text-sm text-aws-gray-600\">Project Name</div>\n                <div className=\"font-medium text-aws-blue\">{formData.projectName || 'Unnamed Project'}</div>\n              </div>\n              <div>\n                <div className=\"text-sm text-aws-gray-600\">Environment</div>\n                <div className=\"font-medium text-aws-blue\">{formData.environment || 'Development'}</div>\n              </div>\n              <div>\n                <div className=\"text-sm text-aws-gray-600\">AWS Region</div>\n                <div className=\"font-medium text-aws-blue\">{formData.awsRegion || 'us-east-1'}</div>\n              </div>\n            </div>\n          </div>\n\n          {/* Health Status */}\n          {deploymentStatus === 'completed' && (\n            <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n                <Monitor className=\"w-5 h-5 mr-2 text-green-500\" />\n                Health Status\n              </h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-aws-gray-600\">Infrastructure</span>\n                  <span className=\"flex items-center text-green-600\">\n                    <CheckCircle className=\"w-4 h-4 mr-1\" />\n                    Healthy\n                  </span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-aws-gray-600\">Security</span>\n                  <span className=\"flex items-center text-green-600\">\n                    <Shield className=\"w-4 h-4 mr-1\" />\n                    Secure\n                  </span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-aws-gray-600\">Performance</span>\n                  <span className=\"flex items-center text-green-600\">\n                    <TrendingUp className=\"w-4 h-4 mr-1\" />\n                    Optimal\n                  </span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Enhanced Export Section */}\n      {generatedFiles && (\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\n          <h3 className=\"text-lg font-semibold text-blue-800 mb-4 flex items-center\">\n            <Package className=\"w-5 h-5 mr-2\" />\n            Generated Deployment Package\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n            {Object.entries(generatedFiles).map(([filename, content]) => (\n              <div key={filename} className=\"bg-white border border-blue-200 rounded-lg p-3 text-center\">\n                <FileText className=\"w-8 h-8 text-blue-600 mx-auto mb-2\" />\n                <div className=\"font-medium text-blue-800 text-sm\">{filename}</div>\n                <div className=\"text-xs text-blue-600\">{Math.round(content.length / 1024)}KB</div>\n              </div>\n            ))}\n          </div>\n          <p className=\"text-sm text-blue-700\">\n            All files have been generated and downloaded. Extract them to a directory and run the deployment script.\n          </p>\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"flex flex-col sm:flex-row gap-4\">\n        <button\n          onClick={simulateDeployment}\n          disabled={isGenerating || deploymentStatus === 'completed'}\n          className={`flex-1 flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all duration-200 ${\n            isGenerating || deploymentStatus === 'completed'\n              ? 'bg-aws-gray-300 text-aws-gray-500 cursor-not-allowed'\n              : 'bg-aws-orange text-white hover:bg-aws-orange-dark shadow-lg hover:shadow-xl'\n          }`}\n        >\n          {isGenerating ? (\n            <>\n              <Clock className=\"w-5 h-5 animate-spin\" />\n              <span>Deploying Infrastructure...</span>\n            </>\n          ) : deploymentStatus === 'completed' ? (\n            <>\n              <CheckCircle className=\"w-5 h-5\" />\n              <span>Deployment Complete</span>\n            </>\n          ) : (\n            <>\n              <Play className=\"w-5 h-5\" />\n              <span>Deploy Infrastructure</span>\n            </>\n          )}\n        </button>\n\n        <button \n          onClick={exportConfiguration}\n          disabled={isExporting}\n          className={`flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all duration-200 ${\n            isExporting \n              ? 'bg-aws-gray-300 text-aws-gray-500 cursor-not-allowed'\n              : 'bg-green-600 text-white hover:bg-green-700 shadow-lg hover:shadow-xl'\n          }`}\n        >\n          {isExporting ? (\n            <>\n              <Clock className=\"w-5 h-5 animate-spin\" />\n              <span>Exporting...</span>\n            </>\n          ) : (\n            <>\n              <Download className=\"w-5 h-5\" />\n              <span>Export Configuration</span>\n            </>\n          )}\n        </button>\n      </div>\n\n      {/* Navigation */}\n      <div className=\"flex items-center justify-between pt-6 border-t border-aws-gray-200\">\n        <button\n          onClick={prevStep}\n          className=\"flex items-center space-x-2 text-aws-gray-600 hover:text-aws-blue transition-colors duration-200\"\n        >\n          <span>← BACK</span>\n        </button>\n        <div className=\"text-sm text-aws-gray-500\">\n          Step {currentStep} of {totalSteps} - Ready to deploy! 🚀\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GenerateStep; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
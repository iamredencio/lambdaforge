{"ast":null,"code":"var _jsxFileName = \"/Users/codinggents/Documents/lambdaforge/src/components/steps/GenerateStep.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Play, Download, Clock, DollarSign, CheckCircle, Zap, TrendingUp, Shield, Monitor, FileText, Package } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GenerateStep = ({\n  formData,\n  prevStep,\n  currentStep,\n  totalSteps\n}) => {\n  _s();\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [currentTask, setCurrentTask] = useState('');\n  const [estimatedCost, setEstimatedCost] = useState(0);\n  const [generatedResources, setGeneratedResources] = useState([]);\n  const [deploymentStatus, setDeploymentStatus] = useState('ready'); // ready, generating, completed, error\n  const [generatedFiles, setGeneratedFiles] = useState(null);\n  const [isExporting, setIsExporting] = useState(false);\n\n  // Calculate estimated monthly cost based on selections\n  useEffect(() => {\n    var _formData$selectedInf, _formData$selectedInf2, _formData$selectedInf3, _formData$selectedInf4, _formData$selectedInf5, _formData$selectedCom, _formData$selectedCom2, _formData$selectedCom3, _formData$selectedCom4, _formData$selectedInt, _formData$selectedInt2, _formData$selectedInt3, _formData$selectedInt4, _formData$selectedSec, _formData$selectedSec2, _formData$selectedSec3, _formData$selectedMon, _formData$selectedMon2, _formData$selectedMon3;\n    let cost = 0;\n\n    // Infrastructure costs\n    if ((_formData$selectedInf = formData.selectedInfrastructure) !== null && _formData$selectedInf !== void 0 && _formData$selectedInf.includes('s3-bucket')) cost += 23;\n    if ((_formData$selectedInf2 = formData.selectedInfrastructure) !== null && _formData$selectedInf2 !== void 0 && _formData$selectedInf2.includes('dynamodb')) cost += 45;\n    if ((_formData$selectedInf3 = formData.selectedInfrastructure) !== null && _formData$selectedInf3 !== void 0 && _formData$selectedInf3.includes('rds-database')) cost += 85;\n    if ((_formData$selectedInf4 = formData.selectedInfrastructure) !== null && _formData$selectedInf4 !== void 0 && _formData$selectedInf4.includes('vpc-networking')) cost += 15;\n    if ((_formData$selectedInf5 = formData.selectedInfrastructure) !== null && _formData$selectedInf5 !== void 0 && _formData$selectedInf5.includes('ebs-volumes')) cost += 30;\n\n    // Compute costs\n    if ((_formData$selectedCom = formData.selectedCompute) !== null && _formData$selectedCom !== void 0 && _formData$selectedCom.includes('lambda-functions')) cost += 12;\n    if ((_formData$selectedCom2 = formData.selectedCompute) !== null && _formData$selectedCom2 !== void 0 && _formData$selectedCom2.includes('ec2-instances')) cost += 120;\n    if ((_formData$selectedCom3 = formData.selectedCompute) !== null && _formData$selectedCom3 !== void 0 && _formData$selectedCom3.includes('ecs-containers')) cost += 95;\n    if ((_formData$selectedCom4 = formData.selectedCompute) !== null && _formData$selectedCom4 !== void 0 && _formData$selectedCom4.includes('fargate-serverless')) cost += 75;\n\n    // Integration costs\n    if ((_formData$selectedInt = formData.selectedIntegration) !== null && _formData$selectedInt !== void 0 && _formData$selectedInt.includes('api-gateway')) cost += 25;\n    if ((_formData$selectedInt2 = formData.selectedIntegration) !== null && _formData$selectedInt2 !== void 0 && _formData$selectedInt2.includes('eventbridge')) cost += 8;\n    if ((_formData$selectedInt3 = formData.selectedIntegration) !== null && _formData$selectedInt3 !== void 0 && _formData$selectedInt3.includes('step-functions')) cost += 15;\n    if ((_formData$selectedInt4 = formData.selectedIntegration) !== null && _formData$selectedInt4 !== void 0 && _formData$selectedInt4.includes('sns-notifications')) cost += 5;\n\n    // Security costs\n    if ((_formData$selectedSec = formData.selectedSecurity) !== null && _formData$selectedSec !== void 0 && _formData$selectedSec.includes('kms-encryption')) cost += 12;\n    if ((_formData$selectedSec2 = formData.selectedSecurity) !== null && _formData$selectedSec2 !== void 0 && _formData$selectedSec2.includes('secrets-manager')) cost += 8;\n    if ((_formData$selectedSec3 = formData.selectedSecurity) !== null && _formData$selectedSec3 !== void 0 && _formData$selectedSec3.includes('waf-protection')) cost += 35;\n\n    // Monitoring costs\n    if ((_formData$selectedMon = formData.selectedMonitoring) !== null && _formData$selectedMon !== void 0 && _formData$selectedMon.includes('cloudwatch')) cost += 18;\n    if ((_formData$selectedMon2 = formData.selectedMonitoring) !== null && _formData$selectedMon2 !== void 0 && _formData$selectedMon2.includes('x-ray-tracing')) cost += 22;\n    if ((_formData$selectedMon3 = formData.selectedMonitoring) !== null && _formData$selectedMon3 !== void 0 && _formData$selectedMon3.includes('cloudtrail')) cost += 10;\n    setEstimatedCost(cost);\n  }, [formData]);\n\n  // File generation functions\n  const generateCloudFormationTemplate = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    const environment = formData.environment || 'Development';\n\n    // Generate YAML format instead of JSON\n    const yamlTemplate = `AWSTemplateFormatVersion: '2010-09-09'\nDescription: '${projectName} - Generated by LambdaForge'\n\nParameters:\n  ProjectName:\n    Type: String\n    Default: ${projectName}\n    Description: Name of the project\n  Environment:\n    Type: String\n    Default: ${environment}\n    AllowedValues:\n      - Development\n      - Staging\n      - Production\n    Description: Environment type\n\nResources:\n${generateResourcesYAML()}\n\nOutputs:\n${generateOutputsYAML()}`;\n    return yamlTemplate;\n  };\n\n  // YAML generation functions for proper CloudFormation format\n  const generateResourcesYAML = () => {\n    var _formData$selectedInf6, _formData$selectedInf7, _formData$selectedCom5, _formData$selectedInt5, _formData$selectedMon4;\n    let yamlResources = '';\n\n    // Infrastructure Resources\n    if ((_formData$selectedInf6 = formData.selectedInfrastructure) !== null && _formData$selectedInf6 !== void 0 && _formData$selectedInf6.includes('s3-bucket')) {\n      yamlResources += `  # S3 Bucket with versioning and static website hosting\n  S3Bucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: !Sub '\\${ProjectName}-storage-\\${AWS::AccountId}'\n      VersioningConfiguration:\n        Status: Enabled\n      WebsiteConfiguration:\n        IndexDocument: index.html\n        ErrorDocument: error.html\n      PublicAccessBlockConfiguration:\n        BlockPublicAcls: false\n        BlockPublicPolicy: false\n        IgnorePublicAcls: false\n        RestrictPublicBuckets: false\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n  # S3 Bucket Policy for static website hosting\n  S3BucketPolicy:\n    Type: AWS::S3::BucketPolicy\n    Properties:\n      Bucket: !Ref S3Bucket\n      PolicyDocument:\n        Statement:\n          - Effect: Allow\n            Principal: '*'\n            Action: s3:GetObject\n            Resource: !Sub '\\${S3Bucket}/*'\n\n`;\n    }\n    if ((_formData$selectedInf7 = formData.selectedInfrastructure) !== null && _formData$selectedInf7 !== void 0 && _formData$selectedInf7.includes('dynamodb')) {\n      yamlResources += `  # DynamoDB Table\n  DynamoDBTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      TableName: !Sub '\\${ProjectName}-data'\n      AttributeDefinitions:\n        - AttributeName: id\n          AttributeType: S\n      KeySchema:\n        - AttributeName: id\n          KeyType: HASH\n      BillingMode: PAY_PER_REQUEST\n      PointInTimeRecoverySpecification:\n        PointInTimeRecoveryEnabled: true\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    // Compute Resources - Fixed IAM role without custom naming\n    if ((_formData$selectedCom5 = formData.selectedCompute) !== null && _formData$selectedCom5 !== void 0 && _formData$selectedCom5.includes('lambda-functions')) {\n      yamlResources += `  # Lambda Execution Role (no custom name to avoid conflicts)\n  LambdaExecutionRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service: lambda.amazonaws.com\n            Action: sts:AssumeRole\n      ManagedPolicyArns:\n        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n  # Lambda Function\n  LambdaFunction:\n    Type: AWS::Lambda::Function\n    Properties:\n      FunctionName: !Sub '\\${ProjectName}-function'\n      Runtime: nodejs18.x\n      Handler: index.handler\n      Role: !GetAtt LambdaExecutionRole.Arn\n      Code:\n        ZipFile: |\n          exports.handler = async (event) => {\n              console.log('Event:', JSON.stringify(event, null, 2));\n              \n              const response = {\n                  statusCode: 200,\n                  headers: {\n                      'Content-Type': 'application/json',\n                      'Access-Control-Allow-Origin': '*'\n                  },\n                  body: JSON.stringify({\n                      message: 'Hello from ${formData.projectName || 'LambdaForge'}!',\n                      timestamp: new Date().toISOString(),\n                      environment: process.env.ENVIRONMENT || 'Development'\n                  })\n              };\n              \n              return response;\n          };\n      Environment:\n        Variables:\n          PROJECT_NAME: !Ref ProjectName\n          ENVIRONMENT: !Ref Environment\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    // Integration Resources\n    if ((_formData$selectedInt5 = formData.selectedIntegration) !== null && _formData$selectedInt5 !== void 0 && _formData$selectedInt5.includes('api-gateway')) {\n      var _formData$selectedCom6;\n      yamlResources += `  # API Gateway\n  ApiGateway:\n    Type: AWS::ApiGateway::RestApi\n    Properties:\n      Name: !Sub '\\${ProjectName}-api'\n      Description: !Sub 'API for \\${ProjectName}'\n      EndpointConfiguration:\n        Types:\n          - REGIONAL\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n      if ((_formData$selectedCom6 = formData.selectedCompute) !== null && _formData$selectedCom6 !== void 0 && _formData$selectedCom6.includes('lambda-functions')) {\n        yamlResources += `  # API Gateway Resource\n  ApiGatewayResource:\n    Type: AWS::ApiGateway::Resource\n    Properties:\n      RestApiId: !Ref ApiGateway\n      ParentId: !GetAtt ApiGateway.RootResourceId\n      PathPart: api\n\n  # API Gateway Method\n  ApiGatewayMethod:\n    Type: AWS::ApiGateway::Method\n    Properties:\n      RestApiId: !Ref ApiGateway\n      ResourceId: !Ref ApiGatewayResource\n      HttpMethod: ANY\n      AuthorizationType: NONE\n      Integration:\n        Type: AWS_PROXY\n        IntegrationHttpMethod: POST\n        Uri: !Sub 'arn:aws:apigateway:\\${AWS::Region}:lambda:path/2015-03-31/functions/\\${LambdaFunction.Arn}/invocations'\n\n  # API Gateway Deployment\n  ApiGatewayDeployment:\n    Type: AWS::ApiGateway::Deployment\n    DependsOn:\n      - ApiGatewayMethod\n    Properties:\n      RestApiId: !Ref ApiGateway\n      StageName: !Ref Environment\n\n  # Lambda Permission for API Gateway\n  LambdaApiGatewayPermission:\n    Type: AWS::Lambda::Permission\n    Properties:\n      FunctionName: !Ref LambdaFunction\n      Action: lambda:InvokeFunction\n      Principal: apigateway.amazonaws.com\n      SourceArn: !Sub 'arn:aws:apigateway:\\${AWS::Region}::/restapis/\\${ApiGateway}/stages/\\${Environment}/*/*'\n\n`;\n      }\n    }\n\n    // Monitoring Resources\n    if ((_formData$selectedMon4 = formData.selectedMonitoring) !== null && _formData$selectedMon4 !== void 0 && _formData$selectedMon4.includes('cloudwatch')) {\n      yamlResources += `  # CloudWatch Log Group\n  LogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      LogGroupName: !Sub '/aws/lambda/\\${ProjectName}-logs'\n      RetentionInDays: 14\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n    return yamlResources || '  # No resources selected';\n  };\n  const generateOutputsYAML = () => {\n    var _formData$selectedInf8, _formData$selectedInf9, _formData$selectedCom7, _formData$selectedInt6, _formData$selectedMon5;\n    let yamlOutputs = '';\n    if ((_formData$selectedInf8 = formData.selectedInfrastructure) !== null && _formData$selectedInf8 !== void 0 && _formData$selectedInf8.includes('s3-bucket')) {\n      yamlOutputs += `  S3BucketName:\n    Description: S3 Bucket Name\n    Value: !Ref S3Bucket\n    Export:\n      Name: !Sub '\\${ProjectName}-s3-bucket'\n  S3BucketConsoleLink:\n    Description: S3 Bucket Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/s3/buckets/\\${S3Bucket}'\n  S3WebsiteURL:\n    Description: S3 Static Website URL\n    Value: !Sub 'http://\\${S3Bucket}.s3-website-\\${AWS::Region}.amazonaws.com'\n    Export:\n      Name: !Sub '\\${ProjectName}-website-url'\n\n`;\n    }\n    if ((_formData$selectedInf9 = formData.selectedInfrastructure) !== null && _formData$selectedInf9 !== void 0 && _formData$selectedInf9.includes('dynamodb')) {\n      yamlOutputs += `  DynamoDBTableName:\n    Description: DynamoDB Table Name\n    Value: !Ref DynamoDBTable\n    Export:\n      Name: !Sub '\\${ProjectName}-dynamodb-table'\n  DynamoDBConsoleLink:\n    Description: DynamoDB Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/dynamodbv2/home?region=\\${AWS::Region}#table?name=\\${DynamoDBTable}'\n\n`;\n    }\n    if ((_formData$selectedCom7 = formData.selectedCompute) !== null && _formData$selectedCom7 !== void 0 && _formData$selectedCom7.includes('lambda-functions')) {\n      yamlOutputs += `  LambdaFunctionArn:\n    Description: Lambda Function ARN\n    Value: !GetAtt LambdaFunction.Arn\n    Export:\n      Name: !Sub '\\${ProjectName}-lambda-arn'\n  LambdaConsoleLink:\n    Description: Lambda Function Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/lambda/home?region=\\${AWS::Region}#/functions/\\${LambdaFunction}'\n\n`;\n    }\n    if ((_formData$selectedInt6 = formData.selectedIntegration) !== null && _formData$selectedInt6 !== void 0 && _formData$selectedInt6.includes('api-gateway')) {\n      yamlOutputs += `  ApiEndpoint:\n    Description: API Gateway endpoint URL\n    Value: !Sub 'https://\\${ApiGateway}.execute-api.\\${AWS::Region}.amazonaws.com/\\${Environment}'\n    Export:\n      Name: !Sub '\\${ProjectName}-api-endpoint'\n  ApiGatewayConsoleLink:\n    Description: API Gateway Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/apigateway/home?region=\\${AWS::Region}#/apis/\\${ApiGateway}'\n\n`;\n    }\n    if ((_formData$selectedMon5 = formData.selectedMonitoring) !== null && _formData$selectedMon5 !== void 0 && _formData$selectedMon5.includes('cloudwatch')) {\n      yamlOutputs += `  LogGroupName:\n    Description: CloudWatch Log Group Name\n    Value: !Ref LogGroup\n    Export:\n      Name: !Sub '\\${ProjectName}-log-group'\n  CloudWatchConsoleLink:\n    Description: CloudWatch Logs Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=\\${AWS::Region}#logsV2:log-groups/log-group/\\${LogGroup}'\n\n`;\n    }\n    yamlOutputs += `  CloudFormationConsoleLink:\n    Description: CloudFormation Stack Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/cloudformation/home?region=\\${AWS::Region}#/stacks/stackinfo?stackId=\\${AWS::StackName}'\n\n  DeploymentRegion:\n    Description: AWS Region where resources are deployed\n    Value: !Ref AWS::Region\n\n`;\n    return yamlOutputs;\n  };\n\n  /* eslint-disable no-useless-escape */\n  const generateDeploymentScript = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    const environment = formData.environment || 'Development';\n    return `#!/bin/bash\n\n# ${projectName} Deployment Script\n# Generated by LambdaForge on ${new Date().toISOString()}\n\nset -e\n\n# Configuration\nPROJECT_NAME=\"${projectName}\"\nENVIRONMENT=\"${environment}\"\n# Auto-detect AWS region from AWS CLI configuration\nAWS_REGION=\\$(aws configure get region)\nif [ -z \"\\$AWS_REGION\" ]; then\n    echo \"⚠️  No default region configured. Using us-east-1\"\n    AWS_REGION=\"us-east-1\"\nfi\nSTACK_NAME=\"\\${PROJECT_NAME}-stack\"\n\n# Template Selection - Choose based on IAM permissions\n# Use template_no_iam.yaml for limited permissions, template.yaml for full permissions\nTEMPLATE_FILE=\"template_no_iam.yaml\"\n\n# =============================================================================\n# 🌐 WEB APPLICATION CONFIGURATION\n# =============================================================================\n# Uncomment and configure ONE of the following options to deploy a web app:\n\n# Option 1: Deploy from Local Folder\n# WEB_APP_LOCAL_PATH=\"/Users/username/Documents/my-react-app\"\n# Example: WEB_APP_LOCAL_PATH=\"/Users/codinggents/Documents/lambdaforge\"\n\n# Option 2: Deploy from GitHub Repository  \n# WEB_APP_GITHUB_REPO=\"https://github.com/username/repository-name\"\n# Example: WEB_APP_GITHUB_REPO=\"https://github.com/your-username/lambdaforge\"\n\n# Option 3: Infrastructure Only (Default)\n# Leave both options commented out to deploy only AWS infrastructure\n\n# 📋 Requirements for Web Apps:\n# - Must have package.json file\n# - Must have \"build\" script that creates build/ or dist/ folder\n# - Supports React, Vue, Angular, and other Node.js web apps\n# =============================================================================\n\n# Colors for output\nRED='\\\\033[0;31m'\nGREEN='\\\\033[0;32m'\nYELLOW='\\\\033[1;33m'\nBLUE='\\\\033[0;34m'\nNC='\\\\033[0m'\n\nprint_status() {\n    echo -e \"\\${BLUE}[INFO]\\${NC} \\$1\"\n}\n\nprint_success() {\n    echo -e \"\\${GREEN}[SUCCESS]\\${NC} \\$1\"\n}\n\nprint_error() {\n    echo -e \"\\${RED}[ERROR]\\${NC} \\$1\"\n}\n\nprint_warning() {\n    echo -e \"\\${YELLOW}[WARNING]\\${NC} \\$1\"\n}\n\n# Progress bar function\nshow_progress() {\n    local duration=\\$1\n    local message=\\$2\n    local progress=0\n    local bar_length=50\n    \n    echo -n \"\\$message \"\n    while [ \\$progress -le \\$duration ]; do\n        local filled=\\$((progress * bar_length / duration))\n        local empty=\\$((bar_length - filled))\n        \n        printf \"\\\\r\\$message [\"\n        printf \"%\\${filled}s\" | tr ' ' '█'\n        printf \"%\\${empty}s\" | tr ' ' '░'\n        printf \"] %d%%\" \\$((progress * 100 / duration))\n        \n        sleep 1\n        progress=\\$((progress + 1))\n    done\n    echo\n}\n\n# Check prerequisites\ncheck_prerequisites() {\n    print_status \"Checking prerequisites...\"\n    \n    # Check AWS CLI\n    if ! command -v aws &> /dev/null; then\n        print_error \"AWS CLI is not installed. Please install it first.\"\n        exit 1\n    fi\n    \n    # Check AWS credentials\n    if ! aws sts get-caller-identity &> /dev/null; then\n        print_error \"AWS credentials not configured. Run 'aws configure' first.\"\n        exit 1\n    fi\n    \n    print_success \"Prerequisites check passed\"\n}\n\n# Check specific AWS permissions\ncheck_permissions() {\n    print_status \"Checking AWS permissions...\"\n    \n    # Test S3 permissions\n    if aws s3 ls &> /dev/null; then\n        print_success \"✓ S3 permissions OK\"\n    else\n        print_error \"✗ S3 permissions missing\"\n        return 1\n    fi\n    \n    # Test CloudFormation permissions\n    if aws cloudformation list-stacks --max-items 1 &> /dev/null; then\n        print_success \"✓ CloudFormation permissions OK\"\n    else\n        print_error \"✗ CloudFormation permissions missing\"\n        return 1\n    fi\n    \n    # Test IAM permissions (optional)\n    if aws iam list-roles --max-items 1 &> /dev/null 2>&1; then\n        # Test Lambda permissions\n        if aws lambda list-functions --max-items 1 &> /dev/null 2>&1; then\n            # Test API Gateway permissions  \n            if aws apigateway get-rest-apis --limit 1 &> /dev/null 2>&1; then\n                print_success \"✓ Full AWS permissions detected\"\n                print_warning \"⚠ Using simplified template for reliability\"\n                TEMPLATE_FILE=\"template_no_iam.yaml\"\n            else\n                print_warning \"⚠ Limited API Gateway permissions - using simplified template\"\n                TEMPLATE_FILE=\"template_no_iam.yaml\"\n            fi\n        else\n            print_warning \"⚠ Limited Lambda permissions - using simplified template\"\n            TEMPLATE_FILE=\"template_no_iam.yaml\"\n        fi\n    else\n        print_warning \"⚠ Limited IAM permissions - using simplified template\"\n        TEMPLATE_FILE=\"template_no_iam.yaml\"\n    fi\n}\n\n# Check web application configuration\ncheck_web_app_config() {\n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ] && [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_error \"Cannot specify both local path and GitHub repo. Choose one.\"\n        exit 1\n    fi\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        if [ ! -d \"\\$WEB_APP_LOCAL_PATH\" ]; then\n            print_error \"Local web app path does not exist: \\$WEB_APP_LOCAL_PATH\"\n            exit 1\n        fi\n        print_status \"Web app source: Local folder (\\$WEB_APP_LOCAL_PATH)\"\n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Web app source: GitHub repository (\\$WEB_APP_GITHUB_REPO)\"\n    else\n        print_warning \"No web app source specified. Only AWS infrastructure will be created.\"\n        echo \"\"\n        print_status \"💡 To deploy a web application alongside your infrastructure:\"\n        echo \"   1. Edit this script (deploy.sh)\"\n        echo \"   2. Uncomment and set either:\"\n        echo \"      • WEB_APP_LOCAL_PATH=\\\"/path/to/your/app\\\"\"\n        echo \"      • WEB_APP_GITHUB_REPO=\\\"https://github.com/user/repo\\\"\"\n        echo \"   3. Re-run: ./deploy.sh\"\n        echo \"\"\n    fi\n}\n\n# Build and package web application\nbuild_web_app() {\n    if [ -z \"\\$WEB_APP_LOCAL_PATH\" ] && [ -z \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Skipping web app build - no source specified\"\n        return 0\n    fi\n    \n    print_status \"Building web application...\"\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        # Build from local path (in place)\n        print_status \"Building from local path: \\$WEB_APP_LOCAL_PATH\"\n        \n        # Save current directory\n        ORIGINAL_DIR=\\$(pwd)\n        \n        # Go to the local path and build there\n        cd \"\\$WEB_APP_LOCAL_PATH\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                cd \"\\$ORIGINAL_DIR\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in \\$WEB_APP_LOCAL_PATH\"\n            cd \"\\$ORIGINAL_DIR\"\n            exit 1\n        fi\n        \n        # Return to original directory\n        cd \"\\$ORIGINAL_DIR\"\n        \n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        # Clone from GitHub to temporary directory\n        print_status \"Cloning from GitHub repository: \\$WEB_APP_GITHUB_REPO\"\n        \n        BUILD_DIR=\"\\$(mktemp -d)\"\n        print_status \"Using build directory: \\$BUILD_DIR\"\n        \n        git clone \"\\$WEB_APP_GITHUB_REPO\" \"\\$BUILD_DIR\"\n        cd \"\\$BUILD_DIR\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in cloned repository\"\n            exit 1\n        fi\n    fi\n    \n    print_success \"Web application built successfully\"\n    echo \"Built app location: \\$BUILT_APP_PATH\"\n}\n\n# Deploy CloudFormation stack\ndeploy_stack() {\n    print_status \"Checking if stack exists...\"\n    \n    if aws cloudformation describe-stacks --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" &> /dev/null; then\n        print_status \"Stack exists. Updating...\"\n        print_status \"Using template: \\$TEMPLATE_FILE\"\n        \n        aws cloudformation update-stack \\\\\n            --stack-name \"\\$STACK_NAME\" \\\\\n            --template-body file://\\$TEMPLATE_FILE \\\\\n            --parameters ParameterKey=ProjectName,ParameterValue=\"\\$PROJECT_NAME\" \\\\\n                        ParameterKey=Environment,ParameterValue=\"\\$ENVIRONMENT\" \\\\\n            --capabilities CAPABILITY_IAM \\\\\n            --region \"\\$AWS_REGION\"\n        \n        print_status \"Waiting for stack update to complete...\"\n        show_progress 180 \"🔄 Updating AWS resources\"\n        \n        if aws cloudformation wait stack-update-complete --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\"; then\n            print_success \"Stack updated successfully!\"\n        else\n            print_error \"Stack update failed!\"\n            print_status \"Checking stack events for details...\"\n            aws cloudformation describe-stack-events --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" --query 'StackEvents[?ResourceStatus==\\`UPDATE_FAILED\\`].[LogicalResourceId,ResourceStatusReason]' --output table\n            return 1\n        fi\n    else\n        print_status \"Stack does not exist. Creating...\"\n        print_status \"Using template: \\$TEMPLATE_FILE\"\n        \n        # Show resource creation progress\n        print_status \"📋 Resources to be created:\"\n        if [ \"\\$TEMPLATE_FILE\" = \"template.yaml\" ]; then\n            echo \"  • S3 Bucket (Static Website)\"\n            echo \"  • IAM Execution Role\"\n            echo \"  • Lambda Function\"  \n            echo \"  • API Gateway\"\n            echo \"  • CloudWatch Log Group\"\n        else\n            echo \"  • S3 Bucket (Static Website)\"\n            echo \"  • CloudWatch Log Group\"\n        fi\n        echo\n        \n        aws cloudformation create-stack \\\\\n            --stack-name \"\\$STACK_NAME\" \\\\\n            --template-body file://\\$TEMPLATE_FILE \\\\\n            --parameters ParameterKey=ProjectName,ParameterValue=\"\\$PROJECT_NAME\" \\\\\n                        ParameterKey=Environment,ParameterValue=\"\\$ENVIRONMENT\" \\\\\n            --capabilities CAPABILITY_IAM \\\\\n            --region \"\\$AWS_REGION\"\n        \n        print_status \"Waiting for stack creation to complete...\"\n        \n        # Show progress for different resource types\n        (\n            show_progress 30 \"🪣 Creating S3 Bucket\" &\n            sleep 35\n            show_progress 20 \"📊 Creating CloudWatch Log Group\" &\n            sleep 25\n            if [ \"\\$TEMPLATE_FILE\" = \"template.yaml\" ]; then\n                show_progress 60 \"🔐 Creating IAM Role & Lambda Function\" &\n                sleep 65\n                show_progress 40 \"🌐 Creating API Gateway\" &\n            fi\n        ) &\n        \n        if aws cloudformation wait stack-create-complete --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\"; then\n            print_success \"Stack created successfully!\"\n        else\n            print_error \"Stack creation failed!\"\n            print_status \"Checking stack events for details...\"\n            aws cloudformation describe-stack-events --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" --query 'StackEvents[?ResourceStatus==\\`CREATE_FAILED\\`].[LogicalResourceId,ResourceStatusReason]' --output table\n            return 1\n        fi\n    fi\n}\n\n# Deploy web application to S3\ndeploy_web_app() {\n    if [ -z \"\\$BUILT_APP_PATH\" ]; then\n        print_status \"Skipping web app deployment - no built app\"\n        return 0\n    fi\n    \n    print_status \"Deploying web application to S3...\"\n    \n    # Get S3 bucket name from CloudFormation outputs\n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text)\n    \n    if [ -z \"\\$S3_BUCKET\" ] || [ \"\\$S3_BUCKET\" = \"None\" ]; then\n        print_warning \"No S3 bucket found in stack outputs. Skipping web app deployment.\"\n        return 0\n    fi\n    \n    print_status \"Uploading to S3 bucket: \\$S3_BUCKET\"\n    \n    # Upload files to S3\n    aws s3 sync \"\\$BUILT_APP_PATH\" \"s3://\\$S3_BUCKET\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --delete\n    \n    # Configure S3 public access for static website hosting\n    print_status \"Configuring S3 bucket for static website hosting...\"\n    \n    # Disable public access block (required for static websites)\n    aws s3api put-public-access-block \\\\\n        --bucket \"\\$S3_BUCKET\" \\\\\n        --public-access-block-configuration \"BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false\" \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Create bucket policy for public read access\n    cat > bucket-policy.json << EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"PublicReadGetObject\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"s3:GetObject\",\n            \"Resource\": \"arn:aws:s3:::\\$S3_BUCKET/*\"\n        }\n    ]\n}\nEOF\n    \n    # Apply bucket policy\n    aws s3api put-bucket-policy \\\\\n        --bucket \"\\$S3_BUCKET\" \\\\\n        --policy file://bucket-policy.json \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Configure S3 for static website hosting\n    aws s3 website \"s3://\\$S3_BUCKET\" \\\\\n        --index-document index.html \\\\\n        --error-document index.html \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Get website URL (correct format for different regions)\n    if [ \"\\$AWS_REGION\" = \"us-east-1\" ]; then\n        WEBSITE_URL=\"http://\\$S3_BUCKET.s3-website-\\$AWS_REGION.amazonaws.com\"\n    else\n        WEBSITE_URL=\"http://\\$S3_BUCKET.s3-website.\\$AWS_REGION.amazonaws.com\"\n    fi\n    \n    # Clean up temporary files\n    rm -f bucket-policy.json\n    \n    print_success \"Web application deployed successfully!\"\n    echo \"\"\n    print_success \"🌐 Your web application is available at:\"\n    echo \"   \\$WEBSITE_URL\"\n    echo \"\"\n    print_status \"📋 S3 Configuration Applied:\"\n    echo \"  • Public read access enabled\"\n    echo \"  • Static website hosting configured\"\n    echo \"  • Bucket policy applied for public access\"\n    echo \"\"\n}\n\n# Main deployment function\nmain() {\n    print_status \"🚀 Starting deployment process...\"\n    echo \"Project: \\$PROJECT_NAME\"\n    echo \"Environment: \\$ENVIRONMENT\" \n    echo \"Region: \\$AWS_REGION\"\n    echo \"Stack: \\$STACK_NAME\"\n    echo\n\n    # Run checks\n    check_prerequisites\n    check_permissions\n    check_web_app_config\n\n    # Build and deploy\n    build_web_app\n    deploy_stack\n    deploy_web_app\n\n    print_success \"🎉 Deployment completed successfully!\"\n    echo\n    print_status \"📋 Deployment Summary:\"\n    echo \"• Stack Name: \\$STACK_NAME\"\n    echo \"• Template Used: \\$TEMPLATE_FILE\"\n    echo \"• Region: \\$AWS_REGION\"\n    echo \"• Console: https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks\"\n    \n    # Show stack outputs\n    print_status \"🔗 Resource Links:\"\n    aws cloudformation describe-stacks --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" --query 'Stacks[0].Outputs[].[OutputKey,OutputValue]' --output table 2>/dev/null || echo \"Stack outputs not available yet\"\n}\n\n# Run main function\nmain \"\\$@\"\n`;\n  };\n  /* eslint-enable no-useless-escape */\n\n  /* eslint-disable no-useless-escape */\n  const generateDeleteScript = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    return `#!/bin/bash\n\n# ${projectName} Resource Cleanup Script\n# Generated by LambdaForge on ${new Date().toISOString()}\n# ⚠️  WARNING: This script will DELETE all resources created by the deployment!\n\nset -e\n\n# Configuration\nPROJECT_NAME=\"${projectName}\"\n# Auto-detect AWS region from AWS CLI configuration\nAWS_REGION=\\$(aws configure get region)\nif [ -z \"\\$AWS_REGION\" ]; then\n    echo \"⚠️  No default region configured. Using us-east-1\"\n    AWS_REGION=\"us-east-1\"\nfi\nSTACK_NAME=\"\\${PROJECT_NAME}-stack\"\n\n# Web Application Deployment Configuration\n# Set one of these to deploy the actual web application:\n# WEB_APP_LOCAL_PATH=\"/path/to/your/web/app\"          # Local folder path\n# WEB_APP_GITHUB_REPO=\"https://github.com/user/repo\" # GitHub repository URL\nWEB_APP_LOCAL_PATH=\"\"\nWEB_APP_GITHUB_REPO=\"\"\n\n# Colors for output\nRED='\\\\033[0;31m'\nGREEN='\\\\033[0;32m'\nYELLOW='\\\\033[1;33m'\nBLUE='\\\\033[0;34m'\nNC='\\\\033[0m' # No Color\n\n# Print functions\nprint_status() {\n    echo -e \"\\${BLUE}ℹ️  \\$1\\${NC}\"\n}\n\nprint_success() {\n    echo -e \"\\${GREEN}✅ \\$1\\${NC}\"\n}\n\nprint_warning() {\n    echo -e \"\\${YELLOW}⚠️  \\$1\\${NC}\"\n}\n\nprint_error() {\n    echo -e \"\\${RED}❌ \\$1\\${NC}\"\n}\n\n# Check prerequisites\ncheck_prerequisites() {\n    print_status \"Checking prerequisites...\"\n    \n    # Check AWS CLI\n    if ! command -v aws &> /dev/null; then\n        print_error \"AWS CLI is not installed. Please install it first.\"\n        exit 1\n    fi\n    \n    # Check AWS credentials\n    if ! aws sts get-caller-identity &> /dev/null; then\n        print_error \"AWS credentials not configured. Run 'aws configure' first.\"\n        exit 1\n    fi\n    \n    print_success \"Prerequisites check passed\"\n}\n\n# Check web application configuration\ncheck_web_app_config() {\n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ] && [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_error \"Cannot specify both local path and GitHub repo. Choose one.\"\n        exit 1\n    fi\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        if [ ! -d \"\\$WEB_APP_LOCAL_PATH\" ]; then\n            print_error \"Local web app path does not exist: \\$WEB_APP_LOCAL_PATH\"\n            exit 1\n        fi\n        print_status \"Web app source: Local folder (\\$WEB_APP_LOCAL_PATH)\"\n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Web app source: GitHub repository (\\$WEB_APP_GITHUB_REPO)\"\n    else\n        print_warning \"No web app source specified. Only AWS infrastructure will be created.\"\n        echo \"\"\n        print_status \"💡 To deploy a web application alongside your infrastructure:\"\n        echo \"   1. Edit this script (deploy.sh)\"\n        echo \"   2. Uncomment and set either:\"\n        echo \"      • WEB_APP_LOCAL_PATH=\\\"/path/to/your/app\\\"\"\n        echo \"      • WEB_APP_GITHUB_REPO=\\\"https://github.com/user/repo\\\"\"\n        echo \"   3. Re-run: ./deploy.sh\"\n        echo \"\"\n    fi\n}\n\n# Build and package web application\nbuild_web_app() {\n    if [ -z \"\\$WEB_APP_LOCAL_PATH\" ] && [ -z \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Skipping web app build - no source specified\"\n        return 0\n    fi\n    \n    print_status \"Building web application...\"\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        # Build from local path (in place)\n        print_status \"Building from local path: \\$WEB_APP_LOCAL_PATH\"\n        \n        # Save current directory\n        ORIGINAL_DIR=\\$(pwd)\n        \n        # Go to the local path and build there\n        cd \"\\$WEB_APP_LOCAL_PATH\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                cd \"\\$ORIGINAL_DIR\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in \\$WEB_APP_LOCAL_PATH\"\n            cd \"\\$ORIGINAL_DIR\"\n            exit 1\n        fi\n        \n        # Return to original directory\n        cd \"\\$ORIGINAL_DIR\"\n        \n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        # Clone from GitHub to temporary directory\n        print_status \"Cloning from GitHub repository: \\$WEB_APP_GITHUB_REPO\"\n        \n        BUILD_DIR=\"\\$(mktemp -d)\"\n        print_status \"Using build directory: \\$BUILD_DIR\"\n        \n        git clone \"\\$WEB_APP_GITHUB_REPO\" \"\\$BUILD_DIR\"\n        cd \"\\$BUILD_DIR\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in cloned repository\"\n            exit 1\n        fi\n    fi\n    \n    print_success \"Web application built successfully\"\n    echo \"Built app location: \\$BUILT_APP_PATH\"\n}\n\n# Deploy web application to S3\ndeploy_web_app() {\n    if [ -z \"\\$BUILT_APP_PATH\" ]; then\n        print_status \"Skipping web app deployment - no built app\"\n        return 0\n    fi\n    \n    print_status \"Deploying web application to S3...\"\n    \n    # Get S3 bucket name from CloudFormation outputs\n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text)\n    \n    if [ -z \"\\$S3_BUCKET\" ] || [ \"\\$S3_BUCKET\" = \"None\" ]; then\n        print_warning \"No S3 bucket found in stack outputs. Skipping web app deployment.\"\n        return 0\n    fi\n    \n    print_status \"Uploading to S3 bucket: \\$S3_BUCKET\"\n    \n    # Upload files to S3\n    aws s3 sync \"\\$BUILT_APP_PATH\" \"s3://\\$S3_BUCKET\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --delete\n    \n    # Configure S3 public access for static website hosting\n    print_status \"Configuring S3 bucket for static website hosting...\"\n    \n    # Disable public access block (required for static websites)\n    aws s3api put-public-access-block \\\\\n        --bucket \"\\$S3_BUCKET\" \\\\\n        --public-access-block-configuration \"BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false\" \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Create bucket policy for public read access\n    cat > bucket-policy.json << EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"PublicReadGetObject\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"s3:GetObject\",\n            \"Resource\": \"arn:aws:s3:::\\$S3_BUCKET/*\"\n        }\n    ]\n}\nEOF\n    \n    # Apply bucket policy\n    aws s3api put-bucket-policy \\\\\n        --bucket \"\\$S3_BUCKET\" \\\\\n        --policy file://bucket-policy.json \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Configure S3 for static website hosting\n    aws s3 website \"s3://\\$S3_BUCKET\" \\\\\n        --index-document index.html \\\\\n        --error-document index.html \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Get website URL (correct format for different regions)\n    if [ \"\\$AWS_REGION\" = \"us-east-1\" ]; then\n        WEBSITE_URL=\"http://\\$S3_BUCKET.s3-website-\\$AWS_REGION.amazonaws.com\"\n    else\n        WEBSITE_URL=\"http://\\$S3_BUCKET.s3-website.\\$AWS_REGION.amazonaws.com\"\n    fi\n    \n    # Clean up temporary files\n    rm -f bucket-policy.json\n    \n    print_success \"Web application deployed successfully!\"\n    echo \"\"\n    print_success \"🌐 Your web application is available at:\"\n    echo \"   \\$WEBSITE_URL\"\n    echo \"\"\n}\n\n# Deploy or update the CloudFormation stack\ndeploy_stack() {\n    print_status \"Checking if stack exists...\"\n    \n    if aws cloudformation describe-stacks --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" &>/dev/null; then\n        print_status \"Stack exists. Updating...\"\n        OPERATION=\"update-stack\"\n    else\n        print_status \"Stack does not exist. Creating...\"\n        OPERATION=\"create-stack\"\n    fi\n    \n    print_status \"Deploying CloudFormation stack...\"\n    print_status \"Stack Name: \\$STACK_NAME\"\n    print_status \"Region: \\$AWS_REGION\"\n    print_status \"Template: template.yaml\"\n    \n    # Deploy the stack\n    aws cloudformation \\$OPERATION \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --template-body file://template.yaml \\\\\n        --capabilities CAPABILITY_IAM \\\\\n        --region \"\\$AWS_REGION\"\n    \n    if [ \\$? -ne 0 ]; then\n        print_error \"Failed to create/update the stack\"\n        exit 1\n    fi\n    \n    print_status \"Waiting for stack operation to complete...\"\n    print_status \"This may take several minutes...\"\n    \n    # Wait for the operation to complete\n    if [ \"\\$OPERATION\" = \"create-stack\" ]; then\n        WAIT_CONDITION=\"stack-create-complete\"\n    else\n        WAIT_CONDITION=\"stack-update-complete\"\n    fi\n    \n    if aws cloudformation wait \\$WAIT_CONDITION --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\"; then\n        print_success \"Stack operation completed successfully! 🎉\"\n    else\n        print_error \"Stack operation failed or timed out\"\n        print_status \"Check the CloudFormation console for details:\"\n        echo \"https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks\"\n        exit 1\n    fi\n}\n\n# Show deployment results\nshow_results() {\n    print_success \"🎉 Deployment completed successfully!\"\n    echo \"\"\n    print_status \"📋 Resource Summary:\"\n    \n    # Get stack outputs\n    aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[*].[OutputKey,OutputValue,Description]' \\\\\n        --output table\n    \n    echo \"\"\n    print_status \"🔗 AWS Console Links:\"\n    \n    # CloudFormation Console\n    echo \"📊 CloudFormation Stack:\"\n    echo \"   https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks/stackinfo?stackId=\\$STACK_NAME\"\n    \n    # Get resource links\n    LAMBDA_FUNCTION=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`LambdaFunctionName\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    API_GATEWAY=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`ApiGatewayUrl\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    if [ -n \"\\$LAMBDA_FUNCTION\" ] && [ \"\\$LAMBDA_FUNCTION\" != \"None\" ]; then\n        echo \"⚡ Lambda Function:\"\n        echo \"   https://\\$AWS_REGION.console.aws.amazon.com/lambda/home?region=\\$AWS_REGION#/functions/\\$LAMBDA_FUNCTION\"\n    fi\n    \n    if [ -n \"\\$API_GATEWAY\" ] && [ \"\\$API_GATEWAY\" != \"None\" ]; then\n        echo \"🌐 API Gateway:\"\n        echo \"   \\$API_GATEWAY\"\n    fi\n    \n    if [ -n \"\\$S3_BUCKET\" ] && [ \"\\$S3_BUCKET\" != \"None\" ]; then\n        echo \"🪣 S3 Bucket:\"\n        echo \"   https://s3.console.aws.amazon.com/s3/buckets/\\$S3_BUCKET?region=\\$AWS_REGION\"\n    fi\n    \n    echo \"\"\n    print_status \"💡 Next Steps:\"\n    echo \"  • Test your deployed resources using the links above\"\n    echo \"  • Monitor logs in CloudWatch\"\n    echo \"  • Use delete.sh to clean up resources when done\"\n    echo \"\"\n}\n\n# Main deployment function\nmain() {\n    echo \"\"\n    echo \"======================================\"\n    echo \"🚀 ${projectName} Deployment\"\n    echo \"======================================\"\n    echo \"Project: \\$PROJECT_NAME\"\n    echo \"Region: \\$AWS_REGION\"\n    echo \"\"\n    \n    check_prerequisites\n    check_web_app_config\n    build_web_app\n    deploy_stack\n    deploy_web_app\n    show_results\n}\n\n# Run with error handling\nif [ \"\\${BASH_SOURCE[0]}\" == \"\\${0}\" ]; then\n    main \"$@\"\nfi\n`;\n  };\n  /* eslint-enable no-useless-escape */\n\n  const generateReadme = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    return `# ${projectName} - AWS Infrastructure Deployment\n\nGenerated by **LambdaForge** on ${new Date().toLocaleDateString()}\n\n## 🚀 Quick Start\n\n1. **Configure AWS CLI** (if not already done):\n   \\`\\`\\`bash\n   aws configure\n   \\`\\`\\`\n\n2. **Deploy Infrastructure**:\n   \\`\\`\\`bash\n   ./deploy.sh\n   \\`\\`\\`\n\n3. **Clean Up** (when done):\n   \\`\\`\\`bash\n   ./delete.sh\n   \\`\\`\\`\n\n## 📋 What's Included\n\n- **template.yaml** / **template_no_iam.yaml**: CloudFormation infrastructure templates\n- **deploy.sh**: Intelligent deployment script with permission detection and progress bars\n- **delete.sh**: Safe cleanup script with confirmation prompts\n- **README.md**: This documentation file\n\n## 🔧 Features\n\n### Intelligent Permission Detection\nThe deployment script automatically detects your AWS permissions and chooses the appropriate template:\n- **Full Permissions**: Uses complete template with Lambda, API Gateway, and IAM roles\n- **Limited Permissions**: Falls back to simplified template with S3 and CloudWatch only\n\n### Visual Progress Tracking\n- Real-time progress bars for resource creation\n- Clear status messages and error handling\n- Resource-specific deployment phases\n\n### Web Application Support\nDeploy any React/Node.js web application alongside your infrastructure:\n\n#### Option 1: Local Development\n\\`\\`\\`bash\n# Edit deploy.sh and set:\nWEB_APP_LOCAL_PATH=\"/path/to/your/web/app\"\n\\`\\`\\`\n\n#### Option 2: GitHub Repository\n\\`\\`\\`bash\n# Edit deploy.sh and set:\nWEB_APP_GITHUB_REPO=\"https://github.com/user/repo\"\n\\`\\`\\`\n\n#### Option 3: Infrastructure Only (Default)\nIf neither path is set, only AWS infrastructure will be created.\n\n### Automatic S3 Website Configuration\nWhen deploying a web application, the script automatically:\n- **Disables S3 Public Access Block**: Required for static website hosting\n- **Creates Bucket Policy**: Allows public read access to website files\n- **Configures Website Hosting**: Sets index.html as the default document\n- **Generates Correct URL**: Uses proper regional endpoint format\n\n### Example: Deploy LambdaForge Application\n\\`\\`\\`bash\n# To deploy LambdaForge itself:\nWEB_APP_GITHUB_REPO=\"https://github.com/your-username/lambdaforge\"\n\\`\\`\\`\n\n## ⚠️ Important Requirements\n\n### Required AWS Permissions\n\n**Minimum Required:**\n- \\`s3:*\\` - S3 bucket operations\n- \\`cloudformation:*\\` - Stack management\n- \\`logs:*\\` - CloudWatch logs\n\n**For Full Template:**\n- \\`iam:*\\` - IAM role management\n- \\`lambda:*\\` - Lambda function operations\n- \\`apigateway:*\\` - API Gateway management\n\n### Common Error Solutions\n\n#### Error: \"User is not authorized to perform: iam:CreateRole\"\n**Solution**: Your AWS user lacks IAM permissions. The script will automatically use the simplified template.\n\n#### Error: \"Stack with id X does not exist\"\n**Solution**: This is normal for first deployment. The script will create a new stack.\n\n#### Error: \"Template format error\"\n**Solution**: Ensure you're using the correct template file. The script auto-selects based on permissions.\n\n## 🏗️ Infrastructure Overview\n\n### Resources Created (Full Template)\n- **S3 Bucket**: Static website hosting with public read access\n- **Lambda Function**: Serverless compute with execution role\n- **API Gateway**: RESTful API endpoint\n- **CloudWatch Log Group**: Application logging\n- **IAM Role**: Lambda execution permissions\n\n### Resources Created (Simplified Template)\n- **S3 Bucket**: Static website hosting with public read access\n- **CloudWatch Log Group**: Application logging\n\n## 🔗 Useful Links\n\nAfter deployment, check these AWS Console links:\n- **CloudFormation**: Monitor stack status and resources\n- **S3**: View uploaded files and website configuration\n- **CloudWatch**: Check application logs and metrics\n- **Lambda**: Test functions and view code (full template only)\n- **API Gateway**: Test endpoints and view usage (full template only)\n\n## 🛡️ Security Notes\n\n- S3 bucket is configured for **public read access** (required for static websites)\n- IAM roles follow **least privilege principle**\n- All resources are tagged for easy identification\n- Use **delete.sh** to clean up resources and avoid ongoing charges\n\n## 🆘 Troubleshooting\n\n### Deployment Fails\n1. Check AWS credentials: \\`aws sts get-caller-identity\\`\n2. Verify region configuration: \\`aws configure get region\\`\n3. Review CloudFormation events in AWS Console\n4. Check the deployment script output for specific errors\n\n### Web App Deployment Issues\n1. Ensure \\`package.json\\` exists in your web app directory\n2. Verify build script creates \\`build/\\` or \\`dist/\\` folder\n3. Check S3 bucket permissions and website configuration\n\n### S3 Website Hosting Issues\n1. **DNS_PROBE_FINISHED_NXDOMAIN Error**: Check URL format\n   - ✅ **Correct**: \\`bucket-name.s3-website.region.amazonaws.com\\`\n   - ❌ **Wrong**: \\`bucket-name.s3-website-region.amazonaws.com\\`\n2. **Access Denied Error**: Bucket policy or public access block issue\n   - Run deployment script again to fix S3 configuration\n   - Check AWS Console for bucket policy and public access settings\n3. **Website Not Loading**: Verify index.html exists in bucket root\n\n## 📞 Support\n\n- **AWS Documentation**: https://docs.aws.amazon.com/\n- **CloudFormation Guide**: https://docs.aws.amazon.com/cloudformation/\n- **LambdaForge**: Generated with intelligent deployment automation\n\n---\n\n**Generated by LambdaForge** - Making AWS deployment simple and reliable! 🚀\n`;\n  };\n\n  // Create and download zip file\n  const downloadZipFile = async (files, projectName) => {\n    // Dynamically import JSZip\n    const JSZip = (await import('jszip')).default;\n    const zip = new JSZip();\n\n    // Add all files to zip\n    Object.entries(files).forEach(([filename, content]) => {\n      zip.file(filename, content);\n    });\n\n    // Generate zip file\n    const zipBlob = await zip.generateAsync({\n      type: 'blob'\n    });\n\n    // Download zip file\n    const element = document.createElement('a');\n    element.href = URL.createObjectURL(zipBlob);\n    element.download = `${projectName}-infrastructure.zip`;\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n    URL.revokeObjectURL(element.href);\n  };\n\n  // Export Configuration function - makes the button functional!\n  const exportConfiguration = async () => {\n    setIsExporting(true);\n    try {\n      const projectName = formData.projectName || 'lambdaforge-project';\n\n      // Generate all files\n      const files = {\n        'template.yaml': generateCloudFormationTemplate(),\n        'deploy.sh': generateDeploymentScript(),\n        'delete.sh': generateDeleteScript(),\n        'README.md': generateReadme()\n      };\n      setGeneratedFiles(files);\n\n      // Download as zip file\n      await downloadZipFile(files, projectName);\n    } catch (error) {\n      console.error('Export failed:', error);\n      alert('❌ Export failed. Please try again.');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n  const simulateDeployment = async () => {\n    setIsGenerating(true);\n    setDeploymentStatus('generating');\n    setProgress(0);\n    setGeneratedResources([]);\n    const tasks = [{\n      name: 'Validating AWS credentials',\n      duration: 800\n    }, {\n      name: 'Analyzing infrastructure requirements',\n      duration: 1200\n    }, {\n      name: 'Generating CloudFormation templates',\n      duration: 1500\n    }, {\n      name: 'Creating deployment scripts',\n      duration: 1000\n    }, {\n      name: 'Creating resource cleanup scripts',\n      duration: 800\n    }, {\n      name: 'Generating documentation',\n      duration: 800\n    }, {\n      name: 'Validating template syntax',\n      duration: 1000\n    }, {\n      name: 'Preparing deployment package',\n      duration: 700\n    }];\n    let totalProgress = 0;\n    const progressStep = 100 / tasks.length;\n    for (let i = 0; i < tasks.length; i++) {\n      setCurrentTask(tasks[i].name);\n      await new Promise(resolve => setTimeout(resolve, tasks[i].duration));\n      totalProgress += progressStep;\n      setProgress(Math.round(totalProgress));\n\n      // Add generated resources as we progress\n      if (i === 2) {\n        // After CloudFormation generation\n        setGeneratedResources(prev => [...prev, {\n          name: 'CloudFormation Template',\n          id: 'template.yaml',\n          status: 'generated',\n          type: 'infrastructure'\n        }]);\n      }\n      if (i === 3) {\n        // After deployment script\n        setGeneratedResources(prev => [...prev, {\n          name: 'Deployment Script',\n          id: 'deploy.sh',\n          status: 'generated',\n          type: 'automation'\n        }]);\n      }\n      if (i === 4) {\n        // After generating cleanup script\n        setGeneratedResources(prev => [...prev, {\n          name: 'Resource Cleanup Script',\n          id: 'delete.sh',\n          status: 'generated',\n          type: 'automation'\n        }]);\n      }\n      if (i === 5) {\n        // After documentation\n        setGeneratedResources(prev => [...prev, {\n          name: 'README Documentation',\n          id: 'README.md',\n          status: 'generated',\n          type: 'documentation'\n        }]);\n      }\n    }\n\n    // Generate all files automatically\n    const files = {\n      'template.yaml': generateCloudFormationTemplate(),\n      'deploy.sh': generateDeploymentScript(),\n      'delete.sh': generateDeleteScript(),\n      'README.md': generateReadme()\n    };\n    setGeneratedFiles(files);\n    setCurrentTask('All deployment files generated successfully!');\n    setDeploymentStatus('completed');\n    setIsGenerating(false);\n  };\n  const getServiceCounts = () => {\n    var _formData$selectedInf0, _formData$selectedCom8, _formData$selectedInt7, _formData$selectedSec4, _formData$selectedMon6, _formData$selectedDep, _formData$selectedOpt;\n    return {\n      infrastructure: ((_formData$selectedInf0 = formData.selectedInfrastructure) === null || _formData$selectedInf0 === void 0 ? void 0 : _formData$selectedInf0.length) || 0,\n      compute: ((_formData$selectedCom8 = formData.selectedCompute) === null || _formData$selectedCom8 === void 0 ? void 0 : _formData$selectedCom8.length) || 0,\n      integration: ((_formData$selectedInt7 = formData.selectedIntegration) === null || _formData$selectedInt7 === void 0 ? void 0 : _formData$selectedInt7.length) || 0,\n      security: ((_formData$selectedSec4 = formData.selectedSecurity) === null || _formData$selectedSec4 === void 0 ? void 0 : _formData$selectedSec4.length) || 0,\n      monitoring: ((_formData$selectedMon6 = formData.selectedMonitoring) === null || _formData$selectedMon6 === void 0 ? void 0 : _formData$selectedMon6.length) || 0,\n      deployment: ((_formData$selectedDep = formData.selectedDeployment) === null || _formData$selectedDep === void 0 ? void 0 : _formData$selectedDep.length) || 0,\n      optimization: ((_formData$selectedOpt = formData.selectedOptimization) === null || _formData$selectedOpt === void 0 ? void 0 : _formData$selectedOpt.length) || 0\n    };\n  };\n  const serviceCounts = getServiceCounts();\n  const totalServices = Object.values(serviceCounts).reduce((a, b) => a + b, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-aws-blue mb-2\",\n        children: \"Generate Infrastructure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1546,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-aws-gray-600\",\n        children: \"Review your configuration and deploy your Lambda-powered infrastructure automation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1547,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1545,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2 space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-aws-gray-50 border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Zap, {\n              className: \"w-5 h-5 mr-2 text-aws-orange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1559,\n              columnNumber: 15\n            }, this), \"Configuration Summary\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1558,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 md:grid-cols-4 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-aws-blue\",\n                children: serviceCounts.infrastructure\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1564,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Infrastructure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1565,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1563,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-green-600\",\n                children: serviceCounts.compute\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1568,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Compute\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1569,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1567,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-purple-600\",\n                children: serviceCounts.security\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1572,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Security\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1573,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1571,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-aws-orange\",\n                children: totalServices\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1576,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Total Services\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1577,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1575,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1562,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1557,\n          columnNumber: 11\n        }, this), isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Clock, {\n              className: \"w-5 h-5 mr-2 text-aws-orange animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1586,\n              columnNumber: 17\n            }, this), \"Deployment Progress\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1585,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium text-aws-gray-700\",\n                children: currentTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1591,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-bold text-aws-blue\",\n                children: [progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1592,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1590,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full bg-aws-gray-200 rounded-full h-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gradient-to-r from-aws-orange to-green-500 h-3 rounded-full transition-all duration-500\",\n                style: {\n                  width: `${progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1595,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1594,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1589,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1584,\n          columnNumber: 13\n        }, this), generatedResources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"w-5 h-5 mr-2 text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1608,\n              columnNumber: 17\n            }, this), \"Generated Resources\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1607,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: generatedResources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-green-500 rounded-full\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1615,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-medium text-aws-blue\",\n                    children: resource.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1617,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-aws-gray-600\",\n                    children: resource.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1618,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1616,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1614,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"px-2 py-1 bg-green-100 text-green-800 text-xs font-medium rounded\",\n                children: resource.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1621,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1613,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1611,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1606,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1555,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Shield, {\n              className: \"w-5 h-5 mr-2 text-blue-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1636,\n              columnNumber: 15\n            }, this), \"Intelligent Deployment System\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1635,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-50 border border-blue-200 rounded-lg p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                  className: \"w-4 h-4 mr-2 text-blue-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1642,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-blue-800\",\n                  children: \"Smart Permission Detection\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1643,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1641,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-blue-700\",\n                children: \"Automatically detects your AWS permissions and selects the appropriate template (full or simplified)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1645,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1640,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-green-50 border border-green-200 rounded-lg p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n                  className: \"w-4 h-4 mr-2 text-green-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1652,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-green-800\",\n                  children: \"Visual Progress Tracking\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1653,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1651,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-green-700\",\n                children: \"Real-time progress bars and status updates during deployment with resource-specific phases\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1655,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1650,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-purple-50 border border-purple-200 rounded-lg p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Monitor, {\n                  className: \"w-4 h-4 mr-2 text-purple-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1662,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-purple-800\",\n                  children: \"Enhanced Error Handling\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1663,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1661,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-purple-700\",\n                children: \"Comprehensive error detection with detailed troubleshooting guidance and automatic fallbacks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1665,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1660,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-orange-50 border border-orange-200 rounded-lg p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Package, {\n                  className: \"w-4 h-4 mr-2 text-orange-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1672,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-orange-800\",\n                  children: \"Web App Integration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1673,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1671,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-orange-700\",\n                children: \"Build-in-place support for React/Node.js apps with automatic S3 deployment and website hosting\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1675,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1670,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1639,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1634,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n              className: \"w-5 h-5 mr-2 text-green-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1685,\n              columnNumber: 15\n            }, this), \"Cost Estimate\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1684,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-3xl font-bold text-green-600\",\n              children: [\"$\", estimatedCost]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1689,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-aws-gray-600\",\n              children: \"per month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1690,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1688,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-sm text-blue-800\",\n              children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n                className: \"w-4 h-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1694,\n                columnNumber: 17\n              }, this), \"Auto-scaling enabled for cost optimization\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1693,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1692,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1683,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4\",\n            children: \"Project Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1702,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1705,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-aws-blue\",\n                children: formData.projectName || 'Unnamed Project'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1706,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1704,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Environment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1709,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-aws-blue\",\n                children: formData.environment || 'Development'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1710,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1708,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"AWS Region\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1713,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-aws-blue\",\n                children: formData.awsRegion || 'us-east-1'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1714,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1712,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1703,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1701,\n          columnNumber: 11\n        }, this), deploymentStatus === 'completed' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Monitor, {\n              className: \"w-5 h-5 mr-2 text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1723,\n              columnNumber: 17\n            }, this), \"Health Status\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1722,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Infrastructure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1728,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flex items-center text-green-600\",\n                children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                  className: \"w-4 h-4 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1730,\n                  columnNumber: 21\n                }, this), \"Healthy\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1729,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1727,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Security\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1735,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flex items-center text-green-600\",\n                children: [/*#__PURE__*/_jsxDEV(Shield, {\n                  className: \"w-4 h-4 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1737,\n                  columnNumber: 21\n                }, this), \"Secure\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1736,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1734,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Performance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1742,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flex items-center text-green-600\",\n                children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n                  className: \"w-4 h-4 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1744,\n                  columnNumber: 21\n                }, this), \"Optimal\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1743,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1741,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1726,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1721,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1632,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1553,\n      columnNumber: 7\n    }, this), generatedFiles && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-50 border border-blue-200 rounded-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-blue-800 mb-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Package, {\n          className: \"w-5 h-5 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1758,\n          columnNumber: 13\n        }, this), \"Intelligent Deployment Package\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1757,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\",\n        children: Object.entries(generatedFiles).map(([filename, content]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-blue-200 rounded-lg p-3 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"w-8 h-8 text-blue-600 mx-auto mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1764,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-blue-800 text-sm\",\n            children: filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1765,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-blue-600\",\n            children: [Math.round(content.length / 1024), \"KB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1766,\n            columnNumber: 17\n          }, this)]\n        }, filename, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1763,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1761,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-blue-700\",\n        children: \"Smart deployment package with automatic permission detection, progress tracking, and enhanced error handling. Extract and run ./deploy.sh to start.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1770,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1756,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col sm:flex-row gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: simulateDeployment,\n        disabled: isGenerating || deploymentStatus === 'completed',\n        className: `flex-1 flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all duration-200 ${isGenerating || deploymentStatus === 'completed' ? 'bg-aws-gray-300 text-aws-gray-500 cursor-not-allowed' : 'bg-aws-orange text-white hover:bg-aws-orange-dark shadow-lg hover:shadow-xl'}`,\n        children: isGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"w-5 h-5 animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1789,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Deploying Infrastructure...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1790,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : deploymentStatus === 'completed' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1794,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Deployment Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1795,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Play, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1799,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Deploy Infrastructure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1800,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1778,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportConfiguration,\n        disabled: isExporting,\n        className: `flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all duration-200 ${isExporting ? 'bg-aws-gray-300 text-aws-gray-500 cursor-not-allowed' : 'bg-green-600 text-white hover:bg-green-700 shadow-lg hover:shadow-xl'}`,\n        children: isExporting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"w-5 h-5 animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1816,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Exporting...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1817,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Download, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1821,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Export Smart Deployment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1822,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1805,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1777,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between pt-6 border-t border-aws-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevStep,\n        className: \"flex items-center space-x-2 text-aws-gray-600 hover:text-aws-blue transition-colors duration-200\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2190 BACK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1834,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1830,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-aws-gray-500\",\n        children: [\"Step \", currentStep, \" of \", totalSteps, \" - Ready to deploy! \\uD83D\\uDE80\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1836,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1829,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1543,\n    columnNumber: 5\n  }, this);\n};\n_s(GenerateStep, \"5IJlK43MXUcwYWB6RmWVXOIkvFo=\");\n_c = GenerateStep;\nexport default GenerateStep;\nvar _c;\n$RefreshReg$(_c, \"GenerateStep\");","map":{"version":3,"names":["React","useState","useEffect","Play","Download","Clock","DollarSign","CheckCircle","Zap","TrendingUp","Shield","Monitor","FileText","Package","jsxDEV","_jsxDEV","Fragment","_Fragment","GenerateStep","formData","prevStep","currentStep","totalSteps","_s","isGenerating","setIsGenerating","progress","setProgress","currentTask","setCurrentTask","estimatedCost","setEstimatedCost","generatedResources","setGeneratedResources","deploymentStatus","setDeploymentStatus","generatedFiles","setGeneratedFiles","isExporting","setIsExporting","_formData$selectedInf","_formData$selectedInf2","_formData$selectedInf3","_formData$selectedInf4","_formData$selectedInf5","_formData$selectedCom","_formData$selectedCom2","_formData$selectedCom3","_formData$selectedCom4","_formData$selectedInt","_formData$selectedInt2","_formData$selectedInt3","_formData$selectedInt4","_formData$selectedSec","_formData$selectedSec2","_formData$selectedSec3","_formData$selectedMon","_formData$selectedMon2","_formData$selectedMon3","cost","selectedInfrastructure","includes","selectedCompute","selectedIntegration","selectedSecurity","selectedMonitoring","generateCloudFormationTemplate","projectName","environment","yamlTemplate","generateResourcesYAML","generateOutputsYAML","_formData$selectedInf6","_formData$selectedInf7","_formData$selectedCom5","_formData$selectedInt5","_formData$selectedMon4","yamlResources","_formData$selectedCom6","_formData$selectedInf8","_formData$selectedInf9","_formData$selectedCom7","_formData$selectedInt6","_formData$selectedMon5","yamlOutputs","generateDeploymentScript","Date","toISOString","generateDeleteScript","generateReadme","toLocaleDateString","downloadZipFile","files","JSZip","default","zip","Object","entries","forEach","filename","content","file","zipBlob","generateAsync","type","element","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","exportConfiguration","error","console","alert","simulateDeployment","tasks","name","duration","totalProgress","progressStep","length","i","Promise","resolve","setTimeout","Math","round","prev","id","status","getServiceCounts","_formData$selectedInf0","_formData$selectedCom8","_formData$selectedInt7","_formData$selectedSec4","_formData$selectedMon6","_formData$selectedDep","_formData$selectedOpt","infrastructure","compute","integration","security","monitoring","deployment","selectedDeployment","optimization","selectedOptimization","serviceCounts","totalServices","values","reduce","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","map","resource","index","awsRegion","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/codinggents/Documents/lambdaforge/src/components/steps/GenerateStep.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Play, Download, Clock, DollarSign, CheckCircle, Zap, TrendingUp, Shield, Monitor, FileText, Package } from 'lucide-react';\n\nconst GenerateStep = ({ formData, prevStep, currentStep, totalSteps }) => {\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [currentTask, setCurrentTask] = useState('');\n  const [estimatedCost, setEstimatedCost] = useState(0);\n  const [generatedResources, setGeneratedResources] = useState([]);\n  const [deploymentStatus, setDeploymentStatus] = useState('ready'); // ready, generating, completed, error\n  const [generatedFiles, setGeneratedFiles] = useState(null);\n  const [isExporting, setIsExporting] = useState(false);\n\n  // Calculate estimated monthly cost based on selections\n  useEffect(() => {\n    let cost = 0;\n    \n    // Infrastructure costs\n    if (formData.selectedInfrastructure?.includes('s3-bucket')) cost += 23;\n    if (formData.selectedInfrastructure?.includes('dynamodb')) cost += 45;\n    if (formData.selectedInfrastructure?.includes('rds-database')) cost += 85;\n    if (formData.selectedInfrastructure?.includes('vpc-networking')) cost += 15;\n    if (formData.selectedInfrastructure?.includes('ebs-volumes')) cost += 30;\n\n    // Compute costs\n    if (formData.selectedCompute?.includes('lambda-functions')) cost += 12;\n    if (formData.selectedCompute?.includes('ec2-instances')) cost += 120;\n    if (formData.selectedCompute?.includes('ecs-containers')) cost += 95;\n    if (formData.selectedCompute?.includes('fargate-serverless')) cost += 75;\n\n    // Integration costs\n    if (formData.selectedIntegration?.includes('api-gateway')) cost += 25;\n    if (formData.selectedIntegration?.includes('eventbridge')) cost += 8;\n    if (formData.selectedIntegration?.includes('step-functions')) cost += 15;\n    if (formData.selectedIntegration?.includes('sns-notifications')) cost += 5;\n\n    // Security costs\n    if (formData.selectedSecurity?.includes('kms-encryption')) cost += 12;\n    if (formData.selectedSecurity?.includes('secrets-manager')) cost += 8;\n    if (formData.selectedSecurity?.includes('waf-protection')) cost += 35;\n\n    // Monitoring costs\n    if (formData.selectedMonitoring?.includes('cloudwatch')) cost += 18;\n    if (formData.selectedMonitoring?.includes('x-ray-tracing')) cost += 22;\n    if (formData.selectedMonitoring?.includes('cloudtrail')) cost += 10;\n\n    setEstimatedCost(cost);\n  }, [formData]);\n\n  // File generation functions\n  const generateCloudFormationTemplate = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    const environment = formData.environment || 'Development';\n    \n    // Generate YAML format instead of JSON\n    const yamlTemplate = `AWSTemplateFormatVersion: '2010-09-09'\nDescription: '${projectName} - Generated by LambdaForge'\n\nParameters:\n  ProjectName:\n    Type: String\n    Default: ${projectName}\n    Description: Name of the project\n  Environment:\n    Type: String\n    Default: ${environment}\n    AllowedValues:\n      - Development\n      - Staging\n      - Production\n    Description: Environment type\n\nResources:\n${generateResourcesYAML()}\n\nOutputs:\n${generateOutputsYAML()}`;\n\n    return yamlTemplate;\n  };\n\n  // YAML generation functions for proper CloudFormation format\n  const generateResourcesYAML = () => {\n    let yamlResources = '';\n\n    // Infrastructure Resources\n    if (formData.selectedInfrastructure?.includes('s3-bucket')) {\n      yamlResources += `  # S3 Bucket with versioning and static website hosting\n  S3Bucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: !Sub '\\${ProjectName}-storage-\\${AWS::AccountId}'\n      VersioningConfiguration:\n        Status: Enabled\n      WebsiteConfiguration:\n        IndexDocument: index.html\n        ErrorDocument: error.html\n      PublicAccessBlockConfiguration:\n        BlockPublicAcls: false\n        BlockPublicPolicy: false\n        IgnorePublicAcls: false\n        RestrictPublicBuckets: false\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n  # S3 Bucket Policy for static website hosting\n  S3BucketPolicy:\n    Type: AWS::S3::BucketPolicy\n    Properties:\n      Bucket: !Ref S3Bucket\n      PolicyDocument:\n        Statement:\n          - Effect: Allow\n            Principal: '*'\n            Action: s3:GetObject\n            Resource: !Sub '\\${S3Bucket}/*'\n\n`;\n    }\n\n    if (formData.selectedInfrastructure?.includes('dynamodb')) {\n      yamlResources += `  # DynamoDB Table\n  DynamoDBTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      TableName: !Sub '\\${ProjectName}-data'\n      AttributeDefinitions:\n        - AttributeName: id\n          AttributeType: S\n      KeySchema:\n        - AttributeName: id\n          KeyType: HASH\n      BillingMode: PAY_PER_REQUEST\n      PointInTimeRecoverySpecification:\n        PointInTimeRecoveryEnabled: true\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    // Compute Resources - Fixed IAM role without custom naming\n    if (formData.selectedCompute?.includes('lambda-functions')) {\n      yamlResources += `  # Lambda Execution Role (no custom name to avoid conflicts)\n  LambdaExecutionRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service: lambda.amazonaws.com\n            Action: sts:AssumeRole\n      ManagedPolicyArns:\n        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n  # Lambda Function\n  LambdaFunction:\n    Type: AWS::Lambda::Function\n    Properties:\n      FunctionName: !Sub '\\${ProjectName}-function'\n      Runtime: nodejs18.x\n      Handler: index.handler\n      Role: !GetAtt LambdaExecutionRole.Arn\n      Code:\n        ZipFile: |\n          exports.handler = async (event) => {\n              console.log('Event:', JSON.stringify(event, null, 2));\n              \n              const response = {\n                  statusCode: 200,\n                  headers: {\n                      'Content-Type': 'application/json',\n                      'Access-Control-Allow-Origin': '*'\n                  },\n                  body: JSON.stringify({\n                      message: 'Hello from ${formData.projectName || 'LambdaForge'}!',\n                      timestamp: new Date().toISOString(),\n                      environment: process.env.ENVIRONMENT || 'Development'\n                  })\n              };\n              \n              return response;\n          };\n      Environment:\n        Variables:\n          PROJECT_NAME: !Ref ProjectName\n          ENVIRONMENT: !Ref Environment\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    // Integration Resources\n    if (formData.selectedIntegration?.includes('api-gateway')) {\n      yamlResources += `  # API Gateway\n  ApiGateway:\n    Type: AWS::ApiGateway::RestApi\n    Properties:\n      Name: !Sub '\\${ProjectName}-api'\n      Description: !Sub 'API for \\${ProjectName}'\n      EndpointConfiguration:\n        Types:\n          - REGIONAL\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n\n      if (formData.selectedCompute?.includes('lambda-functions')) {\n        yamlResources += `  # API Gateway Resource\n  ApiGatewayResource:\n    Type: AWS::ApiGateway::Resource\n    Properties:\n      RestApiId: !Ref ApiGateway\n      ParentId: !GetAtt ApiGateway.RootResourceId\n      PathPart: api\n\n  # API Gateway Method\n  ApiGatewayMethod:\n    Type: AWS::ApiGateway::Method\n    Properties:\n      RestApiId: !Ref ApiGateway\n      ResourceId: !Ref ApiGatewayResource\n      HttpMethod: ANY\n      AuthorizationType: NONE\n      Integration:\n        Type: AWS_PROXY\n        IntegrationHttpMethod: POST\n        Uri: !Sub 'arn:aws:apigateway:\\${AWS::Region}:lambda:path/2015-03-31/functions/\\${LambdaFunction.Arn}/invocations'\n\n  # API Gateway Deployment\n  ApiGatewayDeployment:\n    Type: AWS::ApiGateway::Deployment\n    DependsOn:\n      - ApiGatewayMethod\n    Properties:\n      RestApiId: !Ref ApiGateway\n      StageName: !Ref Environment\n\n  # Lambda Permission for API Gateway\n  LambdaApiGatewayPermission:\n    Type: AWS::Lambda::Permission\n    Properties:\n      FunctionName: !Ref LambdaFunction\n      Action: lambda:InvokeFunction\n      Principal: apigateway.amazonaws.com\n      SourceArn: !Sub 'arn:aws:apigateway:\\${AWS::Region}::/restapis/\\${ApiGateway}/stages/\\${Environment}/*/*'\n\n`;\n      }\n    }\n\n    // Monitoring Resources\n    if (formData.selectedMonitoring?.includes('cloudwatch')) {\n      yamlResources += `  # CloudWatch Log Group\n  LogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      LogGroupName: !Sub '/aws/lambda/\\${ProjectName}-logs'\n      RetentionInDays: 14\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    return yamlResources || '  # No resources selected';\n  };\n\n  const generateOutputsYAML = () => {\n    let yamlOutputs = '';\n\n    if (formData.selectedInfrastructure?.includes('s3-bucket')) {\n      yamlOutputs += `  S3BucketName:\n    Description: S3 Bucket Name\n    Value: !Ref S3Bucket\n    Export:\n      Name: !Sub '\\${ProjectName}-s3-bucket'\n  S3BucketConsoleLink:\n    Description: S3 Bucket Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/s3/buckets/\\${S3Bucket}'\n  S3WebsiteURL:\n    Description: S3 Static Website URL\n    Value: !Sub 'http://\\${S3Bucket}.s3-website-\\${AWS::Region}.amazonaws.com'\n    Export:\n      Name: !Sub '\\${ProjectName}-website-url'\n\n`;\n    }\n\n    if (formData.selectedInfrastructure?.includes('dynamodb')) {\n      yamlOutputs += `  DynamoDBTableName:\n    Description: DynamoDB Table Name\n    Value: !Ref DynamoDBTable\n    Export:\n      Name: !Sub '\\${ProjectName}-dynamodb-table'\n  DynamoDBConsoleLink:\n    Description: DynamoDB Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/dynamodbv2/home?region=\\${AWS::Region}#table?name=\\${DynamoDBTable}'\n\n`;\n    }\n\n    if (formData.selectedCompute?.includes('lambda-functions')) {\n      yamlOutputs += `  LambdaFunctionArn:\n    Description: Lambda Function ARN\n    Value: !GetAtt LambdaFunction.Arn\n    Export:\n      Name: !Sub '\\${ProjectName}-lambda-arn'\n  LambdaConsoleLink:\n    Description: Lambda Function Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/lambda/home?region=\\${AWS::Region}#/functions/\\${LambdaFunction}'\n\n`;\n    }\n\n    if (formData.selectedIntegration?.includes('api-gateway')) {\n      yamlOutputs += `  ApiEndpoint:\n    Description: API Gateway endpoint URL\n    Value: !Sub 'https://\\${ApiGateway}.execute-api.\\${AWS::Region}.amazonaws.com/\\${Environment}'\n    Export:\n      Name: !Sub '\\${ProjectName}-api-endpoint'\n  ApiGatewayConsoleLink:\n    Description: API Gateway Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/apigateway/home?region=\\${AWS::Region}#/apis/\\${ApiGateway}'\n\n`;\n    }\n\n    if (formData.selectedMonitoring?.includes('cloudwatch')) {\n      yamlOutputs += `  LogGroupName:\n    Description: CloudWatch Log Group Name\n    Value: !Ref LogGroup\n    Export:\n      Name: !Sub '\\${ProjectName}-log-group'\n  CloudWatchConsoleLink:\n    Description: CloudWatch Logs Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=\\${AWS::Region}#logsV2:log-groups/log-group/\\${LogGroup}'\n\n`;\n    }\n\n    yamlOutputs += `  CloudFormationConsoleLink:\n    Description: CloudFormation Stack Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/cloudformation/home?region=\\${AWS::Region}#/stacks/stackinfo?stackId=\\${AWS::StackName}'\n\n  DeploymentRegion:\n    Description: AWS Region where resources are deployed\n    Value: !Ref AWS::Region\n\n`;\n\n    return yamlOutputs;\n  };\n\n  /* eslint-disable no-useless-escape */\n  const generateDeploymentScript = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    const environment = formData.environment || 'Development';\n\n    return `#!/bin/bash\n\n# ${projectName} Deployment Script\n# Generated by LambdaForge on ${new Date().toISOString()}\n\nset -e\n\n# Configuration\nPROJECT_NAME=\"${projectName}\"\nENVIRONMENT=\"${environment}\"\n# Auto-detect AWS region from AWS CLI configuration\nAWS_REGION=\\$(aws configure get region)\nif [ -z \"\\$AWS_REGION\" ]; then\n    echo \"⚠️  No default region configured. Using us-east-1\"\n    AWS_REGION=\"us-east-1\"\nfi\nSTACK_NAME=\"\\${PROJECT_NAME}-stack\"\n\n# Template Selection - Choose based on IAM permissions\n# Use template_no_iam.yaml for limited permissions, template.yaml for full permissions\nTEMPLATE_FILE=\"template_no_iam.yaml\"\n\n# =============================================================================\n# 🌐 WEB APPLICATION CONFIGURATION\n# =============================================================================\n# Uncomment and configure ONE of the following options to deploy a web app:\n\n# Option 1: Deploy from Local Folder\n# WEB_APP_LOCAL_PATH=\"/Users/username/Documents/my-react-app\"\n# Example: WEB_APP_LOCAL_PATH=\"/Users/codinggents/Documents/lambdaforge\"\n\n# Option 2: Deploy from GitHub Repository  \n# WEB_APP_GITHUB_REPO=\"https://github.com/username/repository-name\"\n# Example: WEB_APP_GITHUB_REPO=\"https://github.com/your-username/lambdaforge\"\n\n# Option 3: Infrastructure Only (Default)\n# Leave both options commented out to deploy only AWS infrastructure\n\n# 📋 Requirements for Web Apps:\n# - Must have package.json file\n# - Must have \"build\" script that creates build/ or dist/ folder\n# - Supports React, Vue, Angular, and other Node.js web apps\n# =============================================================================\n\n# Colors for output\nRED='\\\\033[0;31m'\nGREEN='\\\\033[0;32m'\nYELLOW='\\\\033[1;33m'\nBLUE='\\\\033[0;34m'\nNC='\\\\033[0m'\n\nprint_status() {\n    echo -e \"\\${BLUE}[INFO]\\${NC} \\$1\"\n}\n\nprint_success() {\n    echo -e \"\\${GREEN}[SUCCESS]\\${NC} \\$1\"\n}\n\nprint_error() {\n    echo -e \"\\${RED}[ERROR]\\${NC} \\$1\"\n}\n\nprint_warning() {\n    echo -e \"\\${YELLOW}[WARNING]\\${NC} \\$1\"\n}\n\n# Progress bar function\nshow_progress() {\n    local duration=\\$1\n    local message=\\$2\n    local progress=0\n    local bar_length=50\n    \n    echo -n \"\\$message \"\n    while [ \\$progress -le \\$duration ]; do\n        local filled=\\$((progress * bar_length / duration))\n        local empty=\\$((bar_length - filled))\n        \n        printf \"\\\\r\\$message [\"\n        printf \"%\\${filled}s\" | tr ' ' '█'\n        printf \"%\\${empty}s\" | tr ' ' '░'\n        printf \"] %d%%\" \\$((progress * 100 / duration))\n        \n        sleep 1\n        progress=\\$((progress + 1))\n    done\n    echo\n}\n\n# Check prerequisites\ncheck_prerequisites() {\n    print_status \"Checking prerequisites...\"\n    \n    # Check AWS CLI\n    if ! command -v aws &> /dev/null; then\n        print_error \"AWS CLI is not installed. Please install it first.\"\n        exit 1\n    fi\n    \n    # Check AWS credentials\n    if ! aws sts get-caller-identity &> /dev/null; then\n        print_error \"AWS credentials not configured. Run 'aws configure' first.\"\n        exit 1\n    fi\n    \n    print_success \"Prerequisites check passed\"\n}\n\n# Check specific AWS permissions\ncheck_permissions() {\n    print_status \"Checking AWS permissions...\"\n    \n    # Test S3 permissions\n    if aws s3 ls &> /dev/null; then\n        print_success \"✓ S3 permissions OK\"\n    else\n        print_error \"✗ S3 permissions missing\"\n        return 1\n    fi\n    \n    # Test CloudFormation permissions\n    if aws cloudformation list-stacks --max-items 1 &> /dev/null; then\n        print_success \"✓ CloudFormation permissions OK\"\n    else\n        print_error \"✗ CloudFormation permissions missing\"\n        return 1\n    fi\n    \n    # Test IAM permissions (optional)\n    if aws iam list-roles --max-items 1 &> /dev/null 2>&1; then\n        # Test Lambda permissions\n        if aws lambda list-functions --max-items 1 &> /dev/null 2>&1; then\n            # Test API Gateway permissions  \n            if aws apigateway get-rest-apis --limit 1 &> /dev/null 2>&1; then\n                print_success \"✓ Full AWS permissions detected\"\n                print_warning \"⚠ Using simplified template for reliability\"\n                TEMPLATE_FILE=\"template_no_iam.yaml\"\n            else\n                print_warning \"⚠ Limited API Gateway permissions - using simplified template\"\n                TEMPLATE_FILE=\"template_no_iam.yaml\"\n            fi\n        else\n            print_warning \"⚠ Limited Lambda permissions - using simplified template\"\n            TEMPLATE_FILE=\"template_no_iam.yaml\"\n        fi\n    else\n        print_warning \"⚠ Limited IAM permissions - using simplified template\"\n        TEMPLATE_FILE=\"template_no_iam.yaml\"\n    fi\n}\n\n# Check web application configuration\ncheck_web_app_config() {\n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ] && [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_error \"Cannot specify both local path and GitHub repo. Choose one.\"\n        exit 1\n    fi\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        if [ ! -d \"\\$WEB_APP_LOCAL_PATH\" ]; then\n            print_error \"Local web app path does not exist: \\$WEB_APP_LOCAL_PATH\"\n            exit 1\n        fi\n        print_status \"Web app source: Local folder (\\$WEB_APP_LOCAL_PATH)\"\n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Web app source: GitHub repository (\\$WEB_APP_GITHUB_REPO)\"\n    else\n        print_warning \"No web app source specified. Only AWS infrastructure will be created.\"\n        echo \"\"\n        print_status \"💡 To deploy a web application alongside your infrastructure:\"\n        echo \"   1. Edit this script (deploy.sh)\"\n        echo \"   2. Uncomment and set either:\"\n        echo \"      • WEB_APP_LOCAL_PATH=\\\"/path/to/your/app\\\"\"\n        echo \"      • WEB_APP_GITHUB_REPO=\\\"https://github.com/user/repo\\\"\"\n        echo \"   3. Re-run: ./deploy.sh\"\n        echo \"\"\n    fi\n}\n\n# Build and package web application\nbuild_web_app() {\n    if [ -z \"\\$WEB_APP_LOCAL_PATH\" ] && [ -z \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Skipping web app build - no source specified\"\n        return 0\n    fi\n    \n    print_status \"Building web application...\"\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        # Build from local path (in place)\n        print_status \"Building from local path: \\$WEB_APP_LOCAL_PATH\"\n        \n        # Save current directory\n        ORIGINAL_DIR=\\$(pwd)\n        \n        # Go to the local path and build there\n        cd \"\\$WEB_APP_LOCAL_PATH\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                cd \"\\$ORIGINAL_DIR\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in \\$WEB_APP_LOCAL_PATH\"\n            cd \"\\$ORIGINAL_DIR\"\n            exit 1\n        fi\n        \n        # Return to original directory\n        cd \"\\$ORIGINAL_DIR\"\n        \n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        # Clone from GitHub to temporary directory\n        print_status \"Cloning from GitHub repository: \\$WEB_APP_GITHUB_REPO\"\n        \n        BUILD_DIR=\"\\$(mktemp -d)\"\n        print_status \"Using build directory: \\$BUILD_DIR\"\n        \n        git clone \"\\$WEB_APP_GITHUB_REPO\" \"\\$BUILD_DIR\"\n        cd \"\\$BUILD_DIR\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in cloned repository\"\n            exit 1\n        fi\n    fi\n    \n    print_success \"Web application built successfully\"\n    echo \"Built app location: \\$BUILT_APP_PATH\"\n}\n\n# Deploy CloudFormation stack\ndeploy_stack() {\n    print_status \"Checking if stack exists...\"\n    \n    if aws cloudformation describe-stacks --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" &> /dev/null; then\n        print_status \"Stack exists. Updating...\"\n        print_status \"Using template: \\$TEMPLATE_FILE\"\n        \n        aws cloudformation update-stack \\\\\n            --stack-name \"\\$STACK_NAME\" \\\\\n            --template-body file://\\$TEMPLATE_FILE \\\\\n            --parameters ParameterKey=ProjectName,ParameterValue=\"\\$PROJECT_NAME\" \\\\\n                        ParameterKey=Environment,ParameterValue=\"\\$ENVIRONMENT\" \\\\\n            --capabilities CAPABILITY_IAM \\\\\n            --region \"\\$AWS_REGION\"\n        \n        print_status \"Waiting for stack update to complete...\"\n        show_progress 180 \"🔄 Updating AWS resources\"\n        \n        if aws cloudformation wait stack-update-complete --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\"; then\n            print_success \"Stack updated successfully!\"\n        else\n            print_error \"Stack update failed!\"\n            print_status \"Checking stack events for details...\"\n            aws cloudformation describe-stack-events --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" --query 'StackEvents[?ResourceStatus==\\`UPDATE_FAILED\\`].[LogicalResourceId,ResourceStatusReason]' --output table\n            return 1\n        fi\n    else\n        print_status \"Stack does not exist. Creating...\"\n        print_status \"Using template: \\$TEMPLATE_FILE\"\n        \n        # Show resource creation progress\n        print_status \"📋 Resources to be created:\"\n        if [ \"\\$TEMPLATE_FILE\" = \"template.yaml\" ]; then\n            echo \"  • S3 Bucket (Static Website)\"\n            echo \"  • IAM Execution Role\"\n            echo \"  • Lambda Function\"  \n            echo \"  • API Gateway\"\n            echo \"  • CloudWatch Log Group\"\n        else\n            echo \"  • S3 Bucket (Static Website)\"\n            echo \"  • CloudWatch Log Group\"\n        fi\n        echo\n        \n        aws cloudformation create-stack \\\\\n            --stack-name \"\\$STACK_NAME\" \\\\\n            --template-body file://\\$TEMPLATE_FILE \\\\\n            --parameters ParameterKey=ProjectName,ParameterValue=\"\\$PROJECT_NAME\" \\\\\n                        ParameterKey=Environment,ParameterValue=\"\\$ENVIRONMENT\" \\\\\n            --capabilities CAPABILITY_IAM \\\\\n            --region \"\\$AWS_REGION\"\n        \n        print_status \"Waiting for stack creation to complete...\"\n        \n        # Show progress for different resource types\n        (\n            show_progress 30 \"🪣 Creating S3 Bucket\" &\n            sleep 35\n            show_progress 20 \"📊 Creating CloudWatch Log Group\" &\n            sleep 25\n            if [ \"\\$TEMPLATE_FILE\" = \"template.yaml\" ]; then\n                show_progress 60 \"🔐 Creating IAM Role & Lambda Function\" &\n                sleep 65\n                show_progress 40 \"🌐 Creating API Gateway\" &\n            fi\n        ) &\n        \n        if aws cloudformation wait stack-create-complete --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\"; then\n            print_success \"Stack created successfully!\"\n        else\n            print_error \"Stack creation failed!\"\n            print_status \"Checking stack events for details...\"\n            aws cloudformation describe-stack-events --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" --query 'StackEvents[?ResourceStatus==\\`CREATE_FAILED\\`].[LogicalResourceId,ResourceStatusReason]' --output table\n            return 1\n        fi\n    fi\n}\n\n# Deploy web application to S3\ndeploy_web_app() {\n    if [ -z \"\\$BUILT_APP_PATH\" ]; then\n        print_status \"Skipping web app deployment - no built app\"\n        return 0\n    fi\n    \n    print_status \"Deploying web application to S3...\"\n    \n    # Get S3 bucket name from CloudFormation outputs\n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text)\n    \n    if [ -z \"\\$S3_BUCKET\" ] || [ \"\\$S3_BUCKET\" = \"None\" ]; then\n        print_warning \"No S3 bucket found in stack outputs. Skipping web app deployment.\"\n        return 0\n    fi\n    \n    print_status \"Uploading to S3 bucket: \\$S3_BUCKET\"\n    \n    # Upload files to S3\n    aws s3 sync \"\\$BUILT_APP_PATH\" \"s3://\\$S3_BUCKET\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --delete\n    \n    # Configure S3 public access for static website hosting\n    print_status \"Configuring S3 bucket for static website hosting...\"\n    \n    # Disable public access block (required for static websites)\n    aws s3api put-public-access-block \\\\\n        --bucket \"\\$S3_BUCKET\" \\\\\n        --public-access-block-configuration \"BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false\" \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Create bucket policy for public read access\n    cat > bucket-policy.json << EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"PublicReadGetObject\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"s3:GetObject\",\n            \"Resource\": \"arn:aws:s3:::\\$S3_BUCKET/*\"\n        }\n    ]\n}\nEOF\n    \n    # Apply bucket policy\n    aws s3api put-bucket-policy \\\\\n        --bucket \"\\$S3_BUCKET\" \\\\\n        --policy file://bucket-policy.json \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Configure S3 for static website hosting\n    aws s3 website \"s3://\\$S3_BUCKET\" \\\\\n        --index-document index.html \\\\\n        --error-document index.html \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Get website URL (correct format for different regions)\n    if [ \"\\$AWS_REGION\" = \"us-east-1\" ]; then\n        WEBSITE_URL=\"http://\\$S3_BUCKET.s3-website-\\$AWS_REGION.amazonaws.com\"\n    else\n        WEBSITE_URL=\"http://\\$S3_BUCKET.s3-website.\\$AWS_REGION.amazonaws.com\"\n    fi\n    \n    # Clean up temporary files\n    rm -f bucket-policy.json\n    \n    print_success \"Web application deployed successfully!\"\n    echo \"\"\n    print_success \"🌐 Your web application is available at:\"\n    echo \"   \\$WEBSITE_URL\"\n    echo \"\"\n    print_status \"📋 S3 Configuration Applied:\"\n    echo \"  • Public read access enabled\"\n    echo \"  • Static website hosting configured\"\n    echo \"  • Bucket policy applied for public access\"\n    echo \"\"\n}\n\n# Main deployment function\nmain() {\n    print_status \"🚀 Starting deployment process...\"\n    echo \"Project: \\$PROJECT_NAME\"\n    echo \"Environment: \\$ENVIRONMENT\" \n    echo \"Region: \\$AWS_REGION\"\n    echo \"Stack: \\$STACK_NAME\"\n    echo\n\n    # Run checks\n    check_prerequisites\n    check_permissions\n    check_web_app_config\n\n    # Build and deploy\n    build_web_app\n    deploy_stack\n    deploy_web_app\n\n    print_success \"🎉 Deployment completed successfully!\"\n    echo\n    print_status \"📋 Deployment Summary:\"\n    echo \"• Stack Name: \\$STACK_NAME\"\n    echo \"• Template Used: \\$TEMPLATE_FILE\"\n    echo \"• Region: \\$AWS_REGION\"\n    echo \"• Console: https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks\"\n    \n    # Show stack outputs\n    print_status \"🔗 Resource Links:\"\n    aws cloudformation describe-stacks --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" --query 'Stacks[0].Outputs[].[OutputKey,OutputValue]' --output table 2>/dev/null || echo \"Stack outputs not available yet\"\n}\n\n# Run main function\nmain \"\\$@\"\n`;\n  };\n  /* eslint-enable no-useless-escape */\n\n  /* eslint-disable no-useless-escape */\n  const generateDeleteScript = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n\n    return `#!/bin/bash\n\n# ${projectName} Resource Cleanup Script\n# Generated by LambdaForge on ${new Date().toISOString()}\n# ⚠️  WARNING: This script will DELETE all resources created by the deployment!\n\nset -e\n\n# Configuration\nPROJECT_NAME=\"${projectName}\"\n# Auto-detect AWS region from AWS CLI configuration\nAWS_REGION=\\$(aws configure get region)\nif [ -z \"\\$AWS_REGION\" ]; then\n    echo \"⚠️  No default region configured. Using us-east-1\"\n    AWS_REGION=\"us-east-1\"\nfi\nSTACK_NAME=\"\\${PROJECT_NAME}-stack\"\n\n# Web Application Deployment Configuration\n# Set one of these to deploy the actual web application:\n# WEB_APP_LOCAL_PATH=\"/path/to/your/web/app\"          # Local folder path\n# WEB_APP_GITHUB_REPO=\"https://github.com/user/repo\" # GitHub repository URL\nWEB_APP_LOCAL_PATH=\"\"\nWEB_APP_GITHUB_REPO=\"\"\n\n# Colors for output\nRED='\\\\033[0;31m'\nGREEN='\\\\033[0;32m'\nYELLOW='\\\\033[1;33m'\nBLUE='\\\\033[0;34m'\nNC='\\\\033[0m' # No Color\n\n# Print functions\nprint_status() {\n    echo -e \"\\${BLUE}ℹ️  \\$1\\${NC}\"\n}\n\nprint_success() {\n    echo -e \"\\${GREEN}✅ \\$1\\${NC}\"\n}\n\nprint_warning() {\n    echo -e \"\\${YELLOW}⚠️  \\$1\\${NC}\"\n}\n\nprint_error() {\n    echo -e \"\\${RED}❌ \\$1\\${NC}\"\n}\n\n# Check prerequisites\ncheck_prerequisites() {\n    print_status \"Checking prerequisites...\"\n    \n    # Check AWS CLI\n    if ! command -v aws &> /dev/null; then\n        print_error \"AWS CLI is not installed. Please install it first.\"\n        exit 1\n    fi\n    \n    # Check AWS credentials\n    if ! aws sts get-caller-identity &> /dev/null; then\n        print_error \"AWS credentials not configured. Run 'aws configure' first.\"\n        exit 1\n    fi\n    \n    print_success \"Prerequisites check passed\"\n}\n\n# Check web application configuration\ncheck_web_app_config() {\n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ] && [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_error \"Cannot specify both local path and GitHub repo. Choose one.\"\n        exit 1\n    fi\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        if [ ! -d \"\\$WEB_APP_LOCAL_PATH\" ]; then\n            print_error \"Local web app path does not exist: \\$WEB_APP_LOCAL_PATH\"\n            exit 1\n        fi\n        print_status \"Web app source: Local folder (\\$WEB_APP_LOCAL_PATH)\"\n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Web app source: GitHub repository (\\$WEB_APP_GITHUB_REPO)\"\n    else\n        print_warning \"No web app source specified. Only AWS infrastructure will be created.\"\n        echo \"\"\n        print_status \"💡 To deploy a web application alongside your infrastructure:\"\n        echo \"   1. Edit this script (deploy.sh)\"\n        echo \"   2. Uncomment and set either:\"\n        echo \"      • WEB_APP_LOCAL_PATH=\\\"/path/to/your/app\\\"\"\n        echo \"      • WEB_APP_GITHUB_REPO=\\\"https://github.com/user/repo\\\"\"\n        echo \"   3. Re-run: ./deploy.sh\"\n        echo \"\"\n    fi\n}\n\n# Build and package web application\nbuild_web_app() {\n    if [ -z \"\\$WEB_APP_LOCAL_PATH\" ] && [ -z \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Skipping web app build - no source specified\"\n        return 0\n    fi\n    \n    print_status \"Building web application...\"\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        # Build from local path (in place)\n        print_status \"Building from local path: \\$WEB_APP_LOCAL_PATH\"\n        \n        # Save current directory\n        ORIGINAL_DIR=\\$(pwd)\n        \n        # Go to the local path and build there\n        cd \"\\$WEB_APP_LOCAL_PATH\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                cd \"\\$ORIGINAL_DIR\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in \\$WEB_APP_LOCAL_PATH\"\n            cd \"\\$ORIGINAL_DIR\"\n            exit 1\n        fi\n        \n        # Return to original directory\n        cd \"\\$ORIGINAL_DIR\"\n        \n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        # Clone from GitHub to temporary directory\n        print_status \"Cloning from GitHub repository: \\$WEB_APP_GITHUB_REPO\"\n        \n        BUILD_DIR=\"\\$(mktemp -d)\"\n        print_status \"Using build directory: \\$BUILD_DIR\"\n        \n        git clone \"\\$WEB_APP_GITHUB_REPO\" \"\\$BUILD_DIR\"\n        cd \"\\$BUILD_DIR\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in cloned repository\"\n            exit 1\n        fi\n    fi\n    \n    print_success \"Web application built successfully\"\n    echo \"Built app location: \\$BUILT_APP_PATH\"\n}\n\n# Deploy web application to S3\ndeploy_web_app() {\n    if [ -z \"\\$BUILT_APP_PATH\" ]; then\n        print_status \"Skipping web app deployment - no built app\"\n        return 0\n    fi\n    \n    print_status \"Deploying web application to S3...\"\n    \n    # Get S3 bucket name from CloudFormation outputs\n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text)\n    \n    if [ -z \"\\$S3_BUCKET\" ] || [ \"\\$S3_BUCKET\" = \"None\" ]; then\n        print_warning \"No S3 bucket found in stack outputs. Skipping web app deployment.\"\n        return 0\n    fi\n    \n    print_status \"Uploading to S3 bucket: \\$S3_BUCKET\"\n    \n    # Upload files to S3\n    aws s3 sync \"\\$BUILT_APP_PATH\" \"s3://\\$S3_BUCKET\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --delete\n    \n    # Configure S3 public access for static website hosting\n    print_status \"Configuring S3 bucket for static website hosting...\"\n    \n    # Disable public access block (required for static websites)\n    aws s3api put-public-access-block \\\\\n        --bucket \"\\$S3_BUCKET\" \\\\\n        --public-access-block-configuration \"BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false\" \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Create bucket policy for public read access\n    cat > bucket-policy.json << EOF\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"PublicReadGetObject\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"s3:GetObject\",\n            \"Resource\": \"arn:aws:s3:::\\$S3_BUCKET/*\"\n        }\n    ]\n}\nEOF\n    \n    # Apply bucket policy\n    aws s3api put-bucket-policy \\\\\n        --bucket \"\\$S3_BUCKET\" \\\\\n        --policy file://bucket-policy.json \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Configure S3 for static website hosting\n    aws s3 website \"s3://\\$S3_BUCKET\" \\\\\n        --index-document index.html \\\\\n        --error-document index.html \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Get website URL (correct format for different regions)\n    if [ \"\\$AWS_REGION\" = \"us-east-1\" ]; then\n        WEBSITE_URL=\"http://\\$S3_BUCKET.s3-website-\\$AWS_REGION.amazonaws.com\"\n    else\n        WEBSITE_URL=\"http://\\$S3_BUCKET.s3-website.\\$AWS_REGION.amazonaws.com\"\n    fi\n    \n    # Clean up temporary files\n    rm -f bucket-policy.json\n    \n    print_success \"Web application deployed successfully!\"\n    echo \"\"\n    print_success \"🌐 Your web application is available at:\"\n    echo \"   \\$WEBSITE_URL\"\n    echo \"\"\n}\n\n# Deploy or update the CloudFormation stack\ndeploy_stack() {\n    print_status \"Checking if stack exists...\"\n    \n    if aws cloudformation describe-stacks --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" &>/dev/null; then\n        print_status \"Stack exists. Updating...\"\n        OPERATION=\"update-stack\"\n    else\n        print_status \"Stack does not exist. Creating...\"\n        OPERATION=\"create-stack\"\n    fi\n    \n    print_status \"Deploying CloudFormation stack...\"\n    print_status \"Stack Name: \\$STACK_NAME\"\n    print_status \"Region: \\$AWS_REGION\"\n    print_status \"Template: template.yaml\"\n    \n    # Deploy the stack\n    aws cloudformation \\$OPERATION \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --template-body file://template.yaml \\\\\n        --capabilities CAPABILITY_IAM \\\\\n        --region \"\\$AWS_REGION\"\n    \n    if [ \\$? -ne 0 ]; then\n        print_error \"Failed to create/update the stack\"\n        exit 1\n    fi\n    \n    print_status \"Waiting for stack operation to complete...\"\n    print_status \"This may take several minutes...\"\n    \n    # Wait for the operation to complete\n    if [ \"\\$OPERATION\" = \"create-stack\" ]; then\n        WAIT_CONDITION=\"stack-create-complete\"\n    else\n        WAIT_CONDITION=\"stack-update-complete\"\n    fi\n    \n    if aws cloudformation wait \\$WAIT_CONDITION --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\"; then\n        print_success \"Stack operation completed successfully! 🎉\"\n    else\n        print_error \"Stack operation failed or timed out\"\n        print_status \"Check the CloudFormation console for details:\"\n        echo \"https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks\"\n        exit 1\n    fi\n}\n\n# Show deployment results\nshow_results() {\n    print_success \"🎉 Deployment completed successfully!\"\n    echo \"\"\n    print_status \"📋 Resource Summary:\"\n    \n    # Get stack outputs\n    aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[*].[OutputKey,OutputValue,Description]' \\\\\n        --output table\n    \n    echo \"\"\n    print_status \"🔗 AWS Console Links:\"\n    \n    # CloudFormation Console\n    echo \"📊 CloudFormation Stack:\"\n    echo \"   https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks/stackinfo?stackId=\\$STACK_NAME\"\n    \n    # Get resource links\n    LAMBDA_FUNCTION=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`LambdaFunctionName\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    API_GATEWAY=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`ApiGatewayUrl\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    if [ -n \"\\$LAMBDA_FUNCTION\" ] && [ \"\\$LAMBDA_FUNCTION\" != \"None\" ]; then\n        echo \"⚡ Lambda Function:\"\n        echo \"   https://\\$AWS_REGION.console.aws.amazon.com/lambda/home?region=\\$AWS_REGION#/functions/\\$LAMBDA_FUNCTION\"\n    fi\n    \n    if [ -n \"\\$API_GATEWAY\" ] && [ \"\\$API_GATEWAY\" != \"None\" ]; then\n        echo \"🌐 API Gateway:\"\n        echo \"   \\$API_GATEWAY\"\n    fi\n    \n    if [ -n \"\\$S3_BUCKET\" ] && [ \"\\$S3_BUCKET\" != \"None\" ]; then\n        echo \"🪣 S3 Bucket:\"\n        echo \"   https://s3.console.aws.amazon.com/s3/buckets/\\$S3_BUCKET?region=\\$AWS_REGION\"\n    fi\n    \n    echo \"\"\n    print_status \"💡 Next Steps:\"\n    echo \"  • Test your deployed resources using the links above\"\n    echo \"  • Monitor logs in CloudWatch\"\n    echo \"  • Use delete.sh to clean up resources when done\"\n    echo \"\"\n}\n\n# Main deployment function\nmain() {\n    echo \"\"\n    echo \"======================================\"\n    echo \"🚀 ${projectName} Deployment\"\n    echo \"======================================\"\n    echo \"Project: \\$PROJECT_NAME\"\n    echo \"Region: \\$AWS_REGION\"\n    echo \"\"\n    \n    check_prerequisites\n    check_web_app_config\n    build_web_app\n    deploy_stack\n    deploy_web_app\n    show_results\n}\n\n# Run with error handling\nif [ \"\\${BASH_SOURCE[0]}\" == \"\\${0}\" ]; then\n    main \"$@\"\nfi\n`;\n  };\n  /* eslint-enable no-useless-escape */\n\n  const generateReadme = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n\n    return `# ${projectName} - AWS Infrastructure Deployment\n\nGenerated by **LambdaForge** on ${new Date().toLocaleDateString()}\n\n## 🚀 Quick Start\n\n1. **Configure AWS CLI** (if not already done):\n   \\`\\`\\`bash\n   aws configure\n   \\`\\`\\`\n\n2. **Deploy Infrastructure**:\n   \\`\\`\\`bash\n   ./deploy.sh\n   \\`\\`\\`\n\n3. **Clean Up** (when done):\n   \\`\\`\\`bash\n   ./delete.sh\n   \\`\\`\\`\n\n## 📋 What's Included\n\n- **template.yaml** / **template_no_iam.yaml**: CloudFormation infrastructure templates\n- **deploy.sh**: Intelligent deployment script with permission detection and progress bars\n- **delete.sh**: Safe cleanup script with confirmation prompts\n- **README.md**: This documentation file\n\n## 🔧 Features\n\n### Intelligent Permission Detection\nThe deployment script automatically detects your AWS permissions and chooses the appropriate template:\n- **Full Permissions**: Uses complete template with Lambda, API Gateway, and IAM roles\n- **Limited Permissions**: Falls back to simplified template with S3 and CloudWatch only\n\n### Visual Progress Tracking\n- Real-time progress bars for resource creation\n- Clear status messages and error handling\n- Resource-specific deployment phases\n\n### Web Application Support\nDeploy any React/Node.js web application alongside your infrastructure:\n\n#### Option 1: Local Development\n\\`\\`\\`bash\n# Edit deploy.sh and set:\nWEB_APP_LOCAL_PATH=\"/path/to/your/web/app\"\n\\`\\`\\`\n\n#### Option 2: GitHub Repository\n\\`\\`\\`bash\n# Edit deploy.sh and set:\nWEB_APP_GITHUB_REPO=\"https://github.com/user/repo\"\n\\`\\`\\`\n\n#### Option 3: Infrastructure Only (Default)\nIf neither path is set, only AWS infrastructure will be created.\n\n### Automatic S3 Website Configuration\nWhen deploying a web application, the script automatically:\n- **Disables S3 Public Access Block**: Required for static website hosting\n- **Creates Bucket Policy**: Allows public read access to website files\n- **Configures Website Hosting**: Sets index.html as the default document\n- **Generates Correct URL**: Uses proper regional endpoint format\n\n### Example: Deploy LambdaForge Application\n\\`\\`\\`bash\n# To deploy LambdaForge itself:\nWEB_APP_GITHUB_REPO=\"https://github.com/your-username/lambdaforge\"\n\\`\\`\\`\n\n## ⚠️ Important Requirements\n\n### Required AWS Permissions\n\n**Minimum Required:**\n- \\`s3:*\\` - S3 bucket operations\n- \\`cloudformation:*\\` - Stack management\n- \\`logs:*\\` - CloudWatch logs\n\n**For Full Template:**\n- \\`iam:*\\` - IAM role management\n- \\`lambda:*\\` - Lambda function operations\n- \\`apigateway:*\\` - API Gateway management\n\n### Common Error Solutions\n\n#### Error: \"User is not authorized to perform: iam:CreateRole\"\n**Solution**: Your AWS user lacks IAM permissions. The script will automatically use the simplified template.\n\n#### Error: \"Stack with id X does not exist\"\n**Solution**: This is normal for first deployment. The script will create a new stack.\n\n#### Error: \"Template format error\"\n**Solution**: Ensure you're using the correct template file. The script auto-selects based on permissions.\n\n## 🏗️ Infrastructure Overview\n\n### Resources Created (Full Template)\n- **S3 Bucket**: Static website hosting with public read access\n- **Lambda Function**: Serverless compute with execution role\n- **API Gateway**: RESTful API endpoint\n- **CloudWatch Log Group**: Application logging\n- **IAM Role**: Lambda execution permissions\n\n### Resources Created (Simplified Template)\n- **S3 Bucket**: Static website hosting with public read access\n- **CloudWatch Log Group**: Application logging\n\n## 🔗 Useful Links\n\nAfter deployment, check these AWS Console links:\n- **CloudFormation**: Monitor stack status and resources\n- **S3**: View uploaded files and website configuration\n- **CloudWatch**: Check application logs and metrics\n- **Lambda**: Test functions and view code (full template only)\n- **API Gateway**: Test endpoints and view usage (full template only)\n\n## 🛡️ Security Notes\n\n- S3 bucket is configured for **public read access** (required for static websites)\n- IAM roles follow **least privilege principle**\n- All resources are tagged for easy identification\n- Use **delete.sh** to clean up resources and avoid ongoing charges\n\n## 🆘 Troubleshooting\n\n### Deployment Fails\n1. Check AWS credentials: \\`aws sts get-caller-identity\\`\n2. Verify region configuration: \\`aws configure get region\\`\n3. Review CloudFormation events in AWS Console\n4. Check the deployment script output for specific errors\n\n### Web App Deployment Issues\n1. Ensure \\`package.json\\` exists in your web app directory\n2. Verify build script creates \\`build/\\` or \\`dist/\\` folder\n3. Check S3 bucket permissions and website configuration\n\n### S3 Website Hosting Issues\n1. **DNS_PROBE_FINISHED_NXDOMAIN Error**: Check URL format\n   - ✅ **Correct**: \\`bucket-name.s3-website.region.amazonaws.com\\`\n   - ❌ **Wrong**: \\`bucket-name.s3-website-region.amazonaws.com\\`\n2. **Access Denied Error**: Bucket policy or public access block issue\n   - Run deployment script again to fix S3 configuration\n   - Check AWS Console for bucket policy and public access settings\n3. **Website Not Loading**: Verify index.html exists in bucket root\n\n## 📞 Support\n\n- **AWS Documentation**: https://docs.aws.amazon.com/\n- **CloudFormation Guide**: https://docs.aws.amazon.com/cloudformation/\n- **LambdaForge**: Generated with intelligent deployment automation\n\n---\n\n**Generated by LambdaForge** - Making AWS deployment simple and reliable! 🚀\n`;\n  };\n\n  // Create and download zip file\n  const downloadZipFile = async (files, projectName) => {\n    // Dynamically import JSZip\n    const JSZip = (await import('jszip')).default;\n    \n    const zip = new JSZip();\n    \n    // Add all files to zip\n    Object.entries(files).forEach(([filename, content]) => {\n      zip.file(filename, content);\n    });\n    \n    // Generate zip file\n    const zipBlob = await zip.generateAsync({ type: 'blob' });\n    \n    // Download zip file\n    const element = document.createElement('a');\n    element.href = URL.createObjectURL(zipBlob);\n    element.download = `${projectName}-infrastructure.zip`;\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n    URL.revokeObjectURL(element.href);\n  };\n\n  // Export Configuration function - makes the button functional!\n  const exportConfiguration = async () => {\n    setIsExporting(true);\n    \n    try {\n      const projectName = formData.projectName || 'lambdaforge-project';\n      \n      // Generate all files\n      const files = {\n        'template.yaml': generateCloudFormationTemplate(),\n        'deploy.sh': generateDeploymentScript(),\n        'delete.sh': generateDeleteScript(),\n        'README.md': generateReadme()\n      };\n\n      setGeneratedFiles(files);\n\n      // Download as zip file\n      await downloadZipFile(files, projectName);\n\n\n\n    } catch (error) {\n      console.error('Export failed:', error);\n      alert('❌ Export failed. Please try again.');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const simulateDeployment = async () => {\n    setIsGenerating(true);\n    setDeploymentStatus('generating');\n    setProgress(0);\n    setGeneratedResources([]);\n\n    const tasks = [\n      { name: 'Validating AWS credentials', duration: 800 },\n      { name: 'Analyzing infrastructure requirements', duration: 1200 },\n      { name: 'Generating CloudFormation templates', duration: 1500 },\n      { name: 'Creating deployment scripts', duration: 1000 },\n      { name: 'Creating resource cleanup scripts', duration: 800 },\n      { name: 'Generating documentation', duration: 800 },\n      { name: 'Validating template syntax', duration: 1000 },\n      { name: 'Preparing deployment package', duration: 700 }\n    ];\n\n    let totalProgress = 0;\n    const progressStep = 100 / tasks.length;\n\n    for (let i = 0; i < tasks.length; i++) {\n      setCurrentTask(tasks[i].name);\n      \n      await new Promise(resolve => setTimeout(resolve, tasks[i].duration));\n      \n      totalProgress += progressStep;\n      setProgress(Math.round(totalProgress));\n\n      // Add generated resources as we progress\n      if (i === 2) { // After CloudFormation generation\n        setGeneratedResources(prev => [...prev, \n          { name: 'CloudFormation Template', id: 'template.yaml', status: 'generated', type: 'infrastructure' }\n        ]);\n      }\n      if (i === 3) { // After deployment script\n        setGeneratedResources(prev => [...prev, \n          { name: 'Deployment Script', id: 'deploy.sh', status: 'generated', type: 'automation' }\n        ]);\n      }\n      if (i === 4) { // After generating cleanup script\n        setGeneratedResources(prev => [...prev, \n          { name: 'Resource Cleanup Script', id: 'delete.sh', status: 'generated', type: 'automation' }\n        ]);\n      }\n      if (i === 5) { // After documentation\n        setGeneratedResources(prev => [...prev, \n          { name: 'README Documentation', id: 'README.md', status: 'generated', type: 'documentation' }\n        ]);\n      }\n    }\n\n    // Generate all files automatically\n    const files = {\n      'template.yaml': generateCloudFormationTemplate(),\n      'deploy.sh': generateDeploymentScript(),\n      'delete.sh': generateDeleteScript(),\n      'README.md': generateReadme()\n    };\n    \n    setGeneratedFiles(files);\n    setCurrentTask('All deployment files generated successfully!');\n    setDeploymentStatus('completed');\n    setIsGenerating(false);\n  };\n\n  const getServiceCounts = () => {\n    return {\n      infrastructure: formData.selectedInfrastructure?.length || 0,\n      compute: formData.selectedCompute?.length || 0,\n      integration: formData.selectedIntegration?.length || 0,\n      security: formData.selectedSecurity?.length || 0,\n      monitoring: formData.selectedMonitoring?.length || 0,\n      deployment: formData.selectedDeployment?.length || 0,\n      optimization: formData.selectedOptimization?.length || 0\n    };\n  };\n\n  const serviceCounts = getServiceCounts();\n  const totalServices = Object.values(serviceCounts).reduce((a, b) => a + b, 0);\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Header */}\n      <div>\n        <h2 className=\"text-2xl font-bold text-aws-blue mb-2\">Generate Infrastructure</h2>\n        <p className=\"text-aws-gray-600\">\n          Review your configuration and deploy your Lambda-powered infrastructure automation.\n        </p>\n      </div>\n\n      {/* Project Overview */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Project Info */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          {/* Configuration Summary */}\n          <div className=\"bg-aws-gray-50 border border-aws-gray-200 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n              <Zap className=\"w-5 h-5 mr-2 text-aws-orange\" />\n              Configuration Summary\n            </h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-aws-blue\">{serviceCounts.infrastructure}</div>\n                <div className=\"text-sm text-aws-gray-600\">Infrastructure</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">{serviceCounts.compute}</div>\n                <div className=\"text-sm text-aws-gray-600\">Compute</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-purple-600\">{serviceCounts.security}</div>\n                <div className=\"text-sm text-aws-gray-600\">Security</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-aws-orange\">{totalServices}</div>\n                <div className=\"text-sm text-aws-gray-600\">Total Services</div>\n              </div>\n            </div>\n          </div>\n\n          {/* Live Progress */}\n          {isGenerating && (\n            <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n                <Clock className=\"w-5 h-5 mr-2 text-aws-orange animate-spin\" />\n                Deployment Progress\n              </h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm font-medium text-aws-gray-700\">{currentTask}</span>\n                  <span className=\"text-sm font-bold text-aws-blue\">{progress}%</span>\n                </div>\n                <div className=\"w-full bg-aws-gray-200 rounded-full h-3\">\n                  <div \n                    className=\"bg-gradient-to-r from-aws-orange to-green-500 h-3 rounded-full transition-all duration-500\"\n                    style={{ width: `${progress}%` }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Generated Resources */}\n          {generatedResources.length > 0 && (\n            <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n                <CheckCircle className=\"w-5 h-5 mr-2 text-green-500\" />\n                Generated Resources\n              </h3>\n              <div className=\"space-y-3\">\n                {generatedResources.map((resource, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                      <div>\n                        <div className=\"font-medium text-aws-blue\">{resource.name}</div>\n                        <div className=\"text-sm text-aws-gray-600\">{resource.id}</div>\n                      </div>\n                    </div>\n                    <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs font-medium rounded\">\n                      {resource.status}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Cost Estimate & Actions */}\n        <div className=\"space-y-6\">\n          {/* New: Intelligent Deployment Features */}\n          <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n              <Shield className=\"w-5 h-5 mr-2 text-blue-600\" />\n              Intelligent Deployment System\n            </h3>\n            <div className=\"space-y-4\">\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-center mb-2\">\n                  <CheckCircle className=\"w-4 h-4 mr-2 text-blue-600\" />\n                  <span className=\"font-medium text-blue-800\">Smart Permission Detection</span>\n                </div>\n                <p className=\"text-sm text-blue-700\">\n                  Automatically detects your AWS permissions and selects the appropriate template (full or simplified)\n                </p>\n              </div>\n              \n              <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n                <div className=\"flex items-center mb-2\">\n                  <TrendingUp className=\"w-4 h-4 mr-2 text-green-600\" />\n                  <span className=\"font-medium text-green-800\">Visual Progress Tracking</span>\n                </div>\n                <p className=\"text-sm text-green-700\">\n                  Real-time progress bars and status updates during deployment with resource-specific phases\n                </p>\n              </div>\n              \n              <div className=\"bg-purple-50 border border-purple-200 rounded-lg p-4\">\n                <div className=\"flex items-center mb-2\">\n                  <Monitor className=\"w-4 h-4 mr-2 text-purple-600\" />\n                  <span className=\"font-medium text-purple-800\">Enhanced Error Handling</span>\n                </div>\n                <p className=\"text-sm text-purple-700\">\n                  Comprehensive error detection with detailed troubleshooting guidance and automatic fallbacks\n                </p>\n              </div>\n              \n              <div className=\"bg-orange-50 border border-orange-200 rounded-lg p-4\">\n                <div className=\"flex items-center mb-2\">\n                  <Package className=\"w-4 h-4 mr-2 text-orange-600\" />\n                  <span className=\"font-medium text-orange-800\">Web App Integration</span>\n                </div>\n                <p className=\"text-sm text-orange-700\">\n                  Build-in-place support for React/Node.js apps with automatic S3 deployment and website hosting\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Cost Estimate */}\n          <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n              <DollarSign className=\"w-5 h-5 mr-2 text-green-600\" />\n              Cost Estimate\n            </h3>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-green-600\">${estimatedCost}</div>\n              <div className=\"text-sm text-aws-gray-600\">per month</div>\n            </div>\n            <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n              <div className=\"flex items-center text-sm text-blue-800\">\n                <TrendingUp className=\"w-4 h-4 mr-2\" />\n                Auto-scaling enabled for cost optimization\n              </div>\n            </div>\n          </div>\n\n          {/* Project Details */}\n          <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-aws-blue mb-4\">Project Details</h3>\n            <div className=\"space-y-3\">\n              <div>\n                <div className=\"text-sm text-aws-gray-600\">Project Name</div>\n                <div className=\"font-medium text-aws-blue\">{formData.projectName || 'Unnamed Project'}</div>\n              </div>\n              <div>\n                <div className=\"text-sm text-aws-gray-600\">Environment</div>\n                <div className=\"font-medium text-aws-blue\">{formData.environment || 'Development'}</div>\n              </div>\n              <div>\n                <div className=\"text-sm text-aws-gray-600\">AWS Region</div>\n                <div className=\"font-medium text-aws-blue\">{formData.awsRegion || 'us-east-1'}</div>\n              </div>\n            </div>\n          </div>\n\n          {/* Health Status */}\n          {deploymentStatus === 'completed' && (\n            <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n                <Monitor className=\"w-5 h-5 mr-2 text-green-500\" />\n                Health Status\n              </h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-aws-gray-600\">Infrastructure</span>\n                  <span className=\"flex items-center text-green-600\">\n                    <CheckCircle className=\"w-4 h-4 mr-1\" />\n                    Healthy\n                  </span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-aws-gray-600\">Security</span>\n                  <span className=\"flex items-center text-green-600\">\n                    <Shield className=\"w-4 h-4 mr-1\" />\n                    Secure\n                  </span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-aws-gray-600\">Performance</span>\n                  <span className=\"flex items-center text-green-600\">\n                    <TrendingUp className=\"w-4 h-4 mr-1\" />\n                    Optimal\n                  </span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Enhanced Export Section */}\n      {generatedFiles && (\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\n          <h3 className=\"text-lg font-semibold text-blue-800 mb-4 flex items-center\">\n            <Package className=\"w-5 h-5 mr-2\" />\n            Intelligent Deployment Package\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n            {Object.entries(generatedFiles).map(([filename, content]) => (\n              <div key={filename} className=\"bg-white border border-blue-200 rounded-lg p-3 text-center\">\n                <FileText className=\"w-8 h-8 text-blue-600 mx-auto mb-2\" />\n                <div className=\"font-medium text-blue-800 text-sm\">{filename}</div>\n                <div className=\"text-xs text-blue-600\">{Math.round(content.length / 1024)}KB</div>\n              </div>\n            ))}\n          </div>\n          <p className=\"text-sm text-blue-700\">\n            Smart deployment package with automatic permission detection, progress tracking, and enhanced error handling. Extract and run ./deploy.sh to start.\n          </p>\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"flex flex-col sm:flex-row gap-4\">\n        <button\n          onClick={simulateDeployment}\n          disabled={isGenerating || deploymentStatus === 'completed'}\n          className={`flex-1 flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all duration-200 ${\n            isGenerating || deploymentStatus === 'completed'\n              ? 'bg-aws-gray-300 text-aws-gray-500 cursor-not-allowed'\n              : 'bg-aws-orange text-white hover:bg-aws-orange-dark shadow-lg hover:shadow-xl'\n          }`}\n        >\n          {isGenerating ? (\n            <>\n              <Clock className=\"w-5 h-5 animate-spin\" />\n              <span>Deploying Infrastructure...</span>\n            </>\n          ) : deploymentStatus === 'completed' ? (\n            <>\n              <CheckCircle className=\"w-5 h-5\" />\n              <span>Deployment Complete</span>\n            </>\n          ) : (\n            <>\n              <Play className=\"w-5 h-5\" />\n              <span>Deploy Infrastructure</span>\n            </>\n          )}\n        </button>\n\n        <button \n          onClick={exportConfiguration}\n          disabled={isExporting}\n          className={`flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all duration-200 ${\n            isExporting \n              ? 'bg-aws-gray-300 text-aws-gray-500 cursor-not-allowed'\n              : 'bg-green-600 text-white hover:bg-green-700 shadow-lg hover:shadow-xl'\n          }`}\n        >\n          {isExporting ? (\n            <>\n              <Clock className=\"w-5 h-5 animate-spin\" />\n              <span>Exporting...</span>\n            </>\n          ) : (\n            <>\n              <Download className=\"w-5 h-5\" />\n              <span>Export Smart Deployment</span>\n            </>\n          )}\n        </button>\n      </div>\n\n      {/* Navigation */}\n      <div className=\"flex items-center justify-between pt-6 border-t border-aws-gray-200\">\n        <button\n          onClick={prevStep}\n          className=\"flex items-center space-x-2 text-aws-gray-600 hover:text-aws-blue transition-colors duration-200\"\n        >\n          <span>← BACK</span>\n        </button>\n        <div className=\"text-sm text-aws-gray-500\">\n          Step {currentStep} of {totalSteps} - Ready to deploy! 🚀\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GenerateStep; "],"mappings":"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AgBpB,WAAW;AAC3B,eAAeC,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;EACC,CAAC;EACD;;EAEA;EACA,MAAMoB,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMrB,WAAW,GAAGhD,QAAQ,CAACgD,WAAW,IAAI,qBAAqB;IAEjE,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
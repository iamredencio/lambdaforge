{"ast":null,"code":"import _objectSpread from \"/Users/codinggents/Documents/lambdaforge/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { debugId, toDebugString } from \"../debug\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { getEndpointHeaders } from \"./getEndpointHeaders\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nimport { getEndpointUrl } from \"./getEndpointUrl\";\nexport const evaluateEndpointRule = (endpointRule, options) => {\n  var _options$logger, _options$logger$debug;\n  const {\n    conditions,\n    endpoint\n  } = endpointRule;\n  const {\n    result,\n    referenceRecord\n  } = evaluateConditions(conditions, options);\n  if (!result) {\n    return;\n  }\n  const endpointRuleOptions = _objectSpread(_objectSpread({}, options), {}, {\n    referenceRecord: _objectSpread(_objectSpread({}, options.referenceRecord), referenceRecord)\n  });\n  const {\n    url,\n    properties,\n    headers\n  } = endpoint;\n  (_options$logger = options.logger) === null || _options$logger === void 0 || (_options$logger$debug = _options$logger.debug) === null || _options$logger$debug === void 0 || _options$logger$debug.call(_options$logger, \"\".concat(debugId, \" Resolving endpoint from template: \").concat(toDebugString(endpoint)));\n  return _objectSpread(_objectSpread(_objectSpread({}, headers != undefined && {\n    headers: getEndpointHeaders(headers, endpointRuleOptions)\n  }), properties != undefined && {\n    properties: getEndpointProperties(properties, endpointRuleOptions)\n  }), {}, {\n    url: getEndpointUrl(url, endpointRuleOptions)\n  });\n};","map":{"version":3,"names":["debugId","toDebugString","evaluateConditions","getEndpointHeaders","getEndpointProperties","getEndpointUrl","evaluateEndpointRule","endpointRule","options","_options$logger","_options$logger$debug","conditions","endpoint","result","referenceRecord","endpointRuleOptions","_objectSpread","url","properties","headers","logger","debug","call","concat","undefined"],"sources":["/Users/codinggents/Documents/lambdaforge/node_modules/@smithy/util-endpoints/dist-es/utils/evaluateEndpointRule.js"],"sourcesContent":["import { debugId, toDebugString } from \"../debug\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { getEndpointHeaders } from \"./getEndpointHeaders\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nimport { getEndpointUrl } from \"./getEndpointUrl\";\nexport const evaluateEndpointRule = (endpointRule, options) => {\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    options.logger?.debug?.(`${debugId} Resolving endpoint from template: ${toDebugString(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: getEndpointHeaders(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: getEndpointProperties(properties, endpointRuleOptions),\n        }),\n        url: getEndpointUrl(url, endpointRuleOptions),\n    };\n};\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,aAAa,QAAQ,UAAU;AACjD,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAO,MAAMC,oBAAoB,GAAGA,CAACC,YAAY,EAAEC,OAAO,KAAK;EAAA,IAAAC,eAAA,EAAAC,qBAAA;EAC3D,MAAM;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAGL,YAAY;EAC7C,MAAM;IAAEM,MAAM;IAAEC;EAAgB,CAAC,GAAGZ,kBAAkB,CAACS,UAAU,EAAEH,OAAO,CAAC;EAC3E,IAAI,CAACK,MAAM,EAAE;IACT;EACJ;EACA,MAAME,mBAAmB,GAAAC,aAAA,CAAAA,aAAA,KAClBR,OAAO;IACVM,eAAe,EAAAE,aAAA,CAAAA,aAAA,KAAOR,OAAO,CAACM,eAAe,GAAKA,eAAe;EAAE,EACtE;EACD,MAAM;IAAEG,GAAG;IAAEC,UAAU;IAAEC;EAAQ,CAAC,GAAGP,QAAQ;EAC7C,CAAAH,eAAA,GAAAD,OAAO,CAACY,MAAM,cAAAX,eAAA,gBAAAC,qBAAA,GAAdD,eAAA,CAAgBY,KAAK,cAAAX,qBAAA,eAArBA,qBAAA,CAAAY,IAAA,CAAAb,eAAA,KAAAc,MAAA,CAA2BvB,OAAO,yCAAAuB,MAAA,CAAsCtB,aAAa,CAACW,QAAQ,CAAC,CAAE,CAAC;EAClG,OAAAI,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACQG,OAAO,IAAIK,SAAS,IAAI;IACxBL,OAAO,EAAEhB,kBAAkB,CAACgB,OAAO,EAAEJ,mBAAmB;EAC5D,CAAC,GACGG,UAAU,IAAIM,SAAS,IAAI;IAC3BN,UAAU,EAAEd,qBAAqB,CAACc,UAAU,EAAEH,mBAAmB;EACrE,CAAC;IACDE,GAAG,EAAEZ,cAAc,CAACY,GAAG,EAAEF,mBAAmB;EAAC;AAErD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
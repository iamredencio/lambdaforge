{"ast":null,"code":"import { HttpRequest } from \"@smithy/protocol-http\";\nimport { resolvedPath } from \"./resolve-path\";\nexport function requestBuilder(input, context) {\n  return new RequestBuilder(input, context);\n}\nexport class RequestBuilder {\n  constructor(input, context) {\n    this.input = input;\n    this.context = context;\n    this.query = {};\n    this.method = \"\";\n    this.headers = {};\n    this.path = \"\";\n    this.body = null;\n    this.hostname = \"\";\n    this.resolvePathStack = [];\n  }\n  async build() {\n    const {\n      hostname,\n      protocol = \"https\",\n      port,\n      path: basePath\n    } = await this.context.endpoint();\n    this.path = basePath;\n    for (const resolvePath of this.resolvePathStack) {\n      resolvePath(this.path);\n    }\n    return new HttpRequest({\n      protocol,\n      hostname: this.hostname || hostname,\n      port,\n      method: this.method,\n      path: this.path,\n      query: this.query,\n      body: this.body,\n      headers: this.headers\n    });\n  }\n  hn(hostname) {\n    this.hostname = hostname;\n    return this;\n  }\n  bp(uriLabel) {\n    this.resolvePathStack.push(basePath => {\n      this.path = \"\".concat(basePath !== null && basePath !== void 0 && basePath.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\") + uriLabel;\n    });\n    return this;\n  }\n  p(memberName, labelValueProvider, uriLabel, isGreedyLabel) {\n    this.resolvePathStack.push(path => {\n      this.path = resolvedPath(path, this.input, memberName, labelValueProvider, uriLabel, isGreedyLabel);\n    });\n    return this;\n  }\n  h(headers) {\n    this.headers = headers;\n    return this;\n  }\n  q(query) {\n    this.query = query;\n    return this;\n  }\n  b(body) {\n    this.body = body;\n    return this;\n  }\n  m(method) {\n    this.method = method;\n    return this;\n  }\n}","map":{"version":3,"names":["HttpRequest","resolvedPath","requestBuilder","input","context","RequestBuilder","constructor","query","method","headers","path","body","hostname","resolvePathStack","build","protocol","port","basePath","endpoint","resolvePath","hn","bp","uriLabel","push","concat","endsWith","slice","p","memberName","labelValueProvider","isGreedyLabel","h","q","b","m"],"sources":["/Users/codinggents/Documents/lambdaforge/node_modules/@smithy/core/dist-es/submodules/protocols/requestBuilder.js"],"sourcesContent":["import { HttpRequest } from \"@smithy/protocol-http\";\nimport { resolvedPath } from \"./resolve-path\";\nexport function requestBuilder(input, context) {\n    return new RequestBuilder(input, context);\n}\nexport class RequestBuilder {\n    constructor(input, context) {\n        this.input = input;\n        this.context = context;\n        this.query = {};\n        this.method = \"\";\n        this.headers = {};\n        this.path = \"\";\n        this.body = null;\n        this.hostname = \"\";\n        this.resolvePathStack = [];\n    }\n    async build() {\n        const { hostname, protocol = \"https\", port, path: basePath } = await this.context.endpoint();\n        this.path = basePath;\n        for (const resolvePath of this.resolvePathStack) {\n            resolvePath(this.path);\n        }\n        return new HttpRequest({\n            protocol,\n            hostname: this.hostname || hostname,\n            port,\n            method: this.method,\n            path: this.path,\n            query: this.query,\n            body: this.body,\n            headers: this.headers,\n        });\n    }\n    hn(hostname) {\n        this.hostname = hostname;\n        return this;\n    }\n    bp(uriLabel) {\n        this.resolvePathStack.push((basePath) => {\n            this.path = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + uriLabel;\n        });\n        return this;\n    }\n    p(memberName, labelValueProvider, uriLabel, isGreedyLabel) {\n        this.resolvePathStack.push((path) => {\n            this.path = resolvedPath(path, this.input, memberName, labelValueProvider, uriLabel, isGreedyLabel);\n        });\n        return this;\n    }\n    h(headers) {\n        this.headers = headers;\n        return this;\n    }\n    q(query) {\n        this.query = query;\n        return this;\n    }\n    b(body) {\n        this.body = body;\n        return this;\n    }\n    m(method) {\n        this.method = method;\n        return this;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
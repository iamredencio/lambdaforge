{"ast":null,"code":"import _objectSpread from\"/Users/codinggents/Documents/lambdaforge/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{BedrockRuntimeClient,InvokeModelCommand}from'@aws-sdk/client-bedrock-runtime';import{awsConfig,validateAWSConfig}from'../config/aws-config';// AWS Bedrock configuration\nconst bedrock=new BedrockRuntimeClient({region:awsConfig.bedrock.region,credentials:{accessKeyId:awsConfig.credentials.accessKeyId,secretAccessKey:awsConfig.credentials.secretAccessKey}});class AIService{constructor(){this.modelId=awsConfig.bedrock.modelId;this.maxTokens=awsConfig.bedrock.maxTokens;this.temperature=awsConfig.bedrock.temperature;this.topP=awsConfig.bedrock.topP;// Validate configuration on initialization\nthis.configValidation=validateAWSConfig();}async generateArchitectureRecommendations(formData){try{// Check if AI features are enabled and configured\nif(!awsConfig.features.enableAISuggestions){console.log('AI suggestions disabled, using fallback mode');return this.getFallbackRecommendations(formData);}// Validate AWS configuration\nif(!this.configValidation.isValid){console.warn('AWS configuration invalid:',this.configValidation.errors);if(awsConfig.features.enableFallbackMode){return this.getFallbackRecommendations(formData);}throw new Error('AWS configuration invalid: '+this.configValidation.errors.join(', '));}const prompt=this.buildArchitecturePrompt(formData);const command=new InvokeModelCommand({modelId:this.modelId,contentType:'application/json',accept:'application/json',body:JSON.stringify({anthropic_version:'bedrock-2023-05-31',max_tokens:this.maxTokens,messages:[{role:'user',content:prompt}],temperature:this.temperature,top_p:this.topP})});if(awsConfig.features.debugMode){console.log('Bedrock API call:',command);}const response=await bedrock.send(command);const responseBody=JSON.parse(new TextDecoder().decode(response.body));if(awsConfig.features.debugMode){console.log('Bedrock response:',responseBody);}return this.parseAIResponse(responseBody.content[0].text,formData);}catch(error){console.error('AI Service Error:',error);// Provide more specific error handling\nif(error.code==='AccessDenied'){throw new Error('AWS access denied. Please check your credentials and IAM permissions for Bedrock.');}else if(error.code==='ModelNotFound'){throw new Error('Claude 3 model not available in this region. Please check your AWS region.');}else if(error.code==='ThrottlingException'){throw new Error('AWS Bedrock rate limit exceeded. Please try again later.');}// Fallback to rule-based recommendations if AI fails\nif(awsConfig.features.enableFallbackMode){return this.getFallbackRecommendations(formData);}throw error;}}buildArchitecturePrompt(formData){const currentServices={infrastructure:formData.selectedInfrastructure||[],compute:formData.selectedCompute||[],integration:formData.selectedIntegration||[],security:formData.selectedSecurity||[],monitoring:formData.selectedMonitoring||[],deployment:formData.selectedDeployment||[],optimization:formData.selectedOptimization||[]};return\"You are an AWS Solutions Architect AI assistant. Analyze the following infrastructure configuration and provide specific, actionable recommendations.\\n\\nPROJECT DETAILS:\\n- Project Name: \".concat(formData.projectName||'Not specified',\"\\n- Environment: \").concat(formData.environment||'Development',\"\\n- AWS Region: \").concat(formData.awsRegion||'us-east-1',\"\\n- VPC CIDR: \").concat(formData.vpcCidrBlock||'Not specified',\"\\n\\nCURRENT SERVICES SELECTED:\\n- Infrastructure: \").concat(currentServices.infrastructure.join(', ')||'None',\"\\n- Compute: \").concat(currentServices.compute.join(', ')||'None',\"\\n- Integration: \").concat(currentServices.integration.join(', ')||'None',\"\\n- Security: \").concat(currentServices.security.join(', ')||'None',\"\\n- Monitoring: \").concat(currentServices.monitoring.join(', ')||'None',\"\\n- Deployment: \").concat(currentServices.deployment.join(', ')||'None',\"\\n- Optimization: \").concat(currentServices.optimization.join(', ')||'None',\"\\n\\nPlease provide 3-5 specific recommendations in the following JSON format:\\n{\\n  \\\"recommendations\\\": [\\n    {\\n      \\\"id\\\": \\\"unique-id\\\",\\n      \\\"type\\\": \\\"security|cost|performance|architecture|monitoring\\\",\\n      \\\"title\\\": \\\"Recommendation Title\\\",\\n      \\\"description\\\": \\\"Brief description of the recommendation\\\",\\n      \\\"impact\\\": \\\"Critical|High|Medium|Low\\\",\\n      \\\"confidence\\\": 85,\\n      \\\"savings\\\": \\\"$X/month or Risk Reduction or Operational Efficiency\\\",\\n      \\\"reasoning\\\": \\\"Why this recommendation is important\\\",\\n      \\\"recommendations\\\": [\\\"Step 1\\\", \\\"Step 2\\\", \\\"Step 3\\\"],\\n      \\\"applyData\\\": {\\n        \\\"selectedSecurity\\\": [\\\"service-to-add\\\"],\\n        \\\"selectedMonitoring\\\": [\\\"service-to-add\\\"]\\n      }\\n    }\\n  ]\\n}\\n\\nFocus on:\\n1. Security best practices and compliance\\n2. Cost optimization opportunities\\n3. Performance improvements\\n4. Serverless-first architecture when appropriate\\n5. Monitoring and observability gaps\\n6. AWS Well-Architected Framework principles\\n\\nProvide only the JSON response, no additional text.\");}parseAIResponse(aiResponse,formData){try{const parsed=JSON.parse(aiResponse);return parsed.recommendations.map(rec=>_objectSpread(_objectSpread({},rec),{},{icon:this.getIconForType(rec.type),// Ensure applyData maintains existing selections\napplyData:this.mergeApplyData(rec.applyData,formData)}));}catch(error){console.error('Failed to parse AI response:',error);return this.getFallbackRecommendations(formData);}}mergeApplyData(newData,formData){const merged={};Object.keys(newData).forEach(key=>{if(Array.isArray(newData[key])){// Merge arrays, avoiding duplicates\nconst existing=formData[key]||[];merged[key]=[...new Set([...existing,...newData[key]])];}else{merged[key]=newData[key];}});return merged;}getIconForType(type){// Return icon components based on type\nconst iconMap={security:'🛡️',cost:'💰',performance:'⚡',architecture:'🏗️',monitoring:'📊'};return iconMap[type]||'💡';}getFallbackRecommendations(formData){var _formData$selectedSec,_formData$selectedCom,_formData$selectedOpt;// Fallback rule-based recommendations if AI fails\nconst recommendations=[];// Security recommendations\nif(!((_formData$selectedSec=formData.selectedSecurity)!==null&&_formData$selectedSec!==void 0&&_formData$selectedSec.includes('waf-protection'))){recommendations.push({id:'security-waf',type:'security',title:'Enable AWS WAF Protection',description:'Add Web Application Firewall for enhanced security',impact:'High',confidence:95,savings:'Risk Reduction',reasoning:'WAF protects against common web exploits and attacks',recommendations:['Enable AWS WAF','Configure rate limiting','Set up geo-blocking'],icon:'🛡️',applyData:{selectedSecurity:[...(formData.selectedSecurity||[]),'waf-protection']}});}// Cost optimization\nif((_formData$selectedCom=formData.selectedCompute)!==null&&_formData$selectedCom!==void 0&&_formData$selectedCom.includes('ec2-instances')&&!((_formData$selectedOpt=formData.selectedOptimization)!==null&&_formData$selectedOpt!==void 0&&_formData$selectedOpt.includes('auto-scaling'))){recommendations.push({id:'cost-autoscaling',type:'cost',title:'Implement Auto Scaling',description:'Reduce costs with automatic scaling based on demand',impact:'Medium',confidence:88,savings:'$120/month',reasoning:'Auto scaling optimizes resource usage and reduces costs',recommendations:['Configure Auto Scaling Groups','Set up CloudWatch alarms','Define scaling policies'],icon:'💰',applyData:{selectedOptimization:[...(formData.selectedOptimization||[]),'auto-scaling']}});}return recommendations;}async validateRecommendation(recommendation,currentFormData){// Validate that the recommendation doesn't conflict with current setup\nconst conflicts=[];if(recommendation.applyData){Object.keys(recommendation.applyData).forEach(key=>{const newServices=recommendation.applyData[key];const currentServices=currentFormData[key]||[];// Check for any logical conflicts\nif(key==='selectedCompute'){if(newServices.includes('lambda-functions')&&currentServices.includes('ec2-instances')){conflicts.push('Mixing Lambda and EC2 may require additional configuration');}}});}return{isValid:conflicts.length===0,conflicts,recommendation};}async estimateCostImpact(recommendation,currentFormData){// Estimate the cost impact of applying this recommendation\nconst costMap={'waf-protection':35,'auto-scaling':-120,// Negative means savings\n'lambda-functions':-50,'cloudfront-cdn':25,'x-ray-tracing':22};let totalImpact=0;if(recommendation.applyData){Object.values(recommendation.applyData).flat().forEach(service=>{if(costMap[service]){totalImpact+=costMap[service];}});}return{monthlyImpact:totalImpact,yearlyImpact:totalImpact*12,description:totalImpact<0?\"Saves $\".concat(Math.abs(totalImpact),\"/month\"):\"Adds $\".concat(totalImpact,\"/month\")};}}const aiServiceInstance=new AIService();export default aiServiceInstance;","map":{"version":3,"names":["BedrockRuntimeClient","InvokeModelCommand","awsConfig","validateAWSConfig","bedrock","region","credentials","accessKeyId","secretAccessKey","AIService","constructor","modelId","maxTokens","temperature","topP","configValidation","generateArchitectureRecommendations","formData","features","enableAISuggestions","console","log","getFallbackRecommendations","isValid","warn","errors","enableFallbackMode","Error","join","prompt","buildArchitecturePrompt","command","contentType","accept","body","JSON","stringify","anthropic_version","max_tokens","messages","role","content","top_p","debugMode","response","send","responseBody","parse","TextDecoder","decode","parseAIResponse","text","error","code","currentServices","infrastructure","selectedInfrastructure","compute","selectedCompute","integration","selectedIntegration","security","selectedSecurity","monitoring","selectedMonitoring","deployment","selectedDeployment","optimization","selectedOptimization","concat","projectName","environment","awsRegion","vpcCidrBlock","aiResponse","parsed","recommendations","map","rec","_objectSpread","icon","getIconForType","type","applyData","mergeApplyData","newData","merged","Object","keys","forEach","key","Array","isArray","existing","Set","iconMap","cost","performance","architecture","_formData$selectedSec","_formData$selectedCom","_formData$selectedOpt","includes","push","id","title","description","impact","confidence","savings","reasoning","validateRecommendation","recommendation","currentFormData","conflicts","newServices","length","estimateCostImpact","costMap","totalImpact","values","flat","service","monthlyImpact","yearlyImpact","Math","abs","aiServiceInstance"],"sources":["/Users/codinggents/Documents/lambdaforge/src/services/aiService.js"],"sourcesContent":["import { BedrockRuntimeClient, InvokeModelCommand } from '@aws-sdk/client-bedrock-runtime';\nimport { awsConfig, validateAWSConfig } from '../config/aws-config';\n\n// AWS Bedrock configuration\nconst bedrock = new BedrockRuntimeClient({\n  region: awsConfig.bedrock.region,\n  credentials: {\n    accessKeyId: awsConfig.credentials.accessKeyId,\n    secretAccessKey: awsConfig.credentials.secretAccessKey\n  }\n});\n\nclass AIService {\n  constructor() {\n    this.modelId = awsConfig.bedrock.modelId;\n    this.maxTokens = awsConfig.bedrock.maxTokens;\n    this.temperature = awsConfig.bedrock.temperature;\n    this.topP = awsConfig.bedrock.topP;\n    \n    // Validate configuration on initialization\n    this.configValidation = validateAWSConfig();\n  }\n\n  async generateArchitectureRecommendations(formData) {\n    try {\n      // Check if AI features are enabled and configured\n      if (!awsConfig.features.enableAISuggestions) {\n        console.log('AI suggestions disabled, using fallback mode');\n        return this.getFallbackRecommendations(formData);\n      }\n\n      // Validate AWS configuration\n      if (!this.configValidation.isValid) {\n        console.warn('AWS configuration invalid:', this.configValidation.errors);\n        if (awsConfig.features.enableFallbackMode) {\n          return this.getFallbackRecommendations(formData);\n        }\n        throw new Error('AWS configuration invalid: ' + this.configValidation.errors.join(', '));\n      }\n\n      const prompt = this.buildArchitecturePrompt(formData);\n      \n      const command = new InvokeModelCommand({\n        modelId: this.modelId,\n        contentType: 'application/json',\n        accept: 'application/json',\n        body: JSON.stringify({\n          anthropic_version: 'bedrock-2023-05-31',\n          max_tokens: this.maxTokens,\n          messages: [\n            {\n              role: 'user',\n              content: prompt\n            }\n          ],\n          temperature: this.temperature,\n          top_p: this.topP\n        })\n      });\n\n      if (awsConfig.features.debugMode) {\n        console.log('Bedrock API call:', command);\n      }\n\n      const response = await bedrock.send(command);\n      const responseBody = JSON.parse(new TextDecoder().decode(response.body));\n      \n      if (awsConfig.features.debugMode) {\n        console.log('Bedrock response:', responseBody);\n      }\n      \n      return this.parseAIResponse(responseBody.content[0].text, formData);\n    } catch (error) {\n      console.error('AI Service Error:', error);\n      \n      // Provide more specific error handling\n      if (error.code === 'AccessDenied') {\n        throw new Error('AWS access denied. Please check your credentials and IAM permissions for Bedrock.');\n      } else if (error.code === 'ModelNotFound') {\n        throw new Error('Claude 3 model not available in this region. Please check your AWS region.');\n      } else if (error.code === 'ThrottlingException') {\n        throw new Error('AWS Bedrock rate limit exceeded. Please try again later.');\n      }\n      \n      // Fallback to rule-based recommendations if AI fails\n      if (awsConfig.features.enableFallbackMode) {\n        return this.getFallbackRecommendations(formData);\n      }\n      \n      throw error;\n    }\n  }\n\n  buildArchitecturePrompt(formData) {\n    const currentServices = {\n      infrastructure: formData.selectedInfrastructure || [],\n      compute: formData.selectedCompute || [],\n      integration: formData.selectedIntegration || [],\n      security: formData.selectedSecurity || [],\n      monitoring: formData.selectedMonitoring || [],\n      deployment: formData.selectedDeployment || [],\n      optimization: formData.selectedOptimization || []\n    };\n\n    return `You are an AWS Solutions Architect AI assistant. Analyze the following infrastructure configuration and provide specific, actionable recommendations.\n\nPROJECT DETAILS:\n- Project Name: ${formData.projectName || 'Not specified'}\n- Environment: ${formData.environment || 'Development'}\n- AWS Region: ${formData.awsRegion || 'us-east-1'}\n- VPC CIDR: ${formData.vpcCidrBlock || 'Not specified'}\n\nCURRENT SERVICES SELECTED:\n- Infrastructure: ${currentServices.infrastructure.join(', ') || 'None'}\n- Compute: ${currentServices.compute.join(', ') || 'None'}\n- Integration: ${currentServices.integration.join(', ') || 'None'}\n- Security: ${currentServices.security.join(', ') || 'None'}\n- Monitoring: ${currentServices.monitoring.join(', ') || 'None'}\n- Deployment: ${currentServices.deployment.join(', ') || 'None'}\n- Optimization: ${currentServices.optimization.join(', ') || 'None'}\n\nPlease provide 3-5 specific recommendations in the following JSON format:\n{\n  \"recommendations\": [\n    {\n      \"id\": \"unique-id\",\n      \"type\": \"security|cost|performance|architecture|monitoring\",\n      \"title\": \"Recommendation Title\",\n      \"description\": \"Brief description of the recommendation\",\n      \"impact\": \"Critical|High|Medium|Low\",\n      \"confidence\": 85,\n      \"savings\": \"$X/month or Risk Reduction or Operational Efficiency\",\n      \"reasoning\": \"Why this recommendation is important\",\n      \"recommendations\": [\"Step 1\", \"Step 2\", \"Step 3\"],\n      \"applyData\": {\n        \"selectedSecurity\": [\"service-to-add\"],\n        \"selectedMonitoring\": [\"service-to-add\"]\n      }\n    }\n  ]\n}\n\nFocus on:\n1. Security best practices and compliance\n2. Cost optimization opportunities\n3. Performance improvements\n4. Serverless-first architecture when appropriate\n5. Monitoring and observability gaps\n6. AWS Well-Architected Framework principles\n\nProvide only the JSON response, no additional text.`;\n  }\n\n  parseAIResponse(aiResponse, formData) {\n    try {\n      const parsed = JSON.parse(aiResponse);\n      return parsed.recommendations.map(rec => ({\n        ...rec,\n        icon: this.getIconForType(rec.type),\n        // Ensure applyData maintains existing selections\n        applyData: this.mergeApplyData(rec.applyData, formData)\n      }));\n    } catch (error) {\n      console.error('Failed to parse AI response:', error);\n      return this.getFallbackRecommendations(formData);\n    }\n  }\n\n  mergeApplyData(newData, formData) {\n    const merged = {};\n    \n    Object.keys(newData).forEach(key => {\n      if (Array.isArray(newData[key])) {\n        // Merge arrays, avoiding duplicates\n        const existing = formData[key] || [];\n        merged[key] = [...new Set([...existing, ...newData[key]])];\n      } else {\n        merged[key] = newData[key];\n      }\n    });\n    \n    return merged;\n  }\n\n  getIconForType(type) {\n    // Return icon components based on type\n    const iconMap = {\n      security: '🛡️',\n      cost: '💰',\n      performance: '⚡',\n      architecture: '🏗️',\n      monitoring: '📊'\n    };\n    return iconMap[type] || '💡';\n  }\n\n  getFallbackRecommendations(formData) {\n    // Fallback rule-based recommendations if AI fails\n    const recommendations = [];\n\n    // Security recommendations\n    if (!formData.selectedSecurity?.includes('waf-protection')) {\n      recommendations.push({\n        id: 'security-waf',\n        type: 'security',\n        title: 'Enable AWS WAF Protection',\n        description: 'Add Web Application Firewall for enhanced security',\n        impact: 'High',\n        confidence: 95,\n        savings: 'Risk Reduction',\n        reasoning: 'WAF protects against common web exploits and attacks',\n        recommendations: ['Enable AWS WAF', 'Configure rate limiting', 'Set up geo-blocking'],\n        icon: '🛡️',\n        applyData: {\n          selectedSecurity: [...(formData.selectedSecurity || []), 'waf-protection']\n        }\n      });\n    }\n\n    // Cost optimization\n    if (formData.selectedCompute?.includes('ec2-instances') && \n        !formData.selectedOptimization?.includes('auto-scaling')) {\n      recommendations.push({\n        id: 'cost-autoscaling',\n        type: 'cost',\n        title: 'Implement Auto Scaling',\n        description: 'Reduce costs with automatic scaling based on demand',\n        impact: 'Medium',\n        confidence: 88,\n        savings: '$120/month',\n        reasoning: 'Auto scaling optimizes resource usage and reduces costs',\n        recommendations: ['Configure Auto Scaling Groups', 'Set up CloudWatch alarms', 'Define scaling policies'],\n        icon: '💰',\n        applyData: {\n          selectedOptimization: [...(formData.selectedOptimization || []), 'auto-scaling']\n        }\n      });\n    }\n\n    return recommendations;\n  }\n\n  async validateRecommendation(recommendation, currentFormData) {\n    // Validate that the recommendation doesn't conflict with current setup\n    const conflicts = [];\n    \n    if (recommendation.applyData) {\n      Object.keys(recommendation.applyData).forEach(key => {\n        const newServices = recommendation.applyData[key];\n        const currentServices = currentFormData[key] || [];\n        \n        // Check for any logical conflicts\n        if (key === 'selectedCompute') {\n          if (newServices.includes('lambda-functions') && currentServices.includes('ec2-instances')) {\n            conflicts.push('Mixing Lambda and EC2 may require additional configuration');\n          }\n        }\n      });\n    }\n    \n    return {\n      isValid: conflicts.length === 0,\n      conflicts,\n      recommendation\n    };\n  }\n\n  async estimateCostImpact(recommendation, currentFormData) {\n    // Estimate the cost impact of applying this recommendation\n    const costMap = {\n      'waf-protection': 35,\n      'auto-scaling': -120, // Negative means savings\n      'lambda-functions': -50,\n      'cloudfront-cdn': 25,\n      'x-ray-tracing': 22\n    };\n\n    let totalImpact = 0;\n    \n    if (recommendation.applyData) {\n      Object.values(recommendation.applyData).flat().forEach(service => {\n        if (costMap[service]) {\n          totalImpact += costMap[service];\n        }\n      });\n    }\n\n    return {\n      monthlyImpact: totalImpact,\n      yearlyImpact: totalImpact * 12,\n      description: totalImpact < 0 ? `Saves $${Math.abs(totalImpact)}/month` : `Adds $${totalImpact}/month`\n    };\n  }\n}\n\nconst aiServiceInstance = new AIService();\nexport default aiServiceInstance; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
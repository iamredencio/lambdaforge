{"ast":null,"code":"var _jsxFileName = \"/Users/codinggents/Documents/lambdaforge/src/components/steps/GenerateStep.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Play, Download, Clock, DollarSign, CheckCircle, Zap, TrendingUp, Shield, Monitor, FileText, Package } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GenerateStep = ({\n  formData,\n  prevStep,\n  currentStep,\n  totalSteps\n}) => {\n  _s();\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [currentTask, setCurrentTask] = useState('');\n  const [estimatedCost, setEstimatedCost] = useState(0);\n  const [generatedResources, setGeneratedResources] = useState([]);\n  const [deploymentStatus, setDeploymentStatus] = useState('ready'); // ready, generating, completed, error\n  const [generatedFiles, setGeneratedFiles] = useState(null);\n  const [isExporting, setIsExporting] = useState(false);\n\n  // Calculate estimated monthly cost based on selections\n  useEffect(() => {\n    var _formData$selectedInf, _formData$selectedInf2, _formData$selectedInf3, _formData$selectedInf4, _formData$selectedInf5, _formData$selectedCom, _formData$selectedCom2, _formData$selectedCom3, _formData$selectedCom4, _formData$selectedInt, _formData$selectedInt2, _formData$selectedInt3, _formData$selectedInt4, _formData$selectedSec, _formData$selectedSec2, _formData$selectedSec3, _formData$selectedMon, _formData$selectedMon2, _formData$selectedMon3;\n    let cost = 0;\n\n    // Infrastructure costs\n    if ((_formData$selectedInf = formData.selectedInfrastructure) !== null && _formData$selectedInf !== void 0 && _formData$selectedInf.includes('s3-bucket')) cost += 23;\n    if ((_formData$selectedInf2 = formData.selectedInfrastructure) !== null && _formData$selectedInf2 !== void 0 && _formData$selectedInf2.includes('dynamodb')) cost += 45;\n    if ((_formData$selectedInf3 = formData.selectedInfrastructure) !== null && _formData$selectedInf3 !== void 0 && _formData$selectedInf3.includes('rds-database')) cost += 85;\n    if ((_formData$selectedInf4 = formData.selectedInfrastructure) !== null && _formData$selectedInf4 !== void 0 && _formData$selectedInf4.includes('vpc-networking')) cost += 15;\n    if ((_formData$selectedInf5 = formData.selectedInfrastructure) !== null && _formData$selectedInf5 !== void 0 && _formData$selectedInf5.includes('ebs-volumes')) cost += 30;\n\n    // Compute costs\n    if ((_formData$selectedCom = formData.selectedCompute) !== null && _formData$selectedCom !== void 0 && _formData$selectedCom.includes('lambda-functions')) cost += 12;\n    if ((_formData$selectedCom2 = formData.selectedCompute) !== null && _formData$selectedCom2 !== void 0 && _formData$selectedCom2.includes('ec2-instances')) cost += 120;\n    if ((_formData$selectedCom3 = formData.selectedCompute) !== null && _formData$selectedCom3 !== void 0 && _formData$selectedCom3.includes('ecs-containers')) cost += 95;\n    if ((_formData$selectedCom4 = formData.selectedCompute) !== null && _formData$selectedCom4 !== void 0 && _formData$selectedCom4.includes('fargate-serverless')) cost += 75;\n\n    // Integration costs\n    if ((_formData$selectedInt = formData.selectedIntegration) !== null && _formData$selectedInt !== void 0 && _formData$selectedInt.includes('api-gateway')) cost += 25;\n    if ((_formData$selectedInt2 = formData.selectedIntegration) !== null && _formData$selectedInt2 !== void 0 && _formData$selectedInt2.includes('eventbridge')) cost += 8;\n    if ((_formData$selectedInt3 = formData.selectedIntegration) !== null && _formData$selectedInt3 !== void 0 && _formData$selectedInt3.includes('step-functions')) cost += 15;\n    if ((_formData$selectedInt4 = formData.selectedIntegration) !== null && _formData$selectedInt4 !== void 0 && _formData$selectedInt4.includes('sns-notifications')) cost += 5;\n\n    // Security costs\n    if ((_formData$selectedSec = formData.selectedSecurity) !== null && _formData$selectedSec !== void 0 && _formData$selectedSec.includes('kms-encryption')) cost += 12;\n    if ((_formData$selectedSec2 = formData.selectedSecurity) !== null && _formData$selectedSec2 !== void 0 && _formData$selectedSec2.includes('secrets-manager')) cost += 8;\n    if ((_formData$selectedSec3 = formData.selectedSecurity) !== null && _formData$selectedSec3 !== void 0 && _formData$selectedSec3.includes('waf-protection')) cost += 35;\n\n    // Monitoring costs\n    if ((_formData$selectedMon = formData.selectedMonitoring) !== null && _formData$selectedMon !== void 0 && _formData$selectedMon.includes('cloudwatch')) cost += 18;\n    if ((_formData$selectedMon2 = formData.selectedMonitoring) !== null && _formData$selectedMon2 !== void 0 && _formData$selectedMon2.includes('x-ray-tracing')) cost += 22;\n    if ((_formData$selectedMon3 = formData.selectedMonitoring) !== null && _formData$selectedMon3 !== void 0 && _formData$selectedMon3.includes('cloudtrail')) cost += 10;\n    setEstimatedCost(cost);\n  }, [formData]);\n\n  // File generation functions\n  const generateCloudFormationTemplate = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    const environment = formData.environment || 'Development';\n\n    // Generate YAML format instead of JSON\n    const yamlTemplate = `AWSTemplateFormatVersion: '2010-09-09'\nDescription: '${projectName} - Generated by LambdaForge'\n\nParameters:\n  ProjectName:\n    Type: String\n    Default: ${projectName}\n    Description: Name of the project\n  Environment:\n    Type: String\n    Default: ${environment}\n    AllowedValues:\n      - Development\n      - Staging\n      - Production\n    Description: Environment type\n\nResources:\n${generateResourcesYAML()}\n\nOutputs:\n${generateOutputsYAML()}`;\n    return yamlTemplate;\n  };\n\n  // YAML generation functions for proper CloudFormation format\n  const generateResourcesYAML = () => {\n    var _formData$selectedInf6, _formData$selectedInf7, _formData$selectedCom5, _formData$selectedInt5, _formData$selectedMon4;\n    let yamlResources = '';\n\n    // Infrastructure Resources\n    if ((_formData$selectedInf6 = formData.selectedInfrastructure) !== null && _formData$selectedInf6 !== void 0 && _formData$selectedInf6.includes('s3-bucket')) {\n      yamlResources += `  # S3 Bucket with versioning and static website hosting\n  S3Bucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: !Sub '\\${ProjectName}-storage-\\${AWS::AccountId}'\n      VersioningConfiguration:\n        Status: Enabled\n      WebsiteConfiguration:\n        IndexDocument: index.html\n        ErrorDocument: error.html\n      PublicAccessBlockConfiguration:\n        BlockPublicAcls: false\n        BlockPublicPolicy: false\n        IgnorePublicAcls: false\n        RestrictPublicBuckets: false\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n  # S3 Bucket Policy for static website hosting\n  S3BucketPolicy:\n    Type: AWS::S3::BucketPolicy\n    Properties:\n      Bucket: !Ref S3Bucket\n      PolicyDocument:\n        Statement:\n          - Effect: Allow\n            Principal: '*'\n            Action: s3:GetObject\n            Resource: !Sub '\\${S3Bucket}/*'\n\n`;\n    }\n    if ((_formData$selectedInf7 = formData.selectedInfrastructure) !== null && _formData$selectedInf7 !== void 0 && _formData$selectedInf7.includes('dynamodb')) {\n      yamlResources += `  # DynamoDB Table\n  DynamoDBTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      TableName: !Sub '\\${ProjectName}-data'\n      AttributeDefinitions:\n        - AttributeName: id\n          AttributeType: S\n      KeySchema:\n        - AttributeName: id\n          KeyType: HASH\n      BillingMode: PAY_PER_REQUEST\n      PointInTimeRecoverySpecification:\n        PointInTimeRecoveryEnabled: true\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    // Compute Resources - Fixed IAM role without custom naming\n    if ((_formData$selectedCom5 = formData.selectedCompute) !== null && _formData$selectedCom5 !== void 0 && _formData$selectedCom5.includes('lambda-functions')) {\n      yamlResources += `  # Lambda Execution Role (no custom name to avoid conflicts)\n  LambdaExecutionRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service: lambda.amazonaws.com\n            Action: sts:AssumeRole\n      ManagedPolicyArns:\n        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n  # Lambda Function\n  LambdaFunction:\n    Type: AWS::Lambda::Function\n    Properties:\n      FunctionName: !Sub '\\${ProjectName}-function'\n      Runtime: nodejs18.x\n      Handler: index.handler\n      Role: !GetAtt LambdaExecutionRole.Arn\n      Code:\n        ZipFile: |\n          exports.handler = async (event) => {\n              console.log('Event:', JSON.stringify(event, null, 2));\n              \n              const response = {\n                  statusCode: 200,\n                  headers: {\n                      'Content-Type': 'application/json',\n                      'Access-Control-Allow-Origin': '*'\n                  },\n                  body: JSON.stringify({\n                      message: 'Hello from ${formData.projectName || 'LambdaForge'}!',\n                      timestamp: new Date().toISOString(),\n                      environment: process.env.ENVIRONMENT || 'Development'\n                  })\n              };\n              \n              return response;\n          };\n      Environment:\n        Variables:\n          PROJECT_NAME: !Ref ProjectName\n          ENVIRONMENT: !Ref Environment\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    // Integration Resources\n    if ((_formData$selectedInt5 = formData.selectedIntegration) !== null && _formData$selectedInt5 !== void 0 && _formData$selectedInt5.includes('api-gateway')) {\n      var _formData$selectedCom6;\n      yamlResources += `  # API Gateway\n  ApiGateway:\n    Type: AWS::ApiGateway::RestApi\n    Properties:\n      Name: !Sub '\\${ProjectName}-api'\n      Description: !Sub 'API for \\${ProjectName}'\n      EndpointConfiguration:\n        Types:\n          - REGIONAL\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n      if ((_formData$selectedCom6 = formData.selectedCompute) !== null && _formData$selectedCom6 !== void 0 && _formData$selectedCom6.includes('lambda-functions')) {\n        yamlResources += `  # API Gateway Resource\n  ApiGatewayResource:\n    Type: AWS::ApiGateway::Resource\n    Properties:\n      RestApiId: !Ref ApiGateway\n      ParentId: !GetAtt ApiGateway.RootResourceId\n      PathPart: api\n\n  # API Gateway Method\n  ApiGatewayMethod:\n    Type: AWS::ApiGateway::Method\n    Properties:\n      RestApiId: !Ref ApiGateway\n      ResourceId: !Ref ApiGatewayResource\n      HttpMethod: ANY\n      AuthorizationType: NONE\n      Integration:\n        Type: AWS_PROXY\n        IntegrationHttpMethod: POST\n        Uri: !Sub 'arn:aws:apigateway:\\${AWS::Region}:lambda:path/2015-03-31/functions/\\${LambdaFunction.Arn}/invocations'\n\n  # API Gateway Deployment\n  ApiGatewayDeployment:\n    Type: AWS::ApiGateway::Deployment\n    DependsOn:\n      - ApiGatewayMethod\n    Properties:\n      RestApiId: !Ref ApiGateway\n      StageName: !Ref Environment\n\n  # Lambda Permission for API Gateway\n  LambdaApiGatewayPermission:\n    Type: AWS::Lambda::Permission\n    Properties:\n      FunctionName: !Ref LambdaFunction\n      Action: lambda:InvokeFunction\n      Principal: apigateway.amazonaws.com\n      SourceArn: !Sub 'arn:aws:apigateway:\\${AWS::Region}::/restapis/\\${ApiGateway}/stages/\\${Environment}/*/*'\n\n`;\n      }\n    }\n\n    // Monitoring Resources\n    if ((_formData$selectedMon4 = formData.selectedMonitoring) !== null && _formData$selectedMon4 !== void 0 && _formData$selectedMon4.includes('cloudwatch')) {\n      yamlResources += `  # CloudWatch Log Group\n  LogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      LogGroupName: !Sub '/aws/lambda/\\${ProjectName}-logs'\n      RetentionInDays: 14\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n    return yamlResources || '  # No resources selected';\n  };\n  const generateOutputsYAML = () => {\n    var _formData$selectedInf8, _formData$selectedInf9, _formData$selectedCom7, _formData$selectedInt6, _formData$selectedMon5;\n    let yamlOutputs = '';\n    if ((_formData$selectedInf8 = formData.selectedInfrastructure) !== null && _formData$selectedInf8 !== void 0 && _formData$selectedInf8.includes('s3-bucket')) {\n      yamlOutputs += `  S3BucketName:\n    Description: S3 Bucket Name\n    Value: !Ref S3Bucket\n    Export:\n      Name: !Sub '\\${ProjectName}-s3-bucket'\n  S3BucketConsoleLink:\n    Description: S3 Bucket Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/s3/buckets/\\${S3Bucket}'\n  S3WebsiteURL:\n    Description: S3 Static Website URL\n    Value: !Sub 'http://\\${S3Bucket}.s3-website-\\${AWS::Region}.amazonaws.com'\n    Export:\n      Name: !Sub '\\${ProjectName}-website-url'\n\n`;\n    }\n    if ((_formData$selectedInf9 = formData.selectedInfrastructure) !== null && _formData$selectedInf9 !== void 0 && _formData$selectedInf9.includes('dynamodb')) {\n      yamlOutputs += `  DynamoDBTableName:\n    Description: DynamoDB Table Name\n    Value: !Ref DynamoDBTable\n    Export:\n      Name: !Sub '\\${ProjectName}-dynamodb-table'\n  DynamoDBConsoleLink:\n    Description: DynamoDB Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/dynamodbv2/home?region=\\${AWS::Region}#table?name=\\${DynamoDBTable}'\n\n`;\n    }\n    if ((_formData$selectedCom7 = formData.selectedCompute) !== null && _formData$selectedCom7 !== void 0 && _formData$selectedCom7.includes('lambda-functions')) {\n      yamlOutputs += `  LambdaFunctionArn:\n    Description: Lambda Function ARN\n    Value: !GetAtt LambdaFunction.Arn\n    Export:\n      Name: !Sub '\\${ProjectName}-lambda-arn'\n  LambdaConsoleLink:\n    Description: Lambda Function Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/lambda/home?region=\\${AWS::Region}#/functions/\\${LambdaFunction}'\n\n`;\n    }\n    if ((_formData$selectedInt6 = formData.selectedIntegration) !== null && _formData$selectedInt6 !== void 0 && _formData$selectedInt6.includes('api-gateway')) {\n      yamlOutputs += `  ApiEndpoint:\n    Description: API Gateway endpoint URL\n    Value: !Sub 'https://\\${ApiGateway}.execute-api.\\${AWS::Region}.amazonaws.com/\\${Environment}'\n    Export:\n      Name: !Sub '\\${ProjectName}-api-endpoint'\n  ApiGatewayConsoleLink:\n    Description: API Gateway Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/apigateway/home?region=\\${AWS::Region}#/apis/\\${ApiGateway}'\n\n`;\n    }\n    if ((_formData$selectedMon5 = formData.selectedMonitoring) !== null && _formData$selectedMon5 !== void 0 && _formData$selectedMon5.includes('cloudwatch')) {\n      yamlOutputs += `  LogGroupName:\n    Description: CloudWatch Log Group Name\n    Value: !Ref LogGroup\n    Export:\n      Name: !Sub '\\${ProjectName}-log-group'\n  CloudWatchConsoleLink:\n    Description: CloudWatch Logs Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=\\${AWS::Region}#logsV2:log-groups/log-group/\\${LogGroup}'\n\n`;\n    }\n    yamlOutputs += `  CloudFormationConsoleLink:\n    Description: CloudFormation Stack Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/cloudformation/home?region=\\${AWS::Region}#/stacks/stackinfo?stackId=\\${AWS::StackName}'\n\n  DeploymentRegion:\n    Description: AWS Region where resources are deployed\n    Value: !Ref AWS::Region\n\n`;\n    return yamlOutputs;\n  };\n\n  /* eslint-disable no-useless-escape */\n  const generateDeploymentScript = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    const environment = formData.environment || 'Development';\n    return `#!/bin/bash\n\n# ${projectName} Deployment Script\n# Generated by LambdaForge on ${new Date().toISOString()}\n\nset -e\n\n# Configuration\nPROJECT_NAME=\"${projectName}\"\nENVIRONMENT=\"${environment}\"\n# Auto-detect AWS region from AWS CLI configuration\nAWS_REGION=\\$(aws configure get region)\nif [ -z \"\\$AWS_REGION\" ]; then\n    echo \"⚠️  No default region configured. Using us-east-1\"\n    AWS_REGION=\"us-east-1\"\nfi\nSTACK_NAME=\"\\${PROJECT_NAME}-stack\"\n\n# Colors for output\nRED='\\\\033[0;31m'\nGREEN='\\\\033[0;32m'\nYELLOW='\\\\033[1;33m'\nBLUE='\\\\033[0;34m'\nNC='\\\\033[0m'\n\nprint_status() {\n    echo -e \"\\${BLUE}[INFO]\\${NC} $1\"\n}\n\nprint_success() {\n    echo -e \"\\${GREEN}[SUCCESS]\\${NC} $1\"\n}\n\nprint_error() {\n    echo -e \"\\${RED}[ERROR]\\${NC} $1\"\n}\n\nprint_warning() {\n    echo -e \"\\${YELLOW}[WARNING]\\${NC} $1\"\n}\n\n# Check prerequisites\ncheck_prerequisites() {\n    print_status \"Checking prerequisites...\"\n    \n    # Check AWS CLI\n    if ! command -v aws &> /dev/null; then\n        print_error \"AWS CLI is not installed. Please install it first.\"\n        exit 1\n    fi\n    \n    # Check AWS credentials\n    if ! aws sts get-caller-identity &> /dev/null; then\n        print_error \"AWS credentials not configured. Run 'aws configure' first.\"\n        exit 1\n    fi\n    \n    print_success \"Prerequisites check passed\"\n}\n\n# Check web application configuration\ncheck_web_app_config() {\n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ] && [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_error \"Cannot specify both local path and GitHub repo. Choose one.\"\n        exit 1\n    fi\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        if [ ! -d \"\\$WEB_APP_LOCAL_PATH\" ]; then\n            print_error \"Local web app path does not exist: \\$WEB_APP_LOCAL_PATH\"\n            exit 1\n        fi\n        print_status \"Web app source: Local folder (\\$WEB_APP_LOCAL_PATH)\"\n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Web app source: GitHub repository (\\$WEB_APP_GITHUB_REPO)\"\n    else\n        print_warning \"No web app source specified. Only AWS infrastructure will be created.\"\n        print_status \"To deploy a web app, set WEB_APP_LOCAL_PATH or WEB_APP_GITHUB_REPO in this script.\"\n    fi\n}\n\n# Build and package web application\nbuild_web_app() {\n    if [ -z \"\\$WEB_APP_LOCAL_PATH\" ] && [ -z \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Skipping web app build - no source specified\"\n        return 0\n    fi\n    \n    print_status \"Building web application...\"\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        # Build from local path (in place)\n        print_status \"Building from local path: \\$WEB_APP_LOCAL_PATH\"\n        \n        # Save current directory\n        ORIGINAL_DIR=\\$(pwd)\n        \n        # Go to the local path and build there\n        cd \"\\$WEB_APP_LOCAL_PATH\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                cd \"\\$ORIGINAL_DIR\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in \\$WEB_APP_LOCAL_PATH\"\n            cd \"\\$ORIGINAL_DIR\"\n            exit 1\n        fi\n        \n        # Return to original directory\n        cd \"\\$ORIGINAL_DIR\"\n        \n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        # Clone from GitHub to temporary directory\n        print_status \"Cloning from GitHub repository: \\$WEB_APP_GITHUB_REPO\"\n        \n        BUILD_DIR=\"\\$(mktemp -d)\"\n        print_status \"Using build directory: \\$BUILD_DIR\"\n        \n        git clone \"\\$WEB_APP_GITHUB_REPO\" \"\\$BUILD_DIR\"\n        cd \"\\$BUILD_DIR\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in cloned repository\"\n            exit 1\n        fi\n    fi\n    \n    print_success \"Web application built successfully\"\n    echo \"Built app location: \\$BUILT_APP_PATH\"\n}\n\n# Deploy web application to S3\ndeploy_web_app() {\n    if [ -z \"\\$BUILT_APP_PATH\" ]; then\n        print_status \"Skipping web app deployment - no built app\"\n        return 0\n    fi\n    \n    print_status \"Deploying web application to S3...\"\n    \n    # Get S3 bucket name from CloudFormation outputs\n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text)\n    \n    if [ -z \"\\$S3_BUCKET\" ] || [ \"\\$S3_BUCKET\" = \"None\" ]; then\n        print_warning \"No S3 bucket found in stack outputs. Skipping web app deployment.\"\n        return 0\n    fi\n    \n    print_status \"Uploading to S3 bucket: \\$S3_BUCKET\"\n    \n    # Upload files to S3\n    aws s3 sync \"\\$BUILT_APP_PATH\" \"s3://\\$S3_BUCKET\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --delete\n    \n    # Configure S3 for static website hosting\n    aws s3 website \"s3://\\$S3_BUCKET\" \\\\\n        --index-document index.html \\\\\n        --error-document error.html \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Get website URL\n    WEBSITE_URL=\"http://\\$S3_BUCKET.s3-website-\\$AWS_REGION.amazonaws.com\"\n    \n    print_success \"Web application deployed successfully!\"\n    echo \"\"\n    print_success \"🌐 Your web application is available at:\"\n    echo \"   \\$WEBSITE_URL\"\n    echo \"\"\n}\n\n# Deploy or update the CloudFormation stack\ndeploy_stack() {\n    print_status \"Checking if stack exists...\"\n    \n    if aws cloudformation describe-stacks --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" &>/dev/null; then\n        print_status \"Stack exists. Updating...\"\n        OPERATION=\"update-stack\"\n    else\n        print_status \"Stack does not exist. Creating...\"\n        OPERATION=\"create-stack\"\n    fi\n    \n    print_status \"Deploying CloudFormation stack...\"\n    print_status \"Stack Name: \\$STACK_NAME\"\n    print_status \"Region: \\$AWS_REGION\"\n    print_status \"Template: template.yaml\"\n    \n    # Deploy the stack\n    aws cloudformation \\$OPERATION \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --template-body file://template.yaml \\\\\n        --capabilities CAPABILITY_IAM \\\\\n        --region \"\\$AWS_REGION\"\n    \n    if [ \\$? -ne 0 ]; then\n        print_error \"Failed to create/update the stack\"\n        exit 1\n    fi\n    \n    print_status \"Waiting for stack operation to complete...\"\n    print_status \"This may take several minutes...\"\n    \n    # Wait for the operation to complete\n    if [ \"\\$OPERATION\" = \"create-stack\" ]; then\n        WAIT_CONDITION=\"stack-create-complete\"\n    else\n        WAIT_CONDITION=\"stack-update-complete\"\n    fi\n    \n    if aws cloudformation wait \\$WAIT_CONDITION --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\"; then\n        print_success \"Stack operation completed successfully! 🎉\"\n    else\n        print_error \"Stack operation failed or timed out\"\n        print_status \"Check the CloudFormation console for details:\"\n        echo \"https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks\"\n        exit 1\n    fi\n}\n\n# Show deployment results\nshow_results() {\n    print_success \"🎉 Deployment completed successfully!\"\n    echo \"\"\n    print_status \"📋 Resource Summary:\"\n    \n    # Get stack outputs\n    aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[*].[OutputKey,OutputValue,Description]' \\\\\n        --output table\n    \n    echo \"\"\n    print_status \"🔗 AWS Console Links:\"\n    \n    # CloudFormation Console\n    echo \"📊 CloudFormation Stack:\"\n    echo \"   https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks/stackinfo?stackId=\\$STACK_NAME\"\n    \n    # Get resource links\n    LAMBDA_FUNCTION=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`LambdaFunctionName\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    API_GATEWAY=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`ApiGatewayUrl\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    if [ -n \"\\$LAMBDA_FUNCTION\" ] && [ \"\\$LAMBDA_FUNCTION\" != \"None\" ]; then\n        echo \"⚡ Lambda Function:\"\n        echo \"   https://\\$AWS_REGION.console.aws.amazon.com/lambda/home?region=\\$AWS_REGION#/functions/\\$LAMBDA_FUNCTION\"\n    fi\n    \n    if [ -n \"\\$API_GATEWAY\" ] && [ \"\\$API_GATEWAY\" != \"None\" ]; then\n        echo \"🌐 API Gateway:\"\n        echo \"   \\$API_GATEWAY\"\n    fi\n    \n    if [ -n \"\\$S3_BUCKET\" ] && [ \"\\$S3_BUCKET\" != \"None\" ]; then\n        echo \"🪣 S3 Bucket:\"\n        echo \"   https://s3.console.aws.amazon.com/s3/buckets/\\$S3_BUCKET?region=\\$AWS_REGION\"\n    fi\n    \n    echo \"\"\n    print_status \"💡 Next Steps:\"\n    echo \"  • Test your deployed resources using the links above\"\n    echo \"  • Monitor logs in CloudWatch\"\n    echo \"  • Use delete.sh to clean up resources when done\"\n    echo \"\"\n}\n\n# Main deployment function\nmain() {\n    echo \"\"\n    echo \"======================================\"\n    echo \"🚀 ${projectName} Deployment\"\n    echo \"======================================\"\n    echo \"Project: \\$PROJECT_NAME\"\n    echo \"Region: \\$AWS_REGION\"\n    echo \"\"\n    \n    check_prerequisites\n    check_web_app_config\n    build_web_app\n    deploy_stack\n    deploy_web_app\n    show_results\n}\n\n# Run with error handling\nif [ \"\\${BASH_SOURCE[0]}\" == \"\\${0}\" ]; then\n    main \"$@\"\nfi\n`;\n  };\n\n  /* eslint-disable no-useless-escape */\n  const generateDeleteScript = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    return `#!/bin/bash\n\n# ${projectName} Resource Cleanup Script\n# Generated by LambdaForge on ${new Date().toISOString()}\n# ⚠️  WARNING: This script will DELETE all resources created by the deployment!\n\nset -e\n\n# Configuration\nPROJECT_NAME=\"${projectName}\"\n# Auto-detect AWS region from AWS CLI configuration\nAWS_REGION=\\$(aws configure get region)\nif [ -z \"\\$AWS_REGION\" ]; then\n    echo \"⚠️  No default region configured. Using us-east-1\"\n    AWS_REGION=\"us-east-1\"\nfi\nSTACK_NAME=\"\\${PROJECT_NAME}-stack\"\n\n# Web Application Deployment Configuration\n# Set one of these to deploy the actual web application:\n# WEB_APP_LOCAL_PATH=\"/path/to/your/web/app\"          # Local folder path\n# WEB_APP_GITHUB_REPO=\"https://github.com/user/repo\" # GitHub repository URL\nWEB_APP_LOCAL_PATH=\"\"\nWEB_APP_GITHUB_REPO=\"\"\n\n# Colors for output\nRED='\\\\033[0;31m'\nGREEN='\\\\033[0;32m'\nYELLOW='\\\\033[1;33m'\nBLUE='\\\\033[0;34m'\nNC='\\\\033[0m' # No Color\n\n# Print functions\nprint_status() {\n    echo -e \"\\${BLUE}ℹ️  \\$1\\${NC}\"\n}\n\nprint_success() {\n    echo -e \"\\${GREEN}✅ \\$1\\${NC}\"\n}\n\nprint_warning() {\n    echo -e \"\\${YELLOW}⚠️  \\$1\\${NC}\"\n}\n\nprint_error() {\n    echo -e \"\\${RED}❌ \\$1\\${NC}\"\n}\n\n# Check prerequisites\ncheck_prerequisites() {\n    print_status \"Checking prerequisites...\"\n    \n    # Check AWS CLI\n    if ! command -v aws &> /dev/null; then\n        print_error \"AWS CLI is not installed. Please install it first.\"\n        exit 1\n    fi\n    \n    # Check AWS credentials\n    if ! aws sts get-caller-identity &> /dev/null; then\n        print_error \"AWS credentials not configured. Run 'aws configure' first.\"\n        exit 1\n    fi\n    \n    print_success \"Prerequisites check passed\"\n}\n\n# Check web application configuration\ncheck_web_app_config() {\n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ] && [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_error \"Cannot specify both local path and GitHub repo. Choose one.\"\n        exit 1\n    fi\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        if [ ! -d \"\\$WEB_APP_LOCAL_PATH\" ]; then\n            print_error \"Local web app path does not exist: \\$WEB_APP_LOCAL_PATH\"\n            exit 1\n        fi\n        print_status \"Web app source: Local folder (\\$WEB_APP_LOCAL_PATH)\"\n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Web app source: GitHub repository (\\$WEB_APP_GITHUB_REPO)\"\n    else\n        print_warning \"No web app source specified. Only AWS infrastructure will be created.\"\n        print_status \"To deploy a web app, set WEB_APP_LOCAL_PATH or WEB_APP_GITHUB_REPO in this script.\"\n    fi\n}\n\n# Build and package web application\nbuild_web_app() {\n    if [ -z \"\\$WEB_APP_LOCAL_PATH\" ] && [ -z \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Skipping web app build - no source specified\"\n        return 0\n    fi\n    \n    print_status \"Building web application...\"\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        # Build from local path (in place)\n        print_status \"Building from local path: \\$WEB_APP_LOCAL_PATH\"\n        \n        # Save current directory\n        ORIGINAL_DIR=\\$(pwd)\n        \n        # Go to the local path and build there\n        cd \"\\$WEB_APP_LOCAL_PATH\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                cd \"\\$ORIGINAL_DIR\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in \\$WEB_APP_LOCAL_PATH\"\n            cd \"\\$ORIGINAL_DIR\"\n            exit 1\n        fi\n        \n        # Return to original directory\n        cd \"\\$ORIGINAL_DIR\"\n        \n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        # Clone from GitHub to temporary directory\n        print_status \"Cloning from GitHub repository: \\$WEB_APP_GITHUB_REPO\"\n        \n        BUILD_DIR=\"\\$(mktemp -d)\"\n        print_status \"Using build directory: \\$BUILD_DIR\"\n        \n        git clone \"\\$WEB_APP_GITHUB_REPO\" \"\\$BUILD_DIR\"\n        cd \"\\$BUILD_DIR\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in cloned repository\"\n            exit 1\n        fi\n    fi\n    \n    print_success \"Web application built successfully\"\n    echo \"Built app location: \\$BUILT_APP_PATH\"\n}\n\n# Deploy web application to S3\ndeploy_web_app() {\n    if [ -z \"\\$BUILT_APP_PATH\" ]; then\n        print_status \"Skipping web app deployment - no built app\"\n        return 0\n    fi\n    \n    print_status \"Deploying web application to S3...\"\n    \n    # Get S3 bucket name from CloudFormation outputs\n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text)\n    \n    if [ -z \"\\$S3_BUCKET\" ] || [ \"\\$S3_BUCKET\" = \"None\" ]; then\n        print_warning \"No S3 bucket found in stack outputs. Skipping web app deployment.\"\n        return 0\n    fi\n    \n    print_status \"Uploading to S3 bucket: \\$S3_BUCKET\"\n    \n    # Upload files to S3\n    aws s3 sync \"\\$BUILT_APP_PATH\" \"s3://\\$S3_BUCKET\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --delete\n    \n    # Configure S3 for static website hosting\n    aws s3 website \"s3://\\$S3_BUCKET\" \\\\\n        --index-document index.html \\\\\n        --error-document error.html \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Get website URL\n    WEBSITE_URL=\"http://\\$S3_BUCKET.s3-website-\\$AWS_REGION.amazonaws.com\"\n    \n    print_success \"Web application deployed successfully!\"\n    echo \"\"\n    print_success \"🌐 Your web application is available at:\"\n    echo \"   \\$WEBSITE_URL\"\n    echo \"\"\n}\n\n# Deploy or update the CloudFormation stack\ndeploy_stack() {\n    print_status \"Checking if stack exists...\"\n    \n    if aws cloudformation describe-stacks --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" &>/dev/null; then\n        print_status \"Stack exists. Updating...\"\n        OPERATION=\"update-stack\"\n    else\n        print_status \"Stack does not exist. Creating...\"\n        OPERATION=\"create-stack\"\n    fi\n    \n    print_status \"Deploying CloudFormation stack...\"\n    print_status \"Stack Name: \\$STACK_NAME\"\n    print_status \"Region: \\$AWS_REGION\"\n    print_status \"Template: template.yaml\"\n    \n    # Deploy the stack\n    aws cloudformation \\$OPERATION \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --template-body file://template.yaml \\\\\n        --capabilities CAPABILITY_IAM \\\\\n        --region \"\\$AWS_REGION\"\n    \n    if [ \\$? -ne 0 ]; then\n        print_error \"Failed to create/update the stack\"\n        exit 1\n    fi\n    \n    print_status \"Waiting for stack operation to complete...\"\n    print_status \"This may take several minutes...\"\n    \n    # Wait for the operation to complete\n    if [ \"\\$OPERATION\" = \"create-stack\" ]; then\n        WAIT_CONDITION=\"stack-create-complete\"\n    else\n        WAIT_CONDITION=\"stack-update-complete\"\n    fi\n    \n    if aws cloudformation wait \\$WAIT_CONDITION --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\"; then\n        print_success \"Stack operation completed successfully! 🎉\"\n    else\n        print_error \"Stack operation failed or timed out\"\n        print_status \"Check the CloudFormation console for details:\"\n        echo \"https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks\"\n        exit 1\n    fi\n}\n\n# Show deployment results\nshow_results() {\n    print_success \"🎉 Deployment completed successfully!\"\n    echo \"\"\n    print_status \"📋 Resource Summary:\"\n    \n    # Get stack outputs\n    aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[*].[OutputKey,OutputValue,Description]' \\\\\n        --output table\n    \n    echo \"\"\n    print_status \"🔗 AWS Console Links:\"\n    \n    # CloudFormation Console\n    echo \"📊 CloudFormation Stack:\"\n    echo \"   https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks/stackinfo?stackId=\\$STACK_NAME\"\n    \n    # Get resource links\n    LAMBDA_FUNCTION=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`LambdaFunctionName\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    API_GATEWAY=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`ApiGatewayUrl\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    if [ -n \"\\$LAMBDA_FUNCTION\" ] && [ \"\\$LAMBDA_FUNCTION\" != \"None\" ]; then\n        echo \"⚡ Lambda Function:\"\n        echo \"   https://\\$AWS_REGION.console.aws.amazon.com/lambda/home?region=\\$AWS_REGION#/functions/\\$LAMBDA_FUNCTION\"\n    fi\n    \n    if [ -n \"\\$API_GATEWAY\" ] && [ \"\\$API_GATEWAY\" != \"None\" ]; then\n        echo \"🌐 API Gateway:\"\n        echo \"   \\$API_GATEWAY\"\n    fi\n    \n    if [ -n \"\\$S3_BUCKET\" ] && [ \"\\$S3_BUCKET\" != \"None\" ]; then\n        echo \"🪣 S3 Bucket:\"\n        echo \"   https://s3.console.aws.amazon.com/s3/buckets/\\$S3_BUCKET?region=\\$AWS_REGION\"\n    fi\n    \n    echo \"\"\n    print_status \"💡 Next Steps:\"\n    echo \"  • Test your deployed resources using the links above\"\n    echo \"  • Monitor logs in CloudWatch\"\n    echo \"  • Use delete.sh to clean up resources when done\"\n    echo \"\"\n}\n\n# Main deployment function\nmain() {\n    echo \"\"\n    echo \"======================================\"\n    echo \"🚀 ${projectName} Deployment\"\n    echo \"======================================\"\n    echo \"Project: \\$PROJECT_NAME\"\n    echo \"Region: \\$AWS_REGION\"\n    echo \"\"\n    \n    check_prerequisites\n    check_web_app_config\n    build_web_app\n    deploy_stack\n    deploy_web_app\n    show_results\n}\n\n# Run with error handling\nif [ \"\\${BASH_SOURCE[0]}\" == \"\\${0}\" ]; then\n    main \"$@\"\nfi\n`;\n  };\n  /* eslint-enable no-useless-escape */\n\n  const generateReadme = () => {\n    var _formData$selectedInf0, _formData$selectedCom8, _formData$selectedInt7, _formData$selectedSec4, _formData$selectedMon6;\n    const projectName = formData.projectName || 'LambdaForge Project';\n    const environment = formData.environment || 'Development';\n    return `# ${projectName}\n\nGenerated by **LambdaForge** - AWS Infrastructure Automation Platform\n\n## Overview\n\nThis project contains the infrastructure and deployment configuration for **${projectName}**.\n\n- **Environment:** ${environment}\n- **AWS Region:** Auto-detected from AWS CLI configuration\n- **Generated:** ${new Date().toISOString()}\n\n## Architecture\n\n### Selected AWS Services\n\n#### Infrastructure Services\n${((_formData$selectedInf0 = formData.selectedInfrastructure) === null || _formData$selectedInf0 === void 0 ? void 0 : _formData$selectedInf0.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n')) || '- None selected'}\n\n#### Compute Services\n${((_formData$selectedCom8 = formData.selectedCompute) === null || _formData$selectedCom8 === void 0 ? void 0 : _formData$selectedCom8.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n')) || '- None selected'}\n\n#### Integration Services\n${((_formData$selectedInt7 = formData.selectedIntegration) === null || _formData$selectedInt7 === void 0 ? void 0 : _formData$selectedInt7.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n')) || '- None selected'}\n\n#### Security Services\n${((_formData$selectedSec4 = formData.selectedSecurity) === null || _formData$selectedSec4 === void 0 ? void 0 : _formData$selectedSec4.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n')) || '- None selected'}\n\n#### Monitoring Services\n${((_formData$selectedMon6 = formData.selectedMonitoring) === null || _formData$selectedMon6 === void 0 ? void 0 : _formData$selectedMon6.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n')) || '- None selected'}\n\n## 🚨 CRITICAL REQUIREMENTS\n\n### ⚠️ IAM Permissions Required\n\n**URGENT**: You must have the following IAM permissions or deployment will fail:\n\n- \\`iam:CreateRole\\` - Required for Lambda execution roles\n- \\`iam:AttachRolePolicy\\` - Required for role policy attachment\n- \\`iam:PassRole\\` - Required for Lambda function creation\n- \\`cloudformation:*\\` - Required for stack operations\n- \\`lambda:*\\` - Required for Lambda function management\n- \\`s3:*\\` - Required for S3 bucket operations\n- \\`apigateway:*\\` - Required for API Gateway (if selected)\n- \\`logs:*\\` - Required for CloudWatch logs\n\n**Common Error Without Proper Permissions:**\n\\`\\`\\`\nUser: arn:aws:iam::ACCOUNT:user/USERNAME is not authorized to perform: iam:CreateRole\n\\`\\`\\`\n\n### 🌍 AWS Region Configuration\n\n**CRITICAL**: Your AWS CLI region must match your intended deployment region.\n\n**Check your current region:**\n\\`\\`\\`bash\naws configure get region\n\\`\\`\\`\n\n**Common Error with Region Mismatch:**\n\\`\\`\\`\nCould not connect to the endpoint URL: \"https://cloudformation.us-east-1.amazonaws.com/\"\n\\`\\`\\`\n\n**Set your region if needed:**\n\\`\\`\\`bash\naws configure set region YOUR_PREFERRED_REGION\n\\`\\`\\`\n\n## Quick Start\n\n### Prerequisites\n\n- ✅ AWS CLI installed and configured\n- ✅ **CRITICAL**: Appropriate IAM permissions (see above)\n- ✅ **CRITICAL**: Correct AWS region configured\n- ✅ Bash shell (for deployment script)\n\n### Deployment\n\n\\`\\`\\`bash\n# 1. Extract the zip file\nunzip ${projectName || 'project'}-infrastructure.zip\ncd ${projectName || 'project'}-infrastructure/\n\n# 2. Make scripts executable\nchmod +x deploy.sh\nchmod +x delete.sh\n\n# 3. Verify your AWS configuration\naws sts get-caller-identity\naws configure get region\n\n# 4. (Optional) Configure web application deployment\n# Edit deploy.sh and set either:\n# WEB_APP_LOCAL_PATH=\"/path/to/your/web/app\"          # For local folder\n# WEB_APP_GITHUB_REPO=\"https://github.com/user/repo\" # For GitHub repo\n\n# 5. Run deployment\n./deploy.sh\n\\`\\`\\`\n\n### Web Application Deployment Options\n\n#### Option 1: Deploy from Local Folder\n\\`\\`\\`bash\n# Edit deploy.sh and set:\nWEB_APP_LOCAL_PATH=\"/path/to/your/react/app\"\n\\`\\`\\`\n\n#### Option 2: Deploy from GitHub Repository\n\\`\\`\\`bash\n# Edit deploy.sh and set:\nWEB_APP_GITHUB_REPO=\"https://github.com/yourusername/your-repo\"\n\\`\\`\\`\n\n#### Option 3: Infrastructure Only (Default)\nIf neither path is set, only AWS infrastructure will be created without deploying a web application.\n\n### Example: Deploy LambdaForge Application\n\nTo deploy the LambdaForge application itself:\n\n\\`\\`\\`bash\n# From GitHub (public repository):\nWEB_APP_GITHUB_REPO=\"https://github.com/your-username/lambdaforge\"\n\n# Or from local development:\nWEB_APP_LOCAL_PATH=\"/Users/yourusername/Documents/lambdaforge\"\n\\`\\`\\`\n\nAfter deployment, your LambdaForge app will be available at the S3 website URL provided in the outputs.\n\n### Cleanup (Delete All Resources)\n\n\\`\\`\\`bash\n# ⚠️ WARNING: This will DELETE all created resources!\n./delete.sh\n\\`\\`\\`\n\n## Cost Estimation\n\nBased on your selected services, the estimated monthly cost is **$${estimatedCost}**.\n\n## AWS Console Links\n\nAfter deployment, the script will provide direct links to all created resources.\n\nGeneral AWS Console links:\n- [CloudFormation Stacks](https://console.aws.amazon.com/cloudformation/)\n- [Lambda Functions](https://console.aws.amazon.com/lambda/)\n- [S3 Buckets](https://console.aws.amazon.com/s3/)\n- [Cost Explorer](https://console.aws.amazon.com/cost-management/home#/cost-explorer)\n\n## 🔧 Troubleshooting\n\n### Common Deployment Errors\n\n#### Error: \"User is not authorized to perform: iam:CreateRole\"\n**Cause**: Missing IAM permissions\n**Solution**: Contact your AWS administrator to grant the required permissions listed above\n\n#### Error: \"Could not connect to the endpoint URL\"\n**Cause**: Region mismatch between AWS CLI and CloudFormation endpoint\n**Solution**: \n\\`\\`\\`bash\naws configure set region YOUR_CORRECT_REGION\n\\`\\`\\`\n\n#### Error: \"Stack already exists\"\n**Cause**: Previous deployment with same project name\n**Solution**: Either use a different project name or delete the existing stack:\n\\`\\`\\`bash\n./delete.sh\n\\`\\`\\`\n\n#### Error: \"Template format error\"\n**Cause**: Using old JSON template format\n**Solution**: Use the new template.yaml generated by this version (proper YAML format)\n\n### Getting Help\n\nIf you encounter issues:\n1. Check the CloudFormation console for detailed error messages\n2. Verify your AWS CLI configuration: \\`aws configure list\\`\n3. Ensure you have the required IAM permissions\n4. Check that you're in the correct AWS region\n\n## Files Included\n\n- \\`template.yaml\\` - Fixed CloudFormation template (proper YAML format)\n- \\`deploy.sh\\` - Enhanced deployment script with region auto-detection\n- \\`delete.sh\\` - Resource cleanup script (⚠️ DELETES all resources!)\n- \\`README.md\\` - This comprehensive documentation file\n\n### File Descriptions\n\n#### \\`template.yaml\\`\n- Proper YAML CloudFormation format (not JSON)\n- Auto-detects AWS region and account ID\n- Includes console links for all resources\n- Fixed IAM role naming to avoid conflicts\n\n#### \\`deploy.sh\\`\n- Auto-detects your AWS CLI region configuration\n- Validates prerequisites before deployment\n- Provides direct links to all created resources\n- Enhanced error handling and colored output\n\n#### \\`delete.sh\\` ⚠️\n- **DANGER**: Permanently deletes ALL created resources\n- Shows resources before deletion for confirmation\n- Requires typing 'DELETE' to confirm\n- Use when you want to clean up and stop AWS charges\n\n---\n\n**Generated by LambdaForge** - Making AWS deployment simple and automated.\n`;\n  };\n\n  // Create and download zip file\n  const downloadZipFile = async (files, projectName) => {\n    // Dynamically import JSZip\n    const JSZip = (await import('jszip')).default;\n    const zip = new JSZip();\n\n    // Add all files to zip\n    Object.entries(files).forEach(([filename, content]) => {\n      zip.file(filename, content);\n    });\n\n    // Generate zip file\n    const zipBlob = await zip.generateAsync({\n      type: 'blob'\n    });\n\n    // Download zip file\n    const element = document.createElement('a');\n    element.href = URL.createObjectURL(zipBlob);\n    element.download = `${projectName}-infrastructure.zip`;\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n    URL.revokeObjectURL(element.href);\n  };\n\n  // Export Configuration function - makes the button functional!\n  const exportConfiguration = async () => {\n    setIsExporting(true);\n    try {\n      const projectName = formData.projectName || 'lambdaforge-project';\n\n      // Generate all files\n      const files = {\n        'template.yaml': generateCloudFormationTemplate(),\n        'deploy.sh': generateDeploymentScript(),\n        'delete.sh': generateDeleteScript(),\n        'README.md': generateReadme()\n      };\n      setGeneratedFiles(files);\n\n      // Download as zip file\n      await downloadZipFile(files, projectName);\n\n      // Show success message\n      setTimeout(() => {\n        alert(`✅ Successfully exported ${projectName}-infrastructure.zip!\\n\\n📦 Package contains:\\n${Object.keys(files).map(filename => `• ${filename}`).join('\\n')}\\n\\n🚀 Next steps:\\n1. Extract the zip file\\n2. Run: chmod +x deploy.sh delete.sh\\n3. Verify AWS permissions and region\\n4. Run: ./deploy.sh\\n\\n✨ Features included:\\n• Auto-detects your AWS region\\n• Provides direct links to all created resources\\n• Fixed IAM role naming issues\\n• Proper YAML CloudFormation format\\n• Resource cleanup script (delete.sh)\\n• Comprehensive error handling`);\n      }, 1000);\n    } catch (error) {\n      console.error('Export failed:', error);\n      alert('❌ Export failed. Please try again.');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n  const simulateDeployment = async () => {\n    setIsGenerating(true);\n    setDeploymentStatus('generating');\n    setProgress(0);\n    setGeneratedResources([]);\n    const tasks = [{\n      name: 'Validating AWS credentials',\n      duration: 800\n    }, {\n      name: 'Analyzing infrastructure requirements',\n      duration: 1200\n    }, {\n      name: 'Generating CloudFormation templates',\n      duration: 1500\n    }, {\n      name: 'Creating deployment scripts',\n      duration: 1000\n    }, {\n      name: 'Creating resource cleanup scripts',\n      duration: 800\n    }, {\n      name: 'Generating documentation',\n      duration: 800\n    }, {\n      name: 'Validating template syntax',\n      duration: 1000\n    }, {\n      name: 'Preparing deployment package',\n      duration: 700\n    }];\n    let totalProgress = 0;\n    const progressStep = 100 / tasks.length;\n    for (let i = 0; i < tasks.length; i++) {\n      setCurrentTask(tasks[i].name);\n      await new Promise(resolve => setTimeout(resolve, tasks[i].duration));\n      totalProgress += progressStep;\n      setProgress(Math.round(totalProgress));\n\n      // Add generated resources as we progress\n      if (i === 2) {\n        // After CloudFormation generation\n        setGeneratedResources(prev => [...prev, {\n          name: 'CloudFormation Template',\n          id: 'template.yaml',\n          status: 'generated',\n          type: 'infrastructure'\n        }]);\n      }\n      if (i === 3) {\n        // After deployment script\n        setGeneratedResources(prev => [...prev, {\n          name: 'Deployment Script',\n          id: 'deploy.sh',\n          status: 'generated',\n          type: 'automation'\n        }]);\n      }\n      if (i === 4) {\n        // After generating cleanup script\n        setGeneratedResources(prev => [...prev, {\n          name: 'Resource Cleanup Script',\n          id: 'delete.sh',\n          status: 'generated',\n          type: 'automation'\n        }]);\n      }\n      if (i === 5) {\n        // After documentation\n        setGeneratedResources(prev => [...prev, {\n          name: 'README Documentation',\n          id: 'README.md',\n          status: 'generated',\n          type: 'documentation'\n        }]);\n      }\n    }\n\n    // Generate all files automatically\n    const files = {\n      'template.yaml': generateCloudFormationTemplate(),\n      'deploy.sh': generateDeploymentScript(),\n      'delete.sh': generateDeleteScript(),\n      'README.md': generateReadme()\n    };\n    setGeneratedFiles(files);\n    setCurrentTask('All deployment files generated successfully!');\n    setDeploymentStatus('completed');\n    setIsGenerating(false);\n  };\n  const getServiceCounts = () => {\n    var _formData$selectedInf1, _formData$selectedCom9, _formData$selectedInt8, _formData$selectedSec5, _formData$selectedMon7, _formData$selectedDep, _formData$selectedOpt;\n    return {\n      infrastructure: ((_formData$selectedInf1 = formData.selectedInfrastructure) === null || _formData$selectedInf1 === void 0 ? void 0 : _formData$selectedInf1.length) || 0,\n      compute: ((_formData$selectedCom9 = formData.selectedCompute) === null || _formData$selectedCom9 === void 0 ? void 0 : _formData$selectedCom9.length) || 0,\n      integration: ((_formData$selectedInt8 = formData.selectedIntegration) === null || _formData$selectedInt8 === void 0 ? void 0 : _formData$selectedInt8.length) || 0,\n      security: ((_formData$selectedSec5 = formData.selectedSecurity) === null || _formData$selectedSec5 === void 0 ? void 0 : _formData$selectedSec5.length) || 0,\n      monitoring: ((_formData$selectedMon7 = formData.selectedMonitoring) === null || _formData$selectedMon7 === void 0 ? void 0 : _formData$selectedMon7.length) || 0,\n      deployment: ((_formData$selectedDep = formData.selectedDeployment) === null || _formData$selectedDep === void 0 ? void 0 : _formData$selectedDep.length) || 0,\n      optimization: ((_formData$selectedOpt = formData.selectedOptimization) === null || _formData$selectedOpt === void 0 ? void 0 : _formData$selectedOpt.length) || 0\n    };\n  };\n  const serviceCounts = getServiceCounts();\n  const totalServices = Object.values(serviceCounts).reduce((a, b) => a + b, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-aws-blue mb-2\",\n        children: \"Generate Infrastructure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-aws-gray-600\",\n        children: \"Review your configuration and deploy your Lambda-powered infrastructure automation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1450,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:col-span-2 space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-aws-gray-50 border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Zap, {\n              className: \"w-5 h-5 mr-2 text-aws-orange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1462,\n              columnNumber: 15\n            }, this), \"Configuration Summary\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 md:grid-cols-4 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-aws-blue\",\n                children: serviceCounts.infrastructure\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1467,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Infrastructure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1468,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1466,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-green-600\",\n                children: serviceCounts.compute\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Compute\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1472,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1470,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-purple-600\",\n                children: serviceCounts.security\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1475,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Security\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1476,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1474,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-aws-orange\",\n                children: totalServices\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1479,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Total Services\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1480,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1478,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1465,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1460,\n          columnNumber: 11\n        }, this), isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Clock, {\n              className: \"w-5 h-5 mr-2 text-aws-orange animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1489,\n              columnNumber: 17\n            }, this), \"Deployment Progress\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1488,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium text-aws-gray-700\",\n                children: currentTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1494,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-bold text-aws-blue\",\n                children: [progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1495,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1493,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full bg-aws-gray-200 rounded-full h-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gradient-to-r from-aws-orange to-green-500 h-3 rounded-full transition-all duration-500\",\n                style: {\n                  width: `${progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1498,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1497,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1492,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1487,\n          columnNumber: 13\n        }, this), generatedResources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"w-5 h-5 mr-2 text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1511,\n              columnNumber: 17\n            }, this), \"Generated Resources\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1510,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: generatedResources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-2 h-2 bg-green-500 rounded-full\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1518,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-medium text-aws-blue\",\n                    children: resource.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1520,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-aws-gray-600\",\n                    children: resource.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1521,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1519,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1517,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"px-2 py-1 bg-green-100 text-green-800 text-xs font-medium rounded\",\n                children: resource.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1524,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1516,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1514,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1509,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n              className: \"w-5 h-5 mr-2 text-green-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1539,\n              columnNumber: 15\n            }, this), \"Cost Estimate\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1538,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-3xl font-bold text-green-600\",\n              children: [\"$\", estimatedCost]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1543,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-aws-gray-600\",\n              children: \"per month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1544,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1542,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-sm text-blue-800\",\n              children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n                className: \"w-4 h-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1548,\n                columnNumber: 17\n              }, this), \"Auto-scaling enabled for cost optimization\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1547,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1546,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4\",\n            children: \"Project Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1556,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1559,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-aws-blue\",\n                children: formData.projectName || 'Unnamed Project'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1560,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Environment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1563,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-aws-blue\",\n                children: formData.environment || 'Development'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1564,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1562,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"AWS Region\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1567,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-aws-blue\",\n                children: formData.awsRegion || 'us-east-1'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1568,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1566,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1557,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1555,\n          columnNumber: 11\n        }, this), deploymentStatus === 'completed' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-aws-gray-200 rounded-lg p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-aws-blue mb-4 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Monitor, {\n              className: \"w-5 h-5 mr-2 text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1577,\n              columnNumber: 17\n            }, this), \"Health Status\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1576,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Infrastructure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1582,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flex items-center text-green-600\",\n                children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                  className: \"w-4 h-4 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1584,\n                  columnNumber: 21\n                }, this), \"Healthy\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1583,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1581,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Security\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1589,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flex items-center text-green-600\",\n                children: [/*#__PURE__*/_jsxDEV(Shield, {\n                  className: \"w-4 h-4 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1591,\n                  columnNumber: 21\n                }, this), \"Secure\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1590,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1588,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-aws-gray-600\",\n                children: \"Performance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1596,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flex items-center text-green-600\",\n                children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n                  className: \"w-4 h-4 mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1598,\n                  columnNumber: 21\n                }, this), \"Optimal\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1597,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1595,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1580,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1575,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1535,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1456,\n      columnNumber: 7\n    }, this), generatedFiles && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-50 border border-blue-200 rounded-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-blue-800 mb-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Package, {\n          className: \"w-5 h-5 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1612,\n          columnNumber: 13\n        }, this), \"Generated Deployment Package\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1611,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\",\n        children: Object.entries(generatedFiles).map(([filename, content]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border border-blue-200 rounded-lg p-3 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"w-8 h-8 text-blue-600 mx-auto mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1618,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-blue-800 text-sm\",\n            children: filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1619,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-blue-600\",\n            children: [Math.round(content.length / 1024), \"KB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1620,\n            columnNumber: 17\n          }, this)]\n        }, filename, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1617,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1615,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-blue-700\",\n        children: \"All files have been generated and downloaded. Extract them to a directory and run the deployment script.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1624,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1610,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col sm:flex-row gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: simulateDeployment,\n        disabled: isGenerating || deploymentStatus === 'completed',\n        className: `flex-1 flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all duration-200 ${isGenerating || deploymentStatus === 'completed' ? 'bg-aws-gray-300 text-aws-gray-500 cursor-not-allowed' : 'bg-aws-orange text-white hover:bg-aws-orange-dark shadow-lg hover:shadow-xl'}`,\n        children: isGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"w-5 h-5 animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1643,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Deploying Infrastructure...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1644,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : deploymentStatus === 'completed' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1648,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Deployment Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1649,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Play, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1653,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Deploy Infrastructure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1654,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1632,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportConfiguration,\n        disabled: isExporting,\n        className: `flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all duration-200 ${isExporting ? 'bg-aws-gray-300 text-aws-gray-500 cursor-not-allowed' : 'bg-green-600 text-white hover:bg-green-700 shadow-lg hover:shadow-xl'}`,\n        children: isExporting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"w-5 h-5 animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1670,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Exporting...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1671,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Download, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1675,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Export Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1676,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1659,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1631,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between pt-6 border-t border-aws-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevStep,\n        className: \"flex items-center space-x-2 text-aws-gray-600 hover:text-aws-blue transition-colors duration-200\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2190 BACK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1688,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1684,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-aws-gray-500\",\n        children: [\"Step \", currentStep, \" of \", totalSteps, \" - Ready to deploy! \\uD83D\\uDE80\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1690,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1683,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1446,\n    columnNumber: 5\n  }, this);\n};\n_s(GenerateStep, \"5IJlK43MXUcwYWB6RmWVXOIkvFo=\");\n_c = GenerateStep;\nexport default GenerateStep;\nvar _c;\n$RefreshReg$(_c, \"GenerateStep\");","map":{"version":3,"names":["React","useState","useEffect","Play","Download","Clock","DollarSign","CheckCircle","Zap","TrendingUp","Shield","Monitor","FileText","Package","jsxDEV","_jsxDEV","Fragment","_Fragment","GenerateStep","formData","prevStep","currentStep","totalSteps","_s","isGenerating","setIsGenerating","progress","setProgress","currentTask","setCurrentTask","estimatedCost","setEstimatedCost","generatedResources","setGeneratedResources","deploymentStatus","setDeploymentStatus","generatedFiles","setGeneratedFiles","isExporting","setIsExporting","_formData$selectedInf","_formData$selectedInf2","_formData$selectedInf3","_formData$selectedInf4","_formData$selectedInf5","_formData$selectedCom","_formData$selectedCom2","_formData$selectedCom3","_formData$selectedCom4","_formData$selectedInt","_formData$selectedInt2","_formData$selectedInt3","_formData$selectedInt4","_formData$selectedSec","_formData$selectedSec2","_formData$selectedSec3","_formData$selectedMon","_formData$selectedMon2","_formData$selectedMon3","cost","selectedInfrastructure","includes","selectedCompute","selectedIntegration","selectedSecurity","selectedMonitoring","generateCloudFormationTemplate","projectName","environment","yamlTemplate","generateResourcesYAML","generateOutputsYAML","_formData$selectedInf6","_formData$selectedInf7","_formData$selectedCom5","_formData$selectedInt5","_formData$selectedMon4","yamlResources","_formData$selectedCom6","_formData$selectedInf8","_formData$selectedInf9","_formData$selectedCom7","_formData$selectedInt6","_formData$selectedMon5","yamlOutputs","generateDeploymentScript","Date","toISOString","generateDeleteScript","generateReadme","_formData$selectedInf0","_formData$selectedCom8","_formData$selectedInt7","_formData$selectedSec4","_formData$selectedMon6","map","service","replace","l","toUpperCase","join","downloadZipFile","files","JSZip","default","zip","Object","entries","forEach","filename","content","file","zipBlob","generateAsync","type","element","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","exportConfiguration","setTimeout","alert","keys","error","console","simulateDeployment","tasks","name","duration","totalProgress","progressStep","length","i","Promise","resolve","Math","round","prev","id","status","getServiceCounts","_formData$selectedInf1","_formData$selectedCom9","_formData$selectedInt8","_formData$selectedSec5","_formData$selectedMon7","_formData$selectedDep","_formData$selectedOpt","infrastructure","compute","integration","security","monitoring","deployment","selectedDeployment","optimization","selectedOptimization","serviceCounts","totalServices","values","reduce","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","resource","index","awsRegion","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/codinggents/Documents/lambdaforge/src/components/steps/GenerateStep.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Play, Download, Clock, DollarSign, CheckCircle, Zap, TrendingUp, Shield, Monitor, FileText, Package } from 'lucide-react';\n\nconst GenerateStep = ({ formData, prevStep, currentStep, totalSteps }) => {\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [currentTask, setCurrentTask] = useState('');\n  const [estimatedCost, setEstimatedCost] = useState(0);\n  const [generatedResources, setGeneratedResources] = useState([]);\n  const [deploymentStatus, setDeploymentStatus] = useState('ready'); // ready, generating, completed, error\n  const [generatedFiles, setGeneratedFiles] = useState(null);\n  const [isExporting, setIsExporting] = useState(false);\n\n  // Calculate estimated monthly cost based on selections\n  useEffect(() => {\n    let cost = 0;\n    \n    // Infrastructure costs\n    if (formData.selectedInfrastructure?.includes('s3-bucket')) cost += 23;\n    if (formData.selectedInfrastructure?.includes('dynamodb')) cost += 45;\n    if (formData.selectedInfrastructure?.includes('rds-database')) cost += 85;\n    if (formData.selectedInfrastructure?.includes('vpc-networking')) cost += 15;\n    if (formData.selectedInfrastructure?.includes('ebs-volumes')) cost += 30;\n\n    // Compute costs\n    if (formData.selectedCompute?.includes('lambda-functions')) cost += 12;\n    if (formData.selectedCompute?.includes('ec2-instances')) cost += 120;\n    if (formData.selectedCompute?.includes('ecs-containers')) cost += 95;\n    if (formData.selectedCompute?.includes('fargate-serverless')) cost += 75;\n\n    // Integration costs\n    if (formData.selectedIntegration?.includes('api-gateway')) cost += 25;\n    if (formData.selectedIntegration?.includes('eventbridge')) cost += 8;\n    if (formData.selectedIntegration?.includes('step-functions')) cost += 15;\n    if (formData.selectedIntegration?.includes('sns-notifications')) cost += 5;\n\n    // Security costs\n    if (formData.selectedSecurity?.includes('kms-encryption')) cost += 12;\n    if (formData.selectedSecurity?.includes('secrets-manager')) cost += 8;\n    if (formData.selectedSecurity?.includes('waf-protection')) cost += 35;\n\n    // Monitoring costs\n    if (formData.selectedMonitoring?.includes('cloudwatch')) cost += 18;\n    if (formData.selectedMonitoring?.includes('x-ray-tracing')) cost += 22;\n    if (formData.selectedMonitoring?.includes('cloudtrail')) cost += 10;\n\n    setEstimatedCost(cost);\n  }, [formData]);\n\n  // File generation functions\n  const generateCloudFormationTemplate = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    const environment = formData.environment || 'Development';\n    \n    // Generate YAML format instead of JSON\n    const yamlTemplate = `AWSTemplateFormatVersion: '2010-09-09'\nDescription: '${projectName} - Generated by LambdaForge'\n\nParameters:\n  ProjectName:\n    Type: String\n    Default: ${projectName}\n    Description: Name of the project\n  Environment:\n    Type: String\n    Default: ${environment}\n    AllowedValues:\n      - Development\n      - Staging\n      - Production\n    Description: Environment type\n\nResources:\n${generateResourcesYAML()}\n\nOutputs:\n${generateOutputsYAML()}`;\n\n    return yamlTemplate;\n  };\n\n\n\n  // YAML generation functions for proper CloudFormation format\n  const generateResourcesYAML = () => {\n    let yamlResources = '';\n\n    // Infrastructure Resources\n    if (formData.selectedInfrastructure?.includes('s3-bucket')) {\n      yamlResources += `  # S3 Bucket with versioning and static website hosting\n  S3Bucket:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: !Sub '\\${ProjectName}-storage-\\${AWS::AccountId}'\n      VersioningConfiguration:\n        Status: Enabled\n      WebsiteConfiguration:\n        IndexDocument: index.html\n        ErrorDocument: error.html\n      PublicAccessBlockConfiguration:\n        BlockPublicAcls: false\n        BlockPublicPolicy: false\n        IgnorePublicAcls: false\n        RestrictPublicBuckets: false\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n  # S3 Bucket Policy for static website hosting\n  S3BucketPolicy:\n    Type: AWS::S3::BucketPolicy\n    Properties:\n      Bucket: !Ref S3Bucket\n      PolicyDocument:\n        Statement:\n          - Effect: Allow\n            Principal: '*'\n            Action: s3:GetObject\n            Resource: !Sub '\\${S3Bucket}/*'\n\n`;\n    }\n\n    if (formData.selectedInfrastructure?.includes('dynamodb')) {\n      yamlResources += `  # DynamoDB Table\n  DynamoDBTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      TableName: !Sub '\\${ProjectName}-data'\n      AttributeDefinitions:\n        - AttributeName: id\n          AttributeType: S\n      KeySchema:\n        - AttributeName: id\n          KeyType: HASH\n      BillingMode: PAY_PER_REQUEST\n      PointInTimeRecoverySpecification:\n        PointInTimeRecoveryEnabled: true\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    // Compute Resources - Fixed IAM role without custom naming\n    if (formData.selectedCompute?.includes('lambda-functions')) {\n      yamlResources += `  # Lambda Execution Role (no custom name to avoid conflicts)\n  LambdaExecutionRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service: lambda.amazonaws.com\n            Action: sts:AssumeRole\n      ManagedPolicyArns:\n        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n  # Lambda Function\n  LambdaFunction:\n    Type: AWS::Lambda::Function\n    Properties:\n      FunctionName: !Sub '\\${ProjectName}-function'\n      Runtime: nodejs18.x\n      Handler: index.handler\n      Role: !GetAtt LambdaExecutionRole.Arn\n      Code:\n        ZipFile: |\n          exports.handler = async (event) => {\n              console.log('Event:', JSON.stringify(event, null, 2));\n              \n              const response = {\n                  statusCode: 200,\n                  headers: {\n                      'Content-Type': 'application/json',\n                      'Access-Control-Allow-Origin': '*'\n                  },\n                  body: JSON.stringify({\n                      message: 'Hello from ${formData.projectName || 'LambdaForge'}!',\n                      timestamp: new Date().toISOString(),\n                      environment: process.env.ENVIRONMENT || 'Development'\n                  })\n              };\n              \n              return response;\n          };\n      Environment:\n        Variables:\n          PROJECT_NAME: !Ref ProjectName\n          ENVIRONMENT: !Ref Environment\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    // Integration Resources\n    if (formData.selectedIntegration?.includes('api-gateway')) {\n      yamlResources += `  # API Gateway\n  ApiGateway:\n    Type: AWS::ApiGateway::RestApi\n    Properties:\n      Name: !Sub '\\${ProjectName}-api'\n      Description: !Sub 'API for \\${ProjectName}'\n      EndpointConfiguration:\n        Types:\n          - REGIONAL\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n\n      if (formData.selectedCompute?.includes('lambda-functions')) {\n        yamlResources += `  # API Gateway Resource\n  ApiGatewayResource:\n    Type: AWS::ApiGateway::Resource\n    Properties:\n      RestApiId: !Ref ApiGateway\n      ParentId: !GetAtt ApiGateway.RootResourceId\n      PathPart: api\n\n  # API Gateway Method\n  ApiGatewayMethod:\n    Type: AWS::ApiGateway::Method\n    Properties:\n      RestApiId: !Ref ApiGateway\n      ResourceId: !Ref ApiGatewayResource\n      HttpMethod: ANY\n      AuthorizationType: NONE\n      Integration:\n        Type: AWS_PROXY\n        IntegrationHttpMethod: POST\n        Uri: !Sub 'arn:aws:apigateway:\\${AWS::Region}:lambda:path/2015-03-31/functions/\\${LambdaFunction.Arn}/invocations'\n\n  # API Gateway Deployment\n  ApiGatewayDeployment:\n    Type: AWS::ApiGateway::Deployment\n    DependsOn:\n      - ApiGatewayMethod\n    Properties:\n      RestApiId: !Ref ApiGateway\n      StageName: !Ref Environment\n\n  # Lambda Permission for API Gateway\n  LambdaApiGatewayPermission:\n    Type: AWS::Lambda::Permission\n    Properties:\n      FunctionName: !Ref LambdaFunction\n      Action: lambda:InvokeFunction\n      Principal: apigateway.amazonaws.com\n      SourceArn: !Sub 'arn:aws:apigateway:\\${AWS::Region}::/restapis/\\${ApiGateway}/stages/\\${Environment}/*/*'\n\n`;\n      }\n    }\n\n    // Monitoring Resources\n    if (formData.selectedMonitoring?.includes('cloudwatch')) {\n      yamlResources += `  # CloudWatch Log Group\n  LogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      LogGroupName: !Sub '/aws/lambda/\\${ProjectName}-logs'\n      RetentionInDays: 14\n      Tags:\n        - Key: Project\n          Value: !Ref ProjectName\n        - Key: Environment\n          Value: !Ref Environment\n\n`;\n    }\n\n    return yamlResources || '  # No resources selected';\n  };\n\n  const generateOutputsYAML = () => {\n    let yamlOutputs = '';\n\n    if (formData.selectedInfrastructure?.includes('s3-bucket')) {\n      yamlOutputs += `  S3BucketName:\n    Description: S3 Bucket Name\n    Value: !Ref S3Bucket\n    Export:\n      Name: !Sub '\\${ProjectName}-s3-bucket'\n  S3BucketConsoleLink:\n    Description: S3 Bucket Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/s3/buckets/\\${S3Bucket}'\n  S3WebsiteURL:\n    Description: S3 Static Website URL\n    Value: !Sub 'http://\\${S3Bucket}.s3-website-\\${AWS::Region}.amazonaws.com'\n    Export:\n      Name: !Sub '\\${ProjectName}-website-url'\n\n`;\n    }\n\n    if (formData.selectedInfrastructure?.includes('dynamodb')) {\n      yamlOutputs += `  DynamoDBTableName:\n    Description: DynamoDB Table Name\n    Value: !Ref DynamoDBTable\n    Export:\n      Name: !Sub '\\${ProjectName}-dynamodb-table'\n  DynamoDBConsoleLink:\n    Description: DynamoDB Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/dynamodbv2/home?region=\\${AWS::Region}#table?name=\\${DynamoDBTable}'\n\n`;\n    }\n\n    if (formData.selectedCompute?.includes('lambda-functions')) {\n      yamlOutputs += `  LambdaFunctionArn:\n    Description: Lambda Function ARN\n    Value: !GetAtt LambdaFunction.Arn\n    Export:\n      Name: !Sub '\\${ProjectName}-lambda-arn'\n  LambdaConsoleLink:\n    Description: Lambda Function Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/lambda/home?region=\\${AWS::Region}#/functions/\\${LambdaFunction}'\n\n`;\n    }\n\n    if (formData.selectedIntegration?.includes('api-gateway')) {\n      yamlOutputs += `  ApiEndpoint:\n    Description: API Gateway endpoint URL\n    Value: !Sub 'https://\\${ApiGateway}.execute-api.\\${AWS::Region}.amazonaws.com/\\${Environment}'\n    Export:\n      Name: !Sub '\\${ProjectName}-api-endpoint'\n  ApiGatewayConsoleLink:\n    Description: API Gateway Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/apigateway/home?region=\\${AWS::Region}#/apis/\\${ApiGateway}'\n\n`;\n    }\n\n    if (formData.selectedMonitoring?.includes('cloudwatch')) {\n      yamlOutputs += `  LogGroupName:\n    Description: CloudWatch Log Group Name\n    Value: !Ref LogGroup\n    Export:\n      Name: !Sub '\\${ProjectName}-log-group'\n  CloudWatchConsoleLink:\n    Description: CloudWatch Logs Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=\\${AWS::Region}#logsV2:log-groups/log-group/\\${LogGroup}'\n\n`;\n    }\n\n    yamlOutputs += `  CloudFormationConsoleLink:\n    Description: CloudFormation Stack Console Link\n    Value: !Sub 'https://\\${AWS::Region}.console.aws.amazon.com/cloudformation/home?region=\\${AWS::Region}#/stacks/stackinfo?stackId=\\${AWS::StackName}'\n\n  DeploymentRegion:\n    Description: AWS Region where resources are deployed\n    Value: !Ref AWS::Region\n\n`;\n\n    return yamlOutputs;\n  };\n\n  /* eslint-disable no-useless-escape */\n  const generateDeploymentScript = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n    const environment = formData.environment || 'Development';\n\n    return `#!/bin/bash\n\n# ${projectName} Deployment Script\n# Generated by LambdaForge on ${new Date().toISOString()}\n\nset -e\n\n# Configuration\nPROJECT_NAME=\"${projectName}\"\nENVIRONMENT=\"${environment}\"\n# Auto-detect AWS region from AWS CLI configuration\nAWS_REGION=\\$(aws configure get region)\nif [ -z \"\\$AWS_REGION\" ]; then\n    echo \"⚠️  No default region configured. Using us-east-1\"\n    AWS_REGION=\"us-east-1\"\nfi\nSTACK_NAME=\"\\${PROJECT_NAME}-stack\"\n\n# Colors for output\nRED='\\\\033[0;31m'\nGREEN='\\\\033[0;32m'\nYELLOW='\\\\033[1;33m'\nBLUE='\\\\033[0;34m'\nNC='\\\\033[0m'\n\nprint_status() {\n    echo -e \"\\${BLUE}[INFO]\\${NC} $1\"\n}\n\nprint_success() {\n    echo -e \"\\${GREEN}[SUCCESS]\\${NC} $1\"\n}\n\nprint_error() {\n    echo -e \"\\${RED}[ERROR]\\${NC} $1\"\n}\n\nprint_warning() {\n    echo -e \"\\${YELLOW}[WARNING]\\${NC} $1\"\n}\n\n# Check prerequisites\ncheck_prerequisites() {\n    print_status \"Checking prerequisites...\"\n    \n    # Check AWS CLI\n    if ! command -v aws &> /dev/null; then\n        print_error \"AWS CLI is not installed. Please install it first.\"\n        exit 1\n    fi\n    \n    # Check AWS credentials\n    if ! aws sts get-caller-identity &> /dev/null; then\n        print_error \"AWS credentials not configured. Run 'aws configure' first.\"\n        exit 1\n    fi\n    \n    print_success \"Prerequisites check passed\"\n}\n\n# Check web application configuration\ncheck_web_app_config() {\n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ] && [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_error \"Cannot specify both local path and GitHub repo. Choose one.\"\n        exit 1\n    fi\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        if [ ! -d \"\\$WEB_APP_LOCAL_PATH\" ]; then\n            print_error \"Local web app path does not exist: \\$WEB_APP_LOCAL_PATH\"\n            exit 1\n        fi\n        print_status \"Web app source: Local folder (\\$WEB_APP_LOCAL_PATH)\"\n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Web app source: GitHub repository (\\$WEB_APP_GITHUB_REPO)\"\n    else\n        print_warning \"No web app source specified. Only AWS infrastructure will be created.\"\n        print_status \"To deploy a web app, set WEB_APP_LOCAL_PATH or WEB_APP_GITHUB_REPO in this script.\"\n    fi\n}\n\n# Build and package web application\nbuild_web_app() {\n    if [ -z \"\\$WEB_APP_LOCAL_PATH\" ] && [ -z \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Skipping web app build - no source specified\"\n        return 0\n    fi\n    \n    print_status \"Building web application...\"\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        # Build from local path (in place)\n        print_status \"Building from local path: \\$WEB_APP_LOCAL_PATH\"\n        \n        # Save current directory\n        ORIGINAL_DIR=\\$(pwd)\n        \n        # Go to the local path and build there\n        cd \"\\$WEB_APP_LOCAL_PATH\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                cd \"\\$ORIGINAL_DIR\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in \\$WEB_APP_LOCAL_PATH\"\n            cd \"\\$ORIGINAL_DIR\"\n            exit 1\n        fi\n        \n        # Return to original directory\n        cd \"\\$ORIGINAL_DIR\"\n        \n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        # Clone from GitHub to temporary directory\n        print_status \"Cloning from GitHub repository: \\$WEB_APP_GITHUB_REPO\"\n        \n        BUILD_DIR=\"\\$(mktemp -d)\"\n        print_status \"Using build directory: \\$BUILD_DIR\"\n        \n        git clone \"\\$WEB_APP_GITHUB_REPO\" \"\\$BUILD_DIR\"\n        cd \"\\$BUILD_DIR\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in cloned repository\"\n            exit 1\n        fi\n    fi\n    \n    print_success \"Web application built successfully\"\n    echo \"Built app location: \\$BUILT_APP_PATH\"\n}\n\n# Deploy web application to S3\ndeploy_web_app() {\n    if [ -z \"\\$BUILT_APP_PATH\" ]; then\n        print_status \"Skipping web app deployment - no built app\"\n        return 0\n    fi\n    \n    print_status \"Deploying web application to S3...\"\n    \n    # Get S3 bucket name from CloudFormation outputs\n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text)\n    \n    if [ -z \"\\$S3_BUCKET\" ] || [ \"\\$S3_BUCKET\" = \"None\" ]; then\n        print_warning \"No S3 bucket found in stack outputs. Skipping web app deployment.\"\n        return 0\n    fi\n    \n    print_status \"Uploading to S3 bucket: \\$S3_BUCKET\"\n    \n    # Upload files to S3\n    aws s3 sync \"\\$BUILT_APP_PATH\" \"s3://\\$S3_BUCKET\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --delete\n    \n    # Configure S3 for static website hosting\n    aws s3 website \"s3://\\$S3_BUCKET\" \\\\\n        --index-document index.html \\\\\n        --error-document error.html \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Get website URL\n    WEBSITE_URL=\"http://\\$S3_BUCKET.s3-website-\\$AWS_REGION.amazonaws.com\"\n    \n    print_success \"Web application deployed successfully!\"\n    echo \"\"\n    print_success \"🌐 Your web application is available at:\"\n    echo \"   \\$WEBSITE_URL\"\n    echo \"\"\n}\n\n# Deploy or update the CloudFormation stack\ndeploy_stack() {\n    print_status \"Checking if stack exists...\"\n    \n    if aws cloudformation describe-stacks --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" &>/dev/null; then\n        print_status \"Stack exists. Updating...\"\n        OPERATION=\"update-stack\"\n    else\n        print_status \"Stack does not exist. Creating...\"\n        OPERATION=\"create-stack\"\n    fi\n    \n    print_status \"Deploying CloudFormation stack...\"\n    print_status \"Stack Name: \\$STACK_NAME\"\n    print_status \"Region: \\$AWS_REGION\"\n    print_status \"Template: template.yaml\"\n    \n    # Deploy the stack\n    aws cloudformation \\$OPERATION \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --template-body file://template.yaml \\\\\n        --capabilities CAPABILITY_IAM \\\\\n        --region \"\\$AWS_REGION\"\n    \n    if [ \\$? -ne 0 ]; then\n        print_error \"Failed to create/update the stack\"\n        exit 1\n    fi\n    \n    print_status \"Waiting for stack operation to complete...\"\n    print_status \"This may take several minutes...\"\n    \n    # Wait for the operation to complete\n    if [ \"\\$OPERATION\" = \"create-stack\" ]; then\n        WAIT_CONDITION=\"stack-create-complete\"\n    else\n        WAIT_CONDITION=\"stack-update-complete\"\n    fi\n    \n    if aws cloudformation wait \\$WAIT_CONDITION --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\"; then\n        print_success \"Stack operation completed successfully! 🎉\"\n    else\n        print_error \"Stack operation failed or timed out\"\n        print_status \"Check the CloudFormation console for details:\"\n        echo \"https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks\"\n        exit 1\n    fi\n}\n\n# Show deployment results\nshow_results() {\n    print_success \"🎉 Deployment completed successfully!\"\n    echo \"\"\n    print_status \"📋 Resource Summary:\"\n    \n    # Get stack outputs\n    aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[*].[OutputKey,OutputValue,Description]' \\\\\n        --output table\n    \n    echo \"\"\n    print_status \"🔗 AWS Console Links:\"\n    \n    # CloudFormation Console\n    echo \"📊 CloudFormation Stack:\"\n    echo \"   https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks/stackinfo?stackId=\\$STACK_NAME\"\n    \n    # Get resource links\n    LAMBDA_FUNCTION=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`LambdaFunctionName\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    API_GATEWAY=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`ApiGatewayUrl\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    if [ -n \"\\$LAMBDA_FUNCTION\" ] && [ \"\\$LAMBDA_FUNCTION\" != \"None\" ]; then\n        echo \"⚡ Lambda Function:\"\n        echo \"   https://\\$AWS_REGION.console.aws.amazon.com/lambda/home?region=\\$AWS_REGION#/functions/\\$LAMBDA_FUNCTION\"\n    fi\n    \n    if [ -n \"\\$API_GATEWAY\" ] && [ \"\\$API_GATEWAY\" != \"None\" ]; then\n        echo \"🌐 API Gateway:\"\n        echo \"   \\$API_GATEWAY\"\n    fi\n    \n    if [ -n \"\\$S3_BUCKET\" ] && [ \"\\$S3_BUCKET\" != \"None\" ]; then\n        echo \"🪣 S3 Bucket:\"\n        echo \"   https://s3.console.aws.amazon.com/s3/buckets/\\$S3_BUCKET?region=\\$AWS_REGION\"\n    fi\n    \n    echo \"\"\n    print_status \"💡 Next Steps:\"\n    echo \"  • Test your deployed resources using the links above\"\n    echo \"  • Monitor logs in CloudWatch\"\n    echo \"  • Use delete.sh to clean up resources when done\"\n    echo \"\"\n}\n\n# Main deployment function\nmain() {\n    echo \"\"\n    echo \"======================================\"\n    echo \"🚀 ${projectName} Deployment\"\n    echo \"======================================\"\n    echo \"Project: \\$PROJECT_NAME\"\n    echo \"Region: \\$AWS_REGION\"\n    echo \"\"\n    \n    check_prerequisites\n    check_web_app_config\n    build_web_app\n    deploy_stack\n    deploy_web_app\n    show_results\n}\n\n# Run with error handling\nif [ \"\\${BASH_SOURCE[0]}\" == \"\\${0}\" ]; then\n    main \"$@\"\nfi\n`;\n  };\n\n  /* eslint-disable no-useless-escape */\n  const generateDeleteScript = () => {\n    const projectName = formData.projectName || 'lambdaforge-project';\n\n    return `#!/bin/bash\n\n# ${projectName} Resource Cleanup Script\n# Generated by LambdaForge on ${new Date().toISOString()}\n# ⚠️  WARNING: This script will DELETE all resources created by the deployment!\n\nset -e\n\n# Configuration\nPROJECT_NAME=\"${projectName}\"\n# Auto-detect AWS region from AWS CLI configuration\nAWS_REGION=\\$(aws configure get region)\nif [ -z \"\\$AWS_REGION\" ]; then\n    echo \"⚠️  No default region configured. Using us-east-1\"\n    AWS_REGION=\"us-east-1\"\nfi\nSTACK_NAME=\"\\${PROJECT_NAME}-stack\"\n\n# Web Application Deployment Configuration\n# Set one of these to deploy the actual web application:\n# WEB_APP_LOCAL_PATH=\"/path/to/your/web/app\"          # Local folder path\n# WEB_APP_GITHUB_REPO=\"https://github.com/user/repo\" # GitHub repository URL\nWEB_APP_LOCAL_PATH=\"\"\nWEB_APP_GITHUB_REPO=\"\"\n\n# Colors for output\nRED='\\\\033[0;31m'\nGREEN='\\\\033[0;32m'\nYELLOW='\\\\033[1;33m'\nBLUE='\\\\033[0;34m'\nNC='\\\\033[0m' # No Color\n\n# Print functions\nprint_status() {\n    echo -e \"\\${BLUE}ℹ️  \\$1\\${NC}\"\n}\n\nprint_success() {\n    echo -e \"\\${GREEN}✅ \\$1\\${NC}\"\n}\n\nprint_warning() {\n    echo -e \"\\${YELLOW}⚠️  \\$1\\${NC}\"\n}\n\nprint_error() {\n    echo -e \"\\${RED}❌ \\$1\\${NC}\"\n}\n\n# Check prerequisites\ncheck_prerequisites() {\n    print_status \"Checking prerequisites...\"\n    \n    # Check AWS CLI\n    if ! command -v aws &> /dev/null; then\n        print_error \"AWS CLI is not installed. Please install it first.\"\n        exit 1\n    fi\n    \n    # Check AWS credentials\n    if ! aws sts get-caller-identity &> /dev/null; then\n        print_error \"AWS credentials not configured. Run 'aws configure' first.\"\n        exit 1\n    fi\n    \n    print_success \"Prerequisites check passed\"\n}\n\n# Check web application configuration\ncheck_web_app_config() {\n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ] && [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_error \"Cannot specify both local path and GitHub repo. Choose one.\"\n        exit 1\n    fi\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        if [ ! -d \"\\$WEB_APP_LOCAL_PATH\" ]; then\n            print_error \"Local web app path does not exist: \\$WEB_APP_LOCAL_PATH\"\n            exit 1\n        fi\n        print_status \"Web app source: Local folder (\\$WEB_APP_LOCAL_PATH)\"\n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Web app source: GitHub repository (\\$WEB_APP_GITHUB_REPO)\"\n    else\n        print_warning \"No web app source specified. Only AWS infrastructure will be created.\"\n        print_status \"To deploy a web app, set WEB_APP_LOCAL_PATH or WEB_APP_GITHUB_REPO in this script.\"\n    fi\n}\n\n# Build and package web application\nbuild_web_app() {\n    if [ -z \"\\$WEB_APP_LOCAL_PATH\" ] && [ -z \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        print_status \"Skipping web app build - no source specified\"\n        return 0\n    fi\n    \n    print_status \"Building web application...\"\n    \n    if [ -n \"\\$WEB_APP_LOCAL_PATH\" ]; then\n        # Build from local path (in place)\n        print_status \"Building from local path: \\$WEB_APP_LOCAL_PATH\"\n        \n        # Save current directory\n        ORIGINAL_DIR=\\$(pwd)\n        \n        # Go to the local path and build there\n        cd \"\\$WEB_APP_LOCAL_PATH\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$WEB_APP_LOCAL_PATH/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                cd \"\\$ORIGINAL_DIR\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in \\$WEB_APP_LOCAL_PATH\"\n            cd \"\\$ORIGINAL_DIR\"\n            exit 1\n        fi\n        \n        # Return to original directory\n        cd \"\\$ORIGINAL_DIR\"\n        \n    elif [ -n \"\\$WEB_APP_GITHUB_REPO\" ]; then\n        # Clone from GitHub to temporary directory\n        print_status \"Cloning from GitHub repository: \\$WEB_APP_GITHUB_REPO\"\n        \n        BUILD_DIR=\"\\$(mktemp -d)\"\n        print_status \"Using build directory: \\$BUILD_DIR\"\n        \n        git clone \"\\$WEB_APP_GITHUB_REPO\" \"\\$BUILD_DIR\"\n        cd \"\\$BUILD_DIR\"\n        \n        if [ -f \"package.json\" ]; then\n            print_status \"Installing dependencies...\"\n            npm install\n            \n            print_status \"Building application...\"\n            npm run build\n            \n            if [ -d \"build\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/build\"\n            elif [ -d \"dist\" ]; then\n                BUILT_APP_PATH=\"\\$BUILD_DIR/dist\"\n            else\n                print_error \"Build directory not found. Expected 'build' or 'dist' folder.\"\n                exit 1\n            fi\n        else\n            print_error \"No package.json found in cloned repository\"\n            exit 1\n        fi\n    fi\n    \n    print_success \"Web application built successfully\"\n    echo \"Built app location: \\$BUILT_APP_PATH\"\n}\n\n# Deploy web application to S3\ndeploy_web_app() {\n    if [ -z \"\\$BUILT_APP_PATH\" ]; then\n        print_status \"Skipping web app deployment - no built app\"\n        return 0\n    fi\n    \n    print_status \"Deploying web application to S3...\"\n    \n    # Get S3 bucket name from CloudFormation outputs\n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text)\n    \n    if [ -z \"\\$S3_BUCKET\" ] || [ \"\\$S3_BUCKET\" = \"None\" ]; then\n        print_warning \"No S3 bucket found in stack outputs. Skipping web app deployment.\"\n        return 0\n    fi\n    \n    print_status \"Uploading to S3 bucket: \\$S3_BUCKET\"\n    \n    # Upload files to S3\n    aws s3 sync \"\\$BUILT_APP_PATH\" \"s3://\\$S3_BUCKET\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --delete\n    \n    # Configure S3 for static website hosting\n    aws s3 website \"s3://\\$S3_BUCKET\" \\\\\n        --index-document index.html \\\\\n        --error-document error.html \\\\\n        --region \"\\$AWS_REGION\"\n    \n    # Get website URL\n    WEBSITE_URL=\"http://\\$S3_BUCKET.s3-website-\\$AWS_REGION.amazonaws.com\"\n    \n    print_success \"Web application deployed successfully!\"\n    echo \"\"\n    print_success \"🌐 Your web application is available at:\"\n    echo \"   \\$WEBSITE_URL\"\n    echo \"\"\n}\n\n# Deploy or update the CloudFormation stack\ndeploy_stack() {\n    print_status \"Checking if stack exists...\"\n    \n    if aws cloudformation describe-stacks --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\" &>/dev/null; then\n        print_status \"Stack exists. Updating...\"\n        OPERATION=\"update-stack\"\n    else\n        print_status \"Stack does not exist. Creating...\"\n        OPERATION=\"create-stack\"\n    fi\n    \n    print_status \"Deploying CloudFormation stack...\"\n    print_status \"Stack Name: \\$STACK_NAME\"\n    print_status \"Region: \\$AWS_REGION\"\n    print_status \"Template: template.yaml\"\n    \n    # Deploy the stack\n    aws cloudformation \\$OPERATION \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --template-body file://template.yaml \\\\\n        --capabilities CAPABILITY_IAM \\\\\n        --region \"\\$AWS_REGION\"\n    \n    if [ \\$? -ne 0 ]; then\n        print_error \"Failed to create/update the stack\"\n        exit 1\n    fi\n    \n    print_status \"Waiting for stack operation to complete...\"\n    print_status \"This may take several minutes...\"\n    \n    # Wait for the operation to complete\n    if [ \"\\$OPERATION\" = \"create-stack\" ]; then\n        WAIT_CONDITION=\"stack-create-complete\"\n    else\n        WAIT_CONDITION=\"stack-update-complete\"\n    fi\n    \n    if aws cloudformation wait \\$WAIT_CONDITION --stack-name \"\\$STACK_NAME\" --region \"\\$AWS_REGION\"; then\n        print_success \"Stack operation completed successfully! 🎉\"\n    else\n        print_error \"Stack operation failed or timed out\"\n        print_status \"Check the CloudFormation console for details:\"\n        echo \"https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks\"\n        exit 1\n    fi\n}\n\n# Show deployment results\nshow_results() {\n    print_success \"🎉 Deployment completed successfully!\"\n    echo \"\"\n    print_status \"📋 Resource Summary:\"\n    \n    # Get stack outputs\n    aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[*].[OutputKey,OutputValue,Description]' \\\\\n        --output table\n    \n    echo \"\"\n    print_status \"🔗 AWS Console Links:\"\n    \n    # CloudFormation Console\n    echo \"📊 CloudFormation Stack:\"\n    echo \"   https://\\$AWS_REGION.console.aws.amazon.com/cloudformation/home?region=\\$AWS_REGION#/stacks/stackinfo?stackId=\\$STACK_NAME\"\n    \n    # Get resource links\n    LAMBDA_FUNCTION=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`LambdaFunctionName\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    API_GATEWAY=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`ApiGatewayUrl\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    S3_BUCKET=\\$(aws cloudformation describe-stacks \\\\\n        --stack-name \"\\$STACK_NAME\" \\\\\n        --region \"\\$AWS_REGION\" \\\\\n        --query 'Stacks[0].Outputs[?OutputKey==\\`S3BucketName\\`].OutputValue' \\\\\n        --output text 2>/dev/null)\n    \n    if [ -n \"\\$LAMBDA_FUNCTION\" ] && [ \"\\$LAMBDA_FUNCTION\" != \"None\" ]; then\n        echo \"⚡ Lambda Function:\"\n        echo \"   https://\\$AWS_REGION.console.aws.amazon.com/lambda/home?region=\\$AWS_REGION#/functions/\\$LAMBDA_FUNCTION\"\n    fi\n    \n    if [ -n \"\\$API_GATEWAY\" ] && [ \"\\$API_GATEWAY\" != \"None\" ]; then\n        echo \"🌐 API Gateway:\"\n        echo \"   \\$API_GATEWAY\"\n    fi\n    \n    if [ -n \"\\$S3_BUCKET\" ] && [ \"\\$S3_BUCKET\" != \"None\" ]; then\n        echo \"🪣 S3 Bucket:\"\n        echo \"   https://s3.console.aws.amazon.com/s3/buckets/\\$S3_BUCKET?region=\\$AWS_REGION\"\n    fi\n    \n    echo \"\"\n    print_status \"💡 Next Steps:\"\n    echo \"  • Test your deployed resources using the links above\"\n    echo \"  • Monitor logs in CloudWatch\"\n    echo \"  • Use delete.sh to clean up resources when done\"\n    echo \"\"\n}\n\n# Main deployment function\nmain() {\n    echo \"\"\n    echo \"======================================\"\n    echo \"🚀 ${projectName} Deployment\"\n    echo \"======================================\"\n    echo \"Project: \\$PROJECT_NAME\"\n    echo \"Region: \\$AWS_REGION\"\n    echo \"\"\n    \n    check_prerequisites\n    check_web_app_config\n    build_web_app\n    deploy_stack\n    deploy_web_app\n    show_results\n}\n\n# Run with error handling\nif [ \"\\${BASH_SOURCE[0]}\" == \"\\${0}\" ]; then\n    main \"$@\"\nfi\n`;\n  };\n  /* eslint-enable no-useless-escape */\n\n  const generateReadme = () => {\n    const projectName = formData.projectName || 'LambdaForge Project';\n    const environment = formData.environment || 'Development';\n\n    return `# ${projectName}\n\nGenerated by **LambdaForge** - AWS Infrastructure Automation Platform\n\n## Overview\n\nThis project contains the infrastructure and deployment configuration for **${projectName}**.\n\n- **Environment:** ${environment}\n- **AWS Region:** Auto-detected from AWS CLI configuration\n- **Generated:** ${new Date().toISOString()}\n\n## Architecture\n\n### Selected AWS Services\n\n#### Infrastructure Services\n${formData.selectedInfrastructure?.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n') || '- None selected'}\n\n#### Compute Services\n${formData.selectedCompute?.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n') || '- None selected'}\n\n#### Integration Services\n${formData.selectedIntegration?.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n') || '- None selected'}\n\n#### Security Services\n${formData.selectedSecurity?.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n') || '- None selected'}\n\n#### Monitoring Services\n${formData.selectedMonitoring?.map(service => `- ${service.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}`).join('\\n') || '- None selected'}\n\n## 🚨 CRITICAL REQUIREMENTS\n\n### ⚠️ IAM Permissions Required\n\n**URGENT**: You must have the following IAM permissions or deployment will fail:\n\n- \\`iam:CreateRole\\` - Required for Lambda execution roles\n- \\`iam:AttachRolePolicy\\` - Required for role policy attachment\n- \\`iam:PassRole\\` - Required for Lambda function creation\n- \\`cloudformation:*\\` - Required for stack operations\n- \\`lambda:*\\` - Required for Lambda function management\n- \\`s3:*\\` - Required for S3 bucket operations\n- \\`apigateway:*\\` - Required for API Gateway (if selected)\n- \\`logs:*\\` - Required for CloudWatch logs\n\n**Common Error Without Proper Permissions:**\n\\`\\`\\`\nUser: arn:aws:iam::ACCOUNT:user/USERNAME is not authorized to perform: iam:CreateRole\n\\`\\`\\`\n\n### 🌍 AWS Region Configuration\n\n**CRITICAL**: Your AWS CLI region must match your intended deployment region.\n\n**Check your current region:**\n\\`\\`\\`bash\naws configure get region\n\\`\\`\\`\n\n**Common Error with Region Mismatch:**\n\\`\\`\\`\nCould not connect to the endpoint URL: \"https://cloudformation.us-east-1.amazonaws.com/\"\n\\`\\`\\`\n\n**Set your region if needed:**\n\\`\\`\\`bash\naws configure set region YOUR_PREFERRED_REGION\n\\`\\`\\`\n\n## Quick Start\n\n### Prerequisites\n\n- ✅ AWS CLI installed and configured\n- ✅ **CRITICAL**: Appropriate IAM permissions (see above)\n- ✅ **CRITICAL**: Correct AWS region configured\n- ✅ Bash shell (for deployment script)\n\n### Deployment\n\n\\`\\`\\`bash\n# 1. Extract the zip file\nunzip ${projectName || 'project'}-infrastructure.zip\ncd ${projectName || 'project'}-infrastructure/\n\n# 2. Make scripts executable\nchmod +x deploy.sh\nchmod +x delete.sh\n\n# 3. Verify your AWS configuration\naws sts get-caller-identity\naws configure get region\n\n# 4. (Optional) Configure web application deployment\n# Edit deploy.sh and set either:\n# WEB_APP_LOCAL_PATH=\"/path/to/your/web/app\"          # For local folder\n# WEB_APP_GITHUB_REPO=\"https://github.com/user/repo\" # For GitHub repo\n\n# 5. Run deployment\n./deploy.sh\n\\`\\`\\`\n\n### Web Application Deployment Options\n\n#### Option 1: Deploy from Local Folder\n\\`\\`\\`bash\n# Edit deploy.sh and set:\nWEB_APP_LOCAL_PATH=\"/path/to/your/react/app\"\n\\`\\`\\`\n\n#### Option 2: Deploy from GitHub Repository\n\\`\\`\\`bash\n# Edit deploy.sh and set:\nWEB_APP_GITHUB_REPO=\"https://github.com/yourusername/your-repo\"\n\\`\\`\\`\n\n#### Option 3: Infrastructure Only (Default)\nIf neither path is set, only AWS infrastructure will be created without deploying a web application.\n\n### Example: Deploy LambdaForge Application\n\nTo deploy the LambdaForge application itself:\n\n\\`\\`\\`bash\n# From GitHub (public repository):\nWEB_APP_GITHUB_REPO=\"https://github.com/your-username/lambdaforge\"\n\n# Or from local development:\nWEB_APP_LOCAL_PATH=\"/Users/yourusername/Documents/lambdaforge\"\n\\`\\`\\`\n\nAfter deployment, your LambdaForge app will be available at the S3 website URL provided in the outputs.\n\n### Cleanup (Delete All Resources)\n\n\\`\\`\\`bash\n# ⚠️ WARNING: This will DELETE all created resources!\n./delete.sh\n\\`\\`\\`\n\n## Cost Estimation\n\nBased on your selected services, the estimated monthly cost is **$${estimatedCost}**.\n\n## AWS Console Links\n\nAfter deployment, the script will provide direct links to all created resources.\n\nGeneral AWS Console links:\n- [CloudFormation Stacks](https://console.aws.amazon.com/cloudformation/)\n- [Lambda Functions](https://console.aws.amazon.com/lambda/)\n- [S3 Buckets](https://console.aws.amazon.com/s3/)\n- [Cost Explorer](https://console.aws.amazon.com/cost-management/home#/cost-explorer)\n\n## 🔧 Troubleshooting\n\n### Common Deployment Errors\n\n#### Error: \"User is not authorized to perform: iam:CreateRole\"\n**Cause**: Missing IAM permissions\n**Solution**: Contact your AWS administrator to grant the required permissions listed above\n\n#### Error: \"Could not connect to the endpoint URL\"\n**Cause**: Region mismatch between AWS CLI and CloudFormation endpoint\n**Solution**: \n\\`\\`\\`bash\naws configure set region YOUR_CORRECT_REGION\n\\`\\`\\`\n\n#### Error: \"Stack already exists\"\n**Cause**: Previous deployment with same project name\n**Solution**: Either use a different project name or delete the existing stack:\n\\`\\`\\`bash\n./delete.sh\n\\`\\`\\`\n\n#### Error: \"Template format error\"\n**Cause**: Using old JSON template format\n**Solution**: Use the new template.yaml generated by this version (proper YAML format)\n\n### Getting Help\n\nIf you encounter issues:\n1. Check the CloudFormation console for detailed error messages\n2. Verify your AWS CLI configuration: \\`aws configure list\\`\n3. Ensure you have the required IAM permissions\n4. Check that you're in the correct AWS region\n\n## Files Included\n\n- \\`template.yaml\\` - Fixed CloudFormation template (proper YAML format)\n- \\`deploy.sh\\` - Enhanced deployment script with region auto-detection\n- \\`delete.sh\\` - Resource cleanup script (⚠️ DELETES all resources!)\n- \\`README.md\\` - This comprehensive documentation file\n\n### File Descriptions\n\n#### \\`template.yaml\\`\n- Proper YAML CloudFormation format (not JSON)\n- Auto-detects AWS region and account ID\n- Includes console links for all resources\n- Fixed IAM role naming to avoid conflicts\n\n#### \\`deploy.sh\\`\n- Auto-detects your AWS CLI region configuration\n- Validates prerequisites before deployment\n- Provides direct links to all created resources\n- Enhanced error handling and colored output\n\n#### \\`delete.sh\\` ⚠️\n- **DANGER**: Permanently deletes ALL created resources\n- Shows resources before deletion for confirmation\n- Requires typing 'DELETE' to confirm\n- Use when you want to clean up and stop AWS charges\n\n---\n\n**Generated by LambdaForge** - Making AWS deployment simple and automated.\n`;\n  };\n\n\n\n  // Create and download zip file\n  const downloadZipFile = async (files, projectName) => {\n    // Dynamically import JSZip\n    const JSZip = (await import('jszip')).default;\n    \n    const zip = new JSZip();\n    \n    // Add all files to zip\n    Object.entries(files).forEach(([filename, content]) => {\n      zip.file(filename, content);\n    });\n    \n    // Generate zip file\n    const zipBlob = await zip.generateAsync({ type: 'blob' });\n    \n    // Download zip file\n    const element = document.createElement('a');\n    element.href = URL.createObjectURL(zipBlob);\n    element.download = `${projectName}-infrastructure.zip`;\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n    URL.revokeObjectURL(element.href);\n  };\n\n  // Export Configuration function - makes the button functional!\n  const exportConfiguration = async () => {\n    setIsExporting(true);\n    \n    try {\n      const projectName = formData.projectName || 'lambdaforge-project';\n      \n      // Generate all files\n      const files = {\n        'template.yaml': generateCloudFormationTemplate(),\n        'deploy.sh': generateDeploymentScript(),\n        'delete.sh': generateDeleteScript(),\n        'README.md': generateReadme()\n      };\n\n      setGeneratedFiles(files);\n\n      // Download as zip file\n      await downloadZipFile(files, projectName);\n\n      // Show success message\n      setTimeout(() => {\n        alert(`✅ Successfully exported ${projectName}-infrastructure.zip!\\n\\n📦 Package contains:\\n${Object.keys(files).map(filename => `• ${filename}`).join('\\n')}\\n\\n🚀 Next steps:\\n1. Extract the zip file\\n2. Run: chmod +x deploy.sh delete.sh\\n3. Verify AWS permissions and region\\n4. Run: ./deploy.sh\\n\\n✨ Features included:\\n• Auto-detects your AWS region\\n• Provides direct links to all created resources\\n• Fixed IAM role naming issues\\n• Proper YAML CloudFormation format\\n• Resource cleanup script (delete.sh)\\n• Comprehensive error handling`);\n      }, 1000);\n\n    } catch (error) {\n      console.error('Export failed:', error);\n      alert('❌ Export failed. Please try again.');\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const simulateDeployment = async () => {\n    setIsGenerating(true);\n    setDeploymentStatus('generating');\n    setProgress(0);\n    setGeneratedResources([]);\n\n    const tasks = [\n      { name: 'Validating AWS credentials', duration: 800 },\n      { name: 'Analyzing infrastructure requirements', duration: 1200 },\n      { name: 'Generating CloudFormation templates', duration: 1500 },\n      { name: 'Creating deployment scripts', duration: 1000 },\n      { name: 'Creating resource cleanup scripts', duration: 800 },\n      { name: 'Generating documentation', duration: 800 },\n      { name: 'Validating template syntax', duration: 1000 },\n      { name: 'Preparing deployment package', duration: 700 }\n    ];\n\n    let totalProgress = 0;\n    const progressStep = 100 / tasks.length;\n\n    for (let i = 0; i < tasks.length; i++) {\n      setCurrentTask(tasks[i].name);\n      \n      await new Promise(resolve => setTimeout(resolve, tasks[i].duration));\n      \n      totalProgress += progressStep;\n      setProgress(Math.round(totalProgress));\n\n      // Add generated resources as we progress\n      if (i === 2) { // After CloudFormation generation\n        setGeneratedResources(prev => [...prev, \n          { name: 'CloudFormation Template', id: 'template.yaml', status: 'generated', type: 'infrastructure' }\n        ]);\n      }\n      if (i === 3) { // After deployment script\n        setGeneratedResources(prev => [...prev, \n          { name: 'Deployment Script', id: 'deploy.sh', status: 'generated', type: 'automation' }\n        ]);\n      }\n      if (i === 4) { // After generating cleanup script\n        setGeneratedResources(prev => [...prev, \n          { name: 'Resource Cleanup Script', id: 'delete.sh', status: 'generated', type: 'automation' }\n        ]);\n      }\n      if (i === 5) { // After documentation\n        setGeneratedResources(prev => [...prev, \n          { name: 'README Documentation', id: 'README.md', status: 'generated', type: 'documentation' }\n        ]);\n      }\n    }\n\n    // Generate all files automatically\n    const files = {\n      'template.yaml': generateCloudFormationTemplate(),\n      'deploy.sh': generateDeploymentScript(),\n      'delete.sh': generateDeleteScript(),\n      'README.md': generateReadme()\n    };\n    \n    setGeneratedFiles(files);\n    setCurrentTask('All deployment files generated successfully!');\n    setDeploymentStatus('completed');\n    setIsGenerating(false);\n  };\n\n  const getServiceCounts = () => {\n    return {\n      infrastructure: formData.selectedInfrastructure?.length || 0,\n      compute: formData.selectedCompute?.length || 0,\n      integration: formData.selectedIntegration?.length || 0,\n      security: formData.selectedSecurity?.length || 0,\n      monitoring: formData.selectedMonitoring?.length || 0,\n      deployment: formData.selectedDeployment?.length || 0,\n      optimization: formData.selectedOptimization?.length || 0\n    };\n  };\n\n  const serviceCounts = getServiceCounts();\n  const totalServices = Object.values(serviceCounts).reduce((a, b) => a + b, 0);\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Header */}\n      <div>\n        <h2 className=\"text-2xl font-bold text-aws-blue mb-2\">Generate Infrastructure</h2>\n        <p className=\"text-aws-gray-600\">\n          Review your configuration and deploy your Lambda-powered infrastructure automation.\n        </p>\n      </div>\n\n      {/* Project Overview */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Project Info */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          {/* Configuration Summary */}\n          <div className=\"bg-aws-gray-50 border border-aws-gray-200 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n              <Zap className=\"w-5 h-5 mr-2 text-aws-orange\" />\n              Configuration Summary\n            </h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-aws-blue\">{serviceCounts.infrastructure}</div>\n                <div className=\"text-sm text-aws-gray-600\">Infrastructure</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">{serviceCounts.compute}</div>\n                <div className=\"text-sm text-aws-gray-600\">Compute</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-purple-600\">{serviceCounts.security}</div>\n                <div className=\"text-sm text-aws-gray-600\">Security</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-aws-orange\">{totalServices}</div>\n                <div className=\"text-sm text-aws-gray-600\">Total Services</div>\n              </div>\n            </div>\n          </div>\n\n          {/* Live Progress */}\n          {isGenerating && (\n            <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n                <Clock className=\"w-5 h-5 mr-2 text-aws-orange animate-spin\" />\n                Deployment Progress\n              </h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm font-medium text-aws-gray-700\">{currentTask}</span>\n                  <span className=\"text-sm font-bold text-aws-blue\">{progress}%</span>\n                </div>\n                <div className=\"w-full bg-aws-gray-200 rounded-full h-3\">\n                  <div \n                    className=\"bg-gradient-to-r from-aws-orange to-green-500 h-3 rounded-full transition-all duration-500\"\n                    style={{ width: `${progress}%` }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Generated Resources */}\n          {generatedResources.length > 0 && (\n            <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n                <CheckCircle className=\"w-5 h-5 mr-2 text-green-500\" />\n                Generated Resources\n              </h3>\n              <div className=\"space-y-3\">\n                {generatedResources.map((resource, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                      <div>\n                        <div className=\"font-medium text-aws-blue\">{resource.name}</div>\n                        <div className=\"text-sm text-aws-gray-600\">{resource.id}</div>\n                      </div>\n                    </div>\n                    <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs font-medium rounded\">\n                      {resource.status}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Cost Estimate & Actions */}\n        <div className=\"space-y-6\">\n          {/* Cost Estimate */}\n          <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n              <DollarSign className=\"w-5 h-5 mr-2 text-green-600\" />\n              Cost Estimate\n            </h3>\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-green-600\">${estimatedCost}</div>\n              <div className=\"text-sm text-aws-gray-600\">per month</div>\n            </div>\n            <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n              <div className=\"flex items-center text-sm text-blue-800\">\n                <TrendingUp className=\"w-4 h-4 mr-2\" />\n                Auto-scaling enabled for cost optimization\n              </div>\n            </div>\n          </div>\n\n          {/* Project Details */}\n          <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-aws-blue mb-4\">Project Details</h3>\n            <div className=\"space-y-3\">\n              <div>\n                <div className=\"text-sm text-aws-gray-600\">Project Name</div>\n                <div className=\"font-medium text-aws-blue\">{formData.projectName || 'Unnamed Project'}</div>\n              </div>\n              <div>\n                <div className=\"text-sm text-aws-gray-600\">Environment</div>\n                <div className=\"font-medium text-aws-blue\">{formData.environment || 'Development'}</div>\n              </div>\n              <div>\n                <div className=\"text-sm text-aws-gray-600\">AWS Region</div>\n                <div className=\"font-medium text-aws-blue\">{formData.awsRegion || 'us-east-1'}</div>\n              </div>\n            </div>\n          </div>\n\n          {/* Health Status */}\n          {deploymentStatus === 'completed' && (\n            <div className=\"bg-white border border-aws-gray-200 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-aws-blue mb-4 flex items-center\">\n                <Monitor className=\"w-5 h-5 mr-2 text-green-500\" />\n                Health Status\n              </h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-aws-gray-600\">Infrastructure</span>\n                  <span className=\"flex items-center text-green-600\">\n                    <CheckCircle className=\"w-4 h-4 mr-1\" />\n                    Healthy\n                  </span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-aws-gray-600\">Security</span>\n                  <span className=\"flex items-center text-green-600\">\n                    <Shield className=\"w-4 h-4 mr-1\" />\n                    Secure\n                  </span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-aws-gray-600\">Performance</span>\n                  <span className=\"flex items-center text-green-600\">\n                    <TrendingUp className=\"w-4 h-4 mr-1\" />\n                    Optimal\n                  </span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Enhanced Export Section */}\n      {generatedFiles && (\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\n          <h3 className=\"text-lg font-semibold text-blue-800 mb-4 flex items-center\">\n            <Package className=\"w-5 h-5 mr-2\" />\n            Generated Deployment Package\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n            {Object.entries(generatedFiles).map(([filename, content]) => (\n              <div key={filename} className=\"bg-white border border-blue-200 rounded-lg p-3 text-center\">\n                <FileText className=\"w-8 h-8 text-blue-600 mx-auto mb-2\" />\n                <div className=\"font-medium text-blue-800 text-sm\">{filename}</div>\n                <div className=\"text-xs text-blue-600\">{Math.round(content.length / 1024)}KB</div>\n              </div>\n            ))}\n          </div>\n          <p className=\"text-sm text-blue-700\">\n            All files have been generated and downloaded. Extract them to a directory and run the deployment script.\n          </p>\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"flex flex-col sm:flex-row gap-4\">\n        <button\n          onClick={simulateDeployment}\n          disabled={isGenerating || deploymentStatus === 'completed'}\n          className={`flex-1 flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all duration-200 ${\n            isGenerating || deploymentStatus === 'completed'\n              ? 'bg-aws-gray-300 text-aws-gray-500 cursor-not-allowed'\n              : 'bg-aws-orange text-white hover:bg-aws-orange-dark shadow-lg hover:shadow-xl'\n          }`}\n        >\n          {isGenerating ? (\n            <>\n              <Clock className=\"w-5 h-5 animate-spin\" />\n              <span>Deploying Infrastructure...</span>\n            </>\n          ) : deploymentStatus === 'completed' ? (\n            <>\n              <CheckCircle className=\"w-5 h-5\" />\n              <span>Deployment Complete</span>\n            </>\n          ) : (\n            <>\n              <Play className=\"w-5 h-5\" />\n              <span>Deploy Infrastructure</span>\n            </>\n          )}\n        </button>\n\n        <button \n          onClick={exportConfiguration}\n          disabled={isExporting}\n          className={`flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all duration-200 ${\n            isExporting \n              ? 'bg-aws-gray-300 text-aws-gray-500 cursor-not-allowed'\n              : 'bg-green-600 text-white hover:bg-green-700 shadow-lg hover:shadow-xl'\n          }`}\n        >\n          {isExporting ? (\n            <>\n              <Clock className=\"w-5 h-5 animate-spin\" />\n              <span>Exporting...</span>\n            </>\n          ) : (\n            <>\n              <Download className=\"w-5 h-5\" />\n              <span>Export Configuration</span>\n            </>\n          )}\n        </button>\n      </div>\n\n      {/* Navigation */}\n      <div className=\"flex items-center justify-between pt-6 border-t border-aws-gray-200\">\n        <button\n          onClick={prevStep}\n          className=\"flex items-center space-x-2 text-aws-gray-600 hover:text-aws-blue transition-colors duration-200\"\n        >\n          <span>← BACK</span>\n        </button>\n        <div className=\"text-sm text-aws-gray-500\">\n          Step {currentStep} of {totalSteps} - Ready to deploy! 🚀\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GenerateStep; "],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQjC,WAAW,IAAI,SAAS;AAChC,KAAKA,WAAW,IAAI,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoErC,aAAa;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;EACC,CAAC;;EAID;EACA,MAAMuE,eAAe,GAAG,MAAAA,CAAOC,KAAK,EAAEnC,WAAW,KAAK;IACpD;IACA,MAAMoC,KAAK,GAAG,CAAC,MAAM,MAAM,CAAC,OAAO,CAAC,EAAEC,OAAO;IAE7C,MAAMC,GAAG,GAAG,IAAIF,KAAK,CAAC,CAAC;;IAEvB;IACAG,MAAM,CAACC,OAAO,CAACL,KAAK,CAAC,CAACM,OAAO,CAAC,CAAC,CAACC,QAAQ,EAAEC,OAAO,CAAC,KAAK;MACrDL,GAAG,CAACM,IAAI,CAACF,QAAQ,EAAEC,OAAO,CAAC;IAC7B,CAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
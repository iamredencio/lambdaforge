{"ast":null,"code":"import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultBedrockRuntimeHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = config => {\n  var _config$base64Decoder, _config$base64Encoder, _config$disableHostPr, _config$endpointProvi, _config$extensions, _config$httpAuthSchem, _config$httpAuthSchem2, _config$logger, _config$serviceId, _config$urlParser, _config$utf8Decoder, _config$utf8Encoder;\n  return {\n    apiVersion: \"2023-09-30\",\n    base64Decoder: (_config$base64Decoder = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _config$base64Decoder !== void 0 ? _config$base64Decoder : fromBase64,\n    base64Encoder: (_config$base64Encoder = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _config$base64Encoder !== void 0 ? _config$base64Encoder : toBase64,\n    disableHostPrefix: (_config$disableHostPr = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _config$disableHostPr !== void 0 ? _config$disableHostPr : false,\n    endpointProvider: (_config$endpointProvi = config === null || config === void 0 ? void 0 : config.endpointProvider) !== null && _config$endpointProvi !== void 0 ? _config$endpointProvi : defaultEndpointResolver,\n    extensions: (_config$extensions = config === null || config === void 0 ? void 0 : config.extensions) !== null && _config$extensions !== void 0 ? _config$extensions : [],\n    httpAuthSchemeProvider: (_config$httpAuthSchem = config === null || config === void 0 ? void 0 : config.httpAuthSchemeProvider) !== null && _config$httpAuthSchem !== void 0 ? _config$httpAuthSchem : defaultBedrockRuntimeHttpAuthSchemeProvider,\n    httpAuthSchemes: (_config$httpAuthSchem2 = config === null || config === void 0 ? void 0 : config.httpAuthSchemes) !== null && _config$httpAuthSchem2 !== void 0 ? _config$httpAuthSchem2 : [{\n      schemeId: \"aws.auth#sigv4\",\n      identityProvider: ipc => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n      signer: new AwsSdkSigV4Signer()\n    }],\n    logger: (_config$logger = config === null || config === void 0 ? void 0 : config.logger) !== null && _config$logger !== void 0 ? _config$logger : new NoOpLogger(),\n    serviceId: (_config$serviceId = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _config$serviceId !== void 0 ? _config$serviceId : \"Bedrock Runtime\",\n    urlParser: (_config$urlParser = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _config$urlParser !== void 0 ? _config$urlParser : parseUrl,\n    utf8Decoder: (_config$utf8Decoder = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _config$utf8Decoder !== void 0 ? _config$utf8Decoder : fromUtf8,\n    utf8Encoder: (_config$utf8Encoder = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _config$utf8Encoder !== void 0 ? _config$utf8Encoder : toUtf8\n  };\n};","map":{"version":3,"names":["AwsSdkSigV4Signer","NoOpLogger","parseUrl","fromBase64","toBase64","fromUtf8","toUtf8","defaultBedrockRuntimeHttpAuthSchemeProvider","defaultEndpointResolver","getRuntimeConfig","config","_config$base64Decoder","_config$base64Encoder","_config$disableHostPr","_config$endpointProvi","_config$extensions","_config$httpAuthSchem","_config$httpAuthSchem2","_config$logger","_config$serviceId","_config$urlParser","_config$utf8Decoder","_config$utf8Encoder","apiVersion","base64Decoder","base64Encoder","disableHostPrefix","endpointProvider","extensions","httpAuthSchemeProvider","httpAuthSchemes","schemeId","identityProvider","ipc","getIdentityProvider","signer","logger","serviceId","urlParser","utf8Decoder","utf8Encoder"],"sources":["/Users/codinggents/Documents/lambdaforge/node_modules/@aws-sdk/client-bedrock-runtime/dist-es/runtimeConfig.shared.js"],"sourcesContent":["import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultBedrockRuntimeHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2023-09-30\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultBedrockRuntimeHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"Bedrock Runtime\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,eAAe;AACjD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,UAAU,EAAEC,QAAQ,QAAQ,qBAAqB;AAC1D,SAASC,QAAQ,EAAEC,MAAM,QAAQ,mBAAmB;AACpD,SAASC,2CAA2C,QAAQ,+BAA+B;AAC3F,SAASC,uBAAuB,QAAQ,6BAA6B;AACrE,OAAO,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;EAAA,IAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,kBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,cAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,mBAAA,EAAAC,mBAAA;EACxC,OAAO;IACHC,UAAU,EAAE,YAAY;IACxBC,aAAa,GAAAb,qBAAA,GAAED,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEc,aAAa,cAAAb,qBAAA,cAAAA,qBAAA,GAAIR,UAAU;IAClDsB,aAAa,GAAAb,qBAAA,GAAEF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEe,aAAa,cAAAb,qBAAA,cAAAA,qBAAA,GAAIR,QAAQ;IAChDsB,iBAAiB,GAAAb,qBAAA,GAAEH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEgB,iBAAiB,cAAAb,qBAAA,cAAAA,qBAAA,GAAI,KAAK;IACrDc,gBAAgB,GAAAb,qBAAA,GAAEJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEiB,gBAAgB,cAAAb,qBAAA,cAAAA,qBAAA,GAAIN,uBAAuB;IACrEoB,UAAU,GAAAb,kBAAA,GAAEL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEkB,UAAU,cAAAb,kBAAA,cAAAA,kBAAA,GAAI,EAAE;IACpCc,sBAAsB,GAAAb,qBAAA,GAAEN,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEmB,sBAAsB,cAAAb,qBAAA,cAAAA,qBAAA,GAAIT,2CAA2C;IACrGuB,eAAe,GAAAb,sBAAA,GAAEP,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEoB,eAAe,cAAAb,sBAAA,cAAAA,sBAAA,GAAI,CACxC;MACIc,QAAQ,EAAE,gBAAgB;MAC1BC,gBAAgB,EAAGC,GAAG,IAAKA,GAAG,CAACC,mBAAmB,CAAC,gBAAgB,CAAC;MACpEC,MAAM,EAAE,IAAInC,iBAAiB,CAAC;IAClC,CAAC,CACJ;IACDoC,MAAM,GAAAlB,cAAA,GAAER,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE0B,MAAM,cAAAlB,cAAA,cAAAA,cAAA,GAAI,IAAIjB,UAAU,CAAC,CAAC;IAC1CoC,SAAS,GAAAlB,iBAAA,GAAET,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE2B,SAAS,cAAAlB,iBAAA,cAAAA,iBAAA,GAAI,iBAAiB;IACjDmB,SAAS,GAAAlB,iBAAA,GAAEV,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE4B,SAAS,cAAAlB,iBAAA,cAAAA,iBAAA,GAAIlB,QAAQ;IACxCqC,WAAW,GAAAlB,mBAAA,GAAEX,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE6B,WAAW,cAAAlB,mBAAA,cAAAA,mBAAA,GAAIhB,QAAQ;IAC5CmC,WAAW,GAAAlB,mBAAA,GAAEZ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE8B,WAAW,cAAAlB,mBAAA,cAAAA,mBAAA,GAAIhB;EACxC,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
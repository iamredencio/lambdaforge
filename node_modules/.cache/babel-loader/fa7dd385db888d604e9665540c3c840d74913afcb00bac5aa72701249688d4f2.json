{"ast":null,"code":"import _objectWithoutProperties from \"/Users/codinggents/Documents/lambdaforge/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"rateLimiter\"];\nimport { DefaultRateLimiter, RETRY_MODES } from \"@smithy/util-retry\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy extends StandardRetryStrategy {\n  constructor(maxAttemptsProvider, options) {\n    const _ref = options !== null && options !== void 0 ? options : {},\n      {\n        rateLimiter\n      } = _ref,\n      superOptions = _objectWithoutProperties(_ref, _excluded);\n    super(maxAttemptsProvider, superOptions);\n    this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter();\n    this.mode = RETRY_MODES.ADAPTIVE;\n  }\n  async retry(next, args) {\n    return super.retry(next, args, {\n      beforeRequest: async () => {\n        return this.rateLimiter.getSendToken();\n      },\n      afterRequest: response => {\n        this.rateLimiter.updateClientSendingRate(response);\n      }\n    });\n  }\n}","map":{"version":3,"names":["DefaultRateLimiter","RETRY_MODES","StandardRetryStrategy","AdaptiveRetryStrategy","constructor","maxAttemptsProvider","options","_ref","rateLimiter","superOptions","_objectWithoutProperties","_excluded","mode","ADAPTIVE","retry","next","args","beforeRequest","getSendToken","afterRequest","response","updateClientSendingRate"],"sources":["/Users/codinggents/Documents/lambdaforge/node_modules/@smithy/middleware-retry/dist-es/AdaptiveRetryStrategy.js"],"sourcesContent":["import { DefaultRateLimiter, RETRY_MODES } from \"@smithy/util-retry\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy extends StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        const { rateLimiter, ...superOptions } = options ?? {};\n        super(maxAttemptsProvider, superOptions);\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.mode = RETRY_MODES.ADAPTIVE;\n    }\n    async retry(next, args) {\n        return super.retry(next, args, {\n            beforeRequest: async () => {\n                return this.rateLimiter.getSendToken();\n            },\n            afterRequest: (response) => {\n                this.rateLimiter.updateClientSendingRate(response);\n            },\n        });\n    }\n}\n"],"mappings":";;AAAA,SAASA,kBAAkB,EAAEC,WAAW,QAAQ,oBAAoB;AACpE,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,OAAO,MAAMC,qBAAqB,SAASD,qBAAqB,CAAC;EAC7DE,WAAWA,CAACC,mBAAmB,EAAEC,OAAO,EAAE;IACtC,MAAAC,IAAA,GAAyCD,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,CAAC,CAAC;MAAhD;QAAEE;MAA6B,CAAC,GAAAD,IAAA;MAAdE,YAAY,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;IACpC,KAAK,CAACN,mBAAmB,EAAEI,YAAY,CAAC;IACxC,IAAI,CAACD,WAAW,GAAGA,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAI,IAAIR,kBAAkB,CAAC,CAAC;IAC1D,IAAI,CAACY,IAAI,GAAGX,WAAW,CAACY,QAAQ;EACpC;EACA,MAAMC,KAAKA,CAACC,IAAI,EAAEC,IAAI,EAAE;IACpB,OAAO,KAAK,CAACF,KAAK,CAACC,IAAI,EAAEC,IAAI,EAAE;MAC3BC,aAAa,EAAE,MAAAA,CAAA,KAAY;QACvB,OAAO,IAAI,CAACT,WAAW,CAACU,YAAY,CAAC,CAAC;MAC1C,CAAC;MACDC,YAAY,EAAGC,QAAQ,IAAK;QACxB,IAAI,CAACZ,WAAW,CAACa,uBAAuB,CAACD,QAAQ,CAAC;MACtD;IACJ,CAAC,CAAC;EACN;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}